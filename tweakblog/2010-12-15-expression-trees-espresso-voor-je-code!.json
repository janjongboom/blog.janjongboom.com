{
    "title": "Expression Trees - Espresso voor je code!",
    "language": "nl",
    "link": "http://glamour.tweakblogs.net/blog/5747/expression-trees-espresso-voor-je-code%21.html",
    "date": "2010-12-15T09:10:00.000Z",
    "category": "Backend",
    "views": 2906,
    "articleHtml": "Eerder gepubliceerd als <a href=\"http://www.dotnetmag.nl/Artikel/1192/Expression-Trees\" rel=\"external\">Expression Trees</a> in .NET Magazine Q1 2010. <a href=\"http://www.dotnetmag.nl/IBL/GetArticle.aspx?code=1192\" rel=\"external\">Volledige artikel (PDF)</a><br>\r\n<br>\r\n<i>De in het .Net framework 3.5 ge&#xEF;ntroduceerde &#x2018;expression trees&#x2019;, zijn  absoluut het Microsoft equivalent van DeLonghi&#x2019;s famous espresso:  goed gedoseerd levert het een ongelooflijke boost, maar een kopje teveel en je stuitert alle kanten op.</i><br>\r\n<br>\r\nIn dit artikel gaan we in op de vraag wat expression trees zijn en hoe ze delen van je code tot honderd keer sneller kunnen maken. Laten we bij het begin beginnen: wat zijn expressions eigenlijk? Wellicht het meest eenvoudige stuk code demonstreert dit het beste:<br>\r\n<br>C#:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_number\">1</span>&#xA0;+&#xA0;<span class=\"code_number\">2</span>;</code></div></td></tr></table><br>\r\n<br>\r\nDit is een expression pur sang. Het is namelijk: &#x2018;An instruction to execute something that will return a value. &#x2019;Uiteraard kunnen we deze expression ook wat moeilijker maken, door twee variabelen te gebruiken:<br>\r\n<br>C#:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_ident\">a</span>&#xA0;+&#xA0;<span class=\"code_ident\">b</span>;</code></div></td></tr></table><br>\r\n<br>\r\nOmdat we soms de expression niet direct willen uitvoeren, kunnen we deze expression ook in een delegate stoppen. Een delegate is namelijk niets anders dan een expression, een uitvoerbaar stuk code, in een variabele:<br>\r\n<br>C#:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_ident\">PlusDelegate</span>&#xA0;<span class=\"code_ident\">plus</span>&#xA0;=&#xA0;<span class=\"code_keyword\">delegate</span>(<span class=\"code_keyword\">int</span>&#xA0;<span class=\"code_ident\">a</span>,&#xA0;<span class=\"code_keyword\">int</span>&#xA0;<span class=\"code_ident\">b</span>)&#xA0;{&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_ident\">a</span>&#xA0;+&#xA0;<span class=\"code_ident\">b</span>;&#xA0;};</code></div></td></tr></table><br>\r\n<br>\r\n<a href=\"http://www.dotnetmag.nl/IBL/GetArticle.aspx?code=1192\" rel=\"external\">Volledige artikel (PDF)</a>",
    "nextLink": "http://glamour.tweakblogs.net/blog/5732/diakritische-tekens-en-soundex-in-net.html",
    "comments": [
        {
            "author": "dj_vibri",
            "date": "woensdag 15 december 2010 10:14",
            "contentHtml": "en dus een expression tree is...  <img src=\"http://tweakimg.net/g/s/nosmile.gif\" width=\"15\" height=\"15\" alt=\":/\"> <br>\r\nnu ja, moet me sowieso verdiepen in &quot;delegates&quot;, nooit het concept hiervan begrepen <img src=\"http://tweakimg.net/g/s/smile.gif\" width=\"15\" height=\"15\" alt=\":)\"><br>\r\n<br>\r\nupdate: nu pas gezien dat het letterlijk kopie is van de PDF, dan gaan we pdf doornemen <img src=\"http://tweakimg.net/g/s/smile.gif\" width=\"15\" height=\"15\" alt=\":)\"><p class=\"edit\">[Reactie gewijzigd op woensdag 15 december 2010 10:15]</p>",
            "ownReply": false
        },
        {
            "author": "creator1988",
            "date": "woensdag 15 december 2010 10:30",
            "contentHtml": "<blockquote><div class=\"quote\"><a href=\"http://glamour.tweakblogs.net/blog/5747/expression-trees-espresso-voor-je-code!.html#r_77108\">dj_vibri schreef op woensdag 15 december 2010 @ 10:14:</a><br>\r\nnu ja, moet me sowieso verdiepen in &quot;delegates&quot;, nooit het concept hiervan begrepen <img src=\"http://tweakimg.net/g/s/smile.gif\" width=\"15\" height=\"15\" alt=\":)\"></div></blockquote>Een delegate is een variabele die een functie bevat. In Javascript is het bijvoorbeeld een heel bekend pattern:<br>\r\n<br>\r\n<br>JavaScript:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_comment\">//&#xA0;roep&#xA0;de&#xA0;functie&#xA0;&apos;Foo&apos;&#xA0;aan,&#xA0;met&#xA0;als&#xA0;parameter&#xA0;een&#xA0;functie</span>\n<br><span class=\"code_comment\">//&#xA0;Bij&#xA0;het&#xA0;aanroepen&#xA0;gebeurt&#xA0;er&#xA0;nog&#xA0;niets,&#xA0;want&#xA0;de&#xA0;functie&#xA0;wordt&#xA0;nog&#xA0;niet&#xA0;uitgevoerd</span>\n<br><span class=\"code_method\">Foo</span>&#xA0;(&#xA0;<span class=\"code_keyword\">function</span>&#xA0;()&#xA0;{&#xA0;<span class=\"code_method\">alert</span>(<span class=\"code_string\">&apos;hoi&apos;</span>);&#xA0;}&#xA0;);\n<br>\n<br><span class=\"code_keyword\">function</span>&#xA0;<span class=\"code_method\">Foo</span>&#xA0;(<span class=\"code_ident\">bar</span>)&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;bar&#xA0;is&#xA0;een&#xA0;functie,&#xA0;die&#xA0;kunnen&#xA0;we&#xA0;nu&#xA0;uitvoeren</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_method\">bar</span>();&#xA0;<span class=\"code_comment\">//&#xA0;alert(&apos;hoi&apos;);</span>\n<br>}</code></div></td></tr></table>",
            "ownReply": true
        },
        {
            "author": "SilentStorm",
            "date": "woensdag 15 december 2010 10:34",
            "contentHtml": "Dus eigenlijk is het &apos;gewoon&apos; een closure?<br>\r\n<br>\r\nIn de meeste untyped talen kun je die al jaren gebruiken (bv javascript, python).<br>\r\n<br>\r\nBij java gaat er al jaren een discussie of de taal dit moet ondersteunen. Het belangrijkste tegenargument is dat de taal er behoorlijk wat complexer (en dus foutgevoeliger van wordt) en het belangrijkste argument voor is dat je bepaalde operaties nu veel efficienter kan programmeren, door de uit te voeren functie mee te geven, in plaats van een variabele, die de &apos;state&apos; van een methode zet en aan de hand daarvan gaat werken.<br>\r\n<br>\r\nHet gebruik van een expliciete delegate vind ik eigenlijk best een mooie oplossing, die ervoor zorgt dat je niet &apos;per ongelijk&apos; tegen deze functionaliteit aanloopt, maar er wel gebruik van kan maken.<br>\r\n<br>\r\nOracle heeft net, kort na overname van Sun hun eigen (langer lopende) voorstel om closures (of &apos;lambda expressions&apos;) in te bouwen in de volgende versie van java <a href=\"http://www.baptiste-wicht.com/2010/05/oracle-pushes-a-first-version-of-closures/\" rel=\"external\">doorgedrukt</a>, dus we gaan iets soortgelijks daar ook zien over een jaar ofzo.<br>\r\n<br>\r\nHet lijkt erop dat java closures meer volgens deze syntax gaan werken:<br>\r\n<br>\r\n<br>Java:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_keyword\">int</span>&#xA0;<span class=\"code_ident\">i3</span>&#xA0;=&#xA0;#(<span class=\"code_keyword\">int</span>&#xA0;<span class=\"code_ident\">x</span>)(&#xA0;<span class=\"code_ident\">x</span>&#xA0;+&#xA0;<span class=\"code_number\">1</span>&#xA0;).(<span class=\"code_number\">3</span>)</code></div></td></tr></table><br>\r\n(dit is de functie en de invocatie ervan met argument (3) ineens)<br>\r\n<br>\r\nZie oa <a href=\"http://javac.info/\" rel=\"external\">hier</a> voor meer info.<p class=\"edit\">[Reactie gewijzigd op woensdag 15 december 2010 10:34]</p>",
            "ownReply": false
        },
        {
            "author": "creator1988",
            "date": "woensdag 15 december 2010 10:52",
            "contentHtml": "<blockquote><div class=\"quote\"><a href=\"http://glamour.tweakblogs.net/blog/5747/expression-trees-espresso-voor-je-code!.html#r_77113\">SilentStorm schreef op woensdag 15 december 2010 @ 10:34:</a><br>\r\nDus eigenlijk is het &apos;gewoon&apos; een closure?</div></blockquote>Ja delegates zijn closures, zit er in C# al vanaf C# 2.0 in. In 2007 zijn er &apos;Expression Trees&apos; toegevoegd, die qua syntax hetzelfde zijn; maar in plaats van een pointer naar een functie, de functie als boom tonen. Je kunt de boom aflopen, veranderen, analyseren, etc. en daarna weer (runtime) compileren.<br>\r\n<br>\r\nDit biedt ook weer mogelijkheden voor DSL&apos;s, die C# runtime kunnen vertalen naar bijvoorbeeld SQL of XSLT (zie LINQ 2 SQL of LINQ 2 XML).<blockquote><div class=\"quote\">Bij java gaat er al jaren een discussie of de taal dit moet ondersteunen. Het belangrijkste tegenargument is dat de taal er behoorlijk wat complexer (en dus foutgevoeliger van wordt) en het belangrijkste argument voor is dat je bepaalde operaties nu veel efficienter kan programmeren, door de uit te voeren functie mee te geven, in plaats van een variabele, die de &apos;state&apos; van een methode zet en aan de hand daarvan gaat werken.<br>\r\n<br>\r\nHet gebruik van een expliciete delegate vind ik eigenlijk best een mooie oplossing, die ervoor zorgt dat je niet &apos;per ongelijk&apos; tegen deze functionaliteit aanloopt, maar er wel gebruik van kan maken.<br>\r\n<br>\r\nOracle heeft net, kort na overname van Sun hun eigen (langer lopende) voorstel om closures (of &apos;lambda expressions&apos;) in te bouwen in de volgende versie van java <a href=\"http://www.baptiste-wicht.com/2010/05/oracle-pushes-a-first-version-of-closures/\" rel=\"external\">doorgedrukt</a>, dus we gaan iets soortgelijks daar ook zien over een jaar ofzo.<br>\r\n<br>\r\nHet lijkt erop dat java closures meer volgens deze syntax gaan werken:<br>\r\n<br>\r\n<br>Java:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_keyword\">int</span>&#xA0;<span class=\"code_ident\">i3</span>&#xA0;=&#xA0;#(<span class=\"code_keyword\">int</span>&#xA0;<span class=\"code_ident\">x</span>)(&#xA0;<span class=\"code_ident\">x</span>&#xA0;+&#xA0;<span class=\"code_number\">1</span>&#xA0;).(<span class=\"code_number\">3</span>)</code></div></td></tr></table><br>\r\n(dit is de functie en de invocatie ervan met argument (3) ineens)</div></blockquote>Sowieso is het van de zotte dat een taal als Java op dit gebied al zo&apos;n 7 jaar achterloopt op C#. Delegates zijn bijna wel een must als je met callbacks wilt werken etc. Ik hoor inmiddels al 3 jaar dat er volgend jaar echt closure-support komt in Java, dus ik heb de hoop een beetje opgegeven :-).<br>\r\n<br>\r\nOverigens vind ik de .Net syntax wel netter, maar dat is persoonlijk:<br>\r\n<br>\r\n<br>C#:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_ident\">Func</span>&lt;<span class=\"code_keyword\">int</span>,&#xA0;<span class=\"code_keyword\">int</span>&gt;&#xA0;<span class=\"code_ident\">i_plus_1</span>&#xA0;=&#xA0;<span class=\"code_ident\">i</span>&#xA0;=&gt;&#xA0;<span class=\"code_ident\">i</span>&#xA0;+&#xA0;<span class=\"code_number\">1</span>;\n<br><span class=\"code_keyword\">int</span>&#xA0;<span class=\"code_ident\">i3</span>&#xA0;=&#xA0;<span class=\"code_method\">i_plus_1</span>(<span class=\"code_number\">3</span>);</code></div></td></tr></table><p class=\"edit\">[Reactie gewijzigd op woensdag 15 december 2010 10:52]</p>",
            "ownReply": true
        },
        {
            "author": "akakiwi",
            "date": "woensdag 15 december 2010 11:23",
            "contentHtml": "Even over je artikel, en dan met name de footer ervan.<br>\r\nJij maakt in je vrije tijd Funda.nl?",
            "ownReply": false
        },
        {
            "author": "ZpAz",
            "date": "woensdag 15 december 2010 12:34",
            "contentHtml": "<a href=\"http://macrabbit.com/espresso/\" rel=\"external\">Espresso voor je code!</a>",
            "ownReply": false
        },
        {
            "author": "ErikKo",
            "date": "woensdag 15 december 2010 12:43",
            "contentHtml": "En als je in zo&apos;n expression zowel een disjunctie als een conjunctie gebruikt, Is het ook mogelijk left of right associativity te definieren? Dat lijkt me een van de eerste problemen waar je tegenop loopt wanneer je hiermee aan de slag gaat. Of is dat al gedefinieerd?",
            "ownReply": false
        },
        {
            "author": "creator1988",
            "date": "woensdag 15 december 2010 13:02",
            "contentHtml": "<blockquote><div class=\"quote\"><a href=\"http://glamour.tweakblogs.net/blog/5747/expression-trees-espresso-voor-je-code!.html#r_77137\">ErikKo schreef op woensdag 15 december 2010 @ 12:43:</a><br>\r\nEn als je in zo&apos;n expression zowel een disjunctie als een conjunctie gebruikt, Is het ook mogelijk left of right associativity te definieren? Dat lijkt me een van de eerste problemen waar je tegenop loopt wanneer je hiermee aan de slag gaat. Of is dat al gedefinieerd?</div></blockquote>Alle wiskundige operators zijn gerepresenteerd als binary expressions, waarbij je zelf de de left-side en de right-side kunt bepalen.<br>\r\n<br>C#:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_ident\">BinaryExpression</span>&#xA0;<span class=\"code_ident\">test</span>&#xA0;=&#xA0;<span class=\"code_ident\">Expression</span>.<span class=\"code_method\">AndAlso</span>(<span class=\"code_ident\">Expression</span>.<span class=\"code_method\">Constant</span>(<span class=\"code_keyword\">false</span>),&#xA0;<span class=\"code_ident\">Expression</span>.<span class=\"code_method\">Constant</span>(<span class=\"code_keyword\">true</span>));\n<br>\n<br><span class=\"code_comment\">//&#xA0;test&#xA0;is&#xA0;nu:&#xA0;false&#xA0;AndAlso&#xA0;true</span></code></div></td></tr></table><br>\r\nZie ook het plaatje van de binary tree in het PDF doc.<blockquote><div class=\"quote\"><a href=\"http://glamour.tweakblogs.net/blog/5747/expression-trees-espresso-voor-je-code!.html#r_77124\">akakiwi schreef op woensdag 15 december 2010 @ 11:23:</a><br>\r\nEven over je artikel, en dan met name de footer ervan.<br>\r\nJij maakt in je vrije tijd Funda.nl?</div></blockquote>Nooit author bio&apos;s serieus nemen  <img src=\"http://tweakimg.net/g/s/yummie.gif\" width=\"15\" height=\"15\" alt=\":9\"><p class=\"edit\">[Reactie gewijzigd op woensdag 15 december 2010 13:04]</p>",
            "ownReply": true
        }
    ]
}