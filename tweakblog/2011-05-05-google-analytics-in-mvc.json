{
    "title": "Google Analytics in MVC",
    "language": "nl",
    "link": "http://glamour.tweakblogs.net/blog/6508/google-analytics-in-mvc.html",
    "date": "2011-05-05T13:14:00.000Z",
    "category": "Backend",
    "views": 3795,
    "articleHtml": "Wanneer je iets in je MVC applicatie wil implementeren dat op (bijna) elke pagina terug moet komen, zoals Google Analytics, is dat een probleem dat lastig te tackelen is. Tactieken die ik in de praktijk heb gezien:<ul><li>1. Een baseclass maken met daarop de property &apos;GoogleAnalyticsTag&apos;, en alle Masterpages van dit model laten overerven. In de masterpage vervolgens &lt;%= Model.GoogleAnalyticsTag %&gt; doen.</li><li>2. In je action &apos;ViewData[&quot;GoogleAnalyticsTag&quot;]&apos; zetten, om geen afhankelijkheid op alle modellen te hebben.</li><li>3. Een losse action maken, en in je masterpage &apos;&lt;%=Html.RenderAction(&quot;GoogleAnalytics&quot;, &quot;SomeController&quot;)%&gt;&apos;.</li></ul>3 is op zich de &apos;way-to-go&apos; wat mij betreft, maar in tegenstelling tot 1. en 2. waar je in je action (of model) de GA tag zet heb je hier geen action context meer. En dus zag de code er in een van onze applicaties uit als:<br>\r\n<br>C#:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_ident\">var</span>&#xA0;<span class=\"code_ident\">url</span>&#xA0;=&#xA0;<span class=\"code_ident\">HttpContext</span>.<span class=\"code_ident\">Current</span>.<span class=\"code_ident\">Request</span>.<span class=\"code_ident\">Url</span>.<span class=\"code_ident\">PathAndQuery</span>;\n<br><span class=\"code_ident\">var</span>&#xA0;<span class=\"code_ident\">tag</span>&#xA0;=&#xA0;<span class=\"code_string\">&quot;&quot;</span>;\n<br>\n<br><span class=\"code_keyword\">if</span>&#xA0;(<span class=\"code_ident\">url</span>.<span class=\"code_method\">StartsWith</span>(<span class=\"code_string\">&quot;/koop/&quot;</span>))&#xA0;<span class=\"code_ident\">tag</span>&#xA0;+=&#xA0;<span class=\"code_string\">&quot;koop/&quot;</span>;\n<br><span class=\"code_keyword\">if</span>&#xA0;(<span class=\"code_ident\">url</span>.<span class=\"code_method\">StartsWith</span>(<span class=\"code_string\">&quot;/huur/&quot;</span>))&#xA0;<span class=\"code_ident\">tag</span>&#xA0;+=&#xA0;<span class=\"code_string\">&quot;huur/&quot;</span>;\n<br>\n<br><span class=\"code_keyword\">if</span>&#xA0;(<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_method\">Regex</span>(@<span class=\"code_string\">&quot;/(koop|huur)/[\\w-]+/\\w+-\\d+-[\\w-]+/&quot;</span>).<span class=\"code_method\">Match</span>(<span class=\"code_ident\">url</span>).<span class=\"code_ident\">Success</span>)&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">if</span>&#xA0;(<span class=\"code_ident\">url</span>.<span class=\"code_method\">Contains</span>(<span class=\"code_string\">&quot;omschrijving&quot;</span>))&#xA0;<span class=\"code_ident\">tag</span>&#xA0;+=&#xA0;<span class=\"code_string\">&quot;object-omschrijving&quot;</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">if</span>&#xA0;(<span class=\"code_ident\">url</span>.<span class=\"code_method\">Contains</span>(<span class=\"code_string\">&quot;fotos&quot;</span>))&#xA0;<span class=\"code_ident\">tag</span>&#xA0;+=&#xA0;<span class=\"code_string\">&quot;object-fotos&quot;</span>;\n<br>}\n<br>\n<br><span class=\"code_comment\">//&#xA0;etc.&#xA0;etc.&#xA0;etc.</span></code></div></td></tr></table><br>\r\nOnonderhoudbaar, buggevoelig, en super hacky. Dat kan mooier!<br><a name=\"more\"></a><br>\r\n<b>Route Tables</b><br>\r\nOm van een URL een action op een controller te maken hebben we &apos;route tables&apos;. Als je URL er uit ziet als X, doe Y. Een principe dat we ook hier kunnen gebruiken. Alleen dan nog &#xE9;&#xE9;n niveau dieper:<br>\r\n<br>\r\n<i>Als URL is X, dan action is Y, dan GA tag is Z.</i><br>\r\n<br>\r\nWe moeten dus een koppeling maken tussen Y en Z. Tijd voor een eigen routetable!<br>\r\n<br>\r\n<b>Werking</b><br>\r\nOm zo flexibel mogelijk te zijn, ziet een regel in de routetable er ongeveer zo uit:<br>\r\n<br>C#:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_ident\">var</span>&#xA0;<span class=\"code_ident\">routedata</span>&#xA0;=&#xA0;<span class=\"code_comment\">/*&#xA0;de&#xA0;output&#xA0;die&#xA0;we&#xA0;van&#xA0;X-&gt;Y&#xA0;hebben&#xA0;gekregen&#xA0;*/</span>;\n<br>\n<br><span class=\"code_keyword\">if</span>&#xA0;(<span class=\"code_ident\">routedata</span>[<span class=\"code_string\">&quot;controller&quot;</span>]&#xA0;==&#xA0;<span class=\"code_string\">&quot;Object&quot;</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&amp;&amp;&#xA0;<span class=\"code_ident\">routedata</span>[<span class=\"code_string\">&quot;action&quot;</span>]&#xA0;==&#xA0;<span class=\"code_string\">&quot;Detail&quot;</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&amp;&amp;&#xA0;<span class=\"code_ident\">routedata</span>[<span class=\"code_string\">&quot;aanbod&quot;</span>]&#xA0;==&#xA0;<span class=\"code_string\">&quot;Huur&quot;</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&amp;&amp;&#xA0;<span class=\"code_ident\">routedata</span>[<span class=\"code_string\">&quot;pagina&quot;</span>]&#xA0;==&#xA0;<span class=\"code_string\">&quot;Omschrijving&quot;</span>)\n<br>{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">tag</span>&#xA0;=&#xA0;<span class=\"code_string\">&quot;huur/object-omschrijving&quot;</span>;\n<br>}</code></div></td></tr></table><br>\r\nNadeel is dat dit nog steeds niet strong-typed is, en we fouten dus pas heel laat gaan merken (als we dat al doen). Een manier om strong-typed C# at runtime om te zetten naar een ander stuk code (zoals bovenstaand) zijn <a href=\"http://glamour.tweakblogs.net/blog/5747/expression-trees-espresso-voor-je-code!.html\" rel=\"external\">expression trees</a>.<br>\r\n<br>\r\n<b>Nieuwe syntax</b><br>\r\nOnze actie voor een detailpagina ziet er ongeveer zo uit:<br>\r\n<br>C#:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br>4<br>5<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_keyword\">class</span>&#xA0;<span class=\"code_ident\">ObjectController</span>&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_ident\">ActionResult</span>&#xA0;<span class=\"code_method\">Detail</span>&#xA0;(<span class=\"code_ident\">SoortAanbod</span>&#xA0;<span class=\"code_ident\">aanbod</span>,&#xA0;<span class=\"code_keyword\">long</span>&#xA0;<span class=\"code_ident\">id</span>,&#xA0;<span class=\"code_ident\">ObjectPagina</span>&#xA0;<span class=\"code_ident\">pagina</span>)&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;magic</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>}</code></div></td></tr></table><br>\r\nWe willen hier een Google Analytics tag voor maken, op basis van &apos;controller&apos;, &apos;action&apos;, &apos;aanbod&apos; en &apos;pagina&apos;. De nieuwe syntax hiervoor is:<br>\r\n<br>C#:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_comment\">//&#xA0;we&#xA0;zijn&#xA0;niet&#xA0;afhankelijk&#xA0;van&#xA0;&apos;id&apos;;&#xA0;dus&#xA0;gebruiken&#xA0;we&#xA0;hiervoor&#xA0;de&#xA0;default&#xA0;waarde&#xA0;van&#xA0;int:&#xA0;0</span>\n<br><span class=\"code_ident\">CreateRule</span>&lt;<span class=\"code_ident\">ObjectController</span>&gt;(<span class=\"code_ident\">c</span>&#xA0;=&gt;&#xA0;<span class=\"code_ident\">c</span>.<span class=\"code_method\">Detail</span>(<span class=\"code_ident\">SoortAanbod</span>.<span class=\"code_ident\">Huur</span>,&#xA0;<span class=\"code_number\">0</span>,&#xA0;<span class=\"code_ident\">ObjectPagina</span>.<span class=\"code_ident\">Omschrijving</span>),&#xA0;<span class=\"code_string\">&quot;huur/object-omschrijving&quot;</span>);</code></div></td></tr></table><br>\r\n<br>\r\n<b>Ombouwen naar normale syntax</b><br>\r\nAan bovenstaand stuk code kunnen we niet vragen of een bepaalde set RouteData overeenkomt, dus moeten we dit omkatten. Expression trees time dus!<br>\r\n<br>\r\nAllereerst de &apos;MatchesRouteData&apos; functie. Deze vervangt het stuk &apos;routedata[&quot;controller&quot;] == &quot;Object&quot;&apos;, en zorgt ervoor dat deze niet casing ignored, en eventueel langs een ModelBinder gaat als deze beschikbaar is:<br>\r\n<br>C#:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br>29<br>30<br>31<br>32<br>33<br>34<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_comment\">///&#xA0;&lt;summary&gt;</span>\n<br><span class=\"code_comment\">///&#xA0;Validates&#xA0;whether&#xA0;the&#xA0;given&#xA0;key&#xA0;in&#xA0;routeData&#xA0;is&#xA0;equal&#xA0;to&#xA0;the&#xA0;given&#xA0;value</span>\n<br><span class=\"code_comment\">///&#xA0;&lt;/summary&gt;</span>\n<br><span class=\"code_comment\">///&#xA0;&lt;param&#xA0;name=&quot;routeData&quot;&gt;Full&#xA0;set&#xA0;of&#xA0;routedata&lt;/param&gt;</span>\n<br><span class=\"code_comment\">///&#xA0;&lt;param&#xA0;name=&quot;key&quot;&gt;Parameter&#xA0;name&lt;/param&gt;</span>\n<br><span class=\"code_comment\">///&#xA0;&lt;param&#xA0;name=&quot;value&quot;&gt;Expected&#xA0;value&lt;/param&gt;</span>\n<br><span class=\"code_comment\">///&#xA0;&lt;param&#xA0;name=&quot;type&quot;&gt;The&#xA0;full&#xA0;type,&#xA0;for&#xA0;modelbinder&lt;/param&gt;</span>\n<br><span class=\"code_comment\">///&#xA0;&lt;returns&gt;&lt;/returns&gt;</span>\n<br><span class=\"code_keyword\">private</span>&#xA0;<span class=\"code_keyword\">static</span>&#xA0;<span class=\"code_keyword\">bool</span>&#xA0;<span class=\"code_method\">MatchesRouteData</span>(<span class=\"code_ident\">RouteData</span>&#xA0;<span class=\"code_ident\">routeData</span>,&#xA0;<span class=\"code_keyword\">string</span>&#xA0;<span class=\"code_ident\">key</span>,&#xA0;<span class=\"code_keyword\">object</span>&#xA0;<span class=\"code_ident\">value</span>,&#xA0;<span class=\"code_ident\">Type</span>&#xA0;<span class=\"code_ident\">type</span>)\n<br>{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">object</span>&#xA0;<span class=\"code_ident\">outValue</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">if</span>&#xA0;(<span class=\"code_ident\">routeData</span>.<span class=\"code_ident\">Values</span>.<span class=\"code_method\">TryGetValue</span>(<span class=\"code_ident\">key</span>,&#xA0;<span class=\"code_keyword\">out</span>&#xA0;<span class=\"code_ident\">outValue</span>))\n<br>&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;langs&#xA0;smartbinder&#xA0;halen</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">if</span>&#xA0;(<span class=\"code_ident\">ModelBinders</span>.<span class=\"code_ident\">Binders</span>.<span class=\"code_ident\">DefaultBinder</span>&#xA0;!=&#xA0;<span class=\"code_keyword\">null</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">outValue</span>&#xA0;=&#xA0;<span class=\"code_ident\">ModelBinders</span>.<span class=\"code_ident\">Binders</span>.<span class=\"code_ident\">DefaultBinder</span>.<span class=\"code_method\">BindModel</span>(<span class=\"code_method\">GetControllerContext</span>(),&#xA0;<span class=\"code_method\">GetModelBindingContext</span>(<span class=\"code_ident\">key</span>,&#xA0;<span class=\"code_ident\">outValue</span>,&#xA0;<span class=\"code_ident\">type</span>));\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">if</span>&#xA0;(<span class=\"code_ident\">outValue</span>&#xA0;!=&#xA0;<span class=\"code_keyword\">null</span>&#xA0;&amp;&amp;&#xA0;<span class=\"code_ident\">outValue</span>.<span class=\"code_method\">Equals</span>(<span class=\"code_ident\">value</span>))\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_keyword\">true</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">if</span>(<span class=\"code_ident\">outValue</span>&#xA0;!=&#xA0;<span class=\"code_keyword\">null</span>&#xA0;&amp;&amp;&#xA0;<span class=\"code_ident\">outValue</span>.<span class=\"code_method\">ToString</span>().<span class=\"code_method\">Equals</span>(<span class=\"code_ident\">value</span>.<span class=\"code_method\">ToString</span>(),&#xA0;<span class=\"code_ident\">StringComparison</span>.<span class=\"code_ident\">OrdinalIgnoreCase</span>))\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_keyword\">true</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_keyword\">false</span>;\n<br>}\n<br>\n<br><span class=\"code_comment\">//&#xA0;de&#xA0;helper&#xA0;functies&#xA0;&apos;GetControllerContext&apos;&#xA0;en&#xA0;&apos;GetModelBindingContext&apos;&#xA0;staan&#xA0;op&#xA0;PasteBin&#xA0;(zie&#xA0;einde&#xA0;artikel)</span></code></div></td></tr></table><br>\r\n<br>\r\nHet uitgeschreven stuk code wordt met deze functie als volgt:<br>\r\n<br>C#:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_ident\">var</span>&#xA0;<span class=\"code_ident\">routedata</span>&#xA0;=&#xA0;<span class=\"code_comment\">/*&#xA0;de&#xA0;output&#xA0;die&#xA0;we&#xA0;van&#xA0;X-&gt;Y&#xA0;hebben&#xA0;gekregen&#xA0;*/</span>;\n<br>\n<br><span class=\"code_keyword\">if</span>&#xA0;(<span class=\"code_method\">MatchesRouteData</span>(<span class=\"code_ident\">routedata</span>,&#xA0;<span class=\"code_string\">&quot;Controller&quot;</span>,&#xA0;<span class=\"code_string\">&quot;Object&quot;</span>,&#xA0;<span class=\"code_keyword\">typeof</span>(<span class=\"code_keyword\">string</span>))\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&amp;&amp;&#xA0;<span class=\"code_method\">MatchesRouteData</span>(<span class=\"code_ident\">routedata</span>,&#xA0;<span class=\"code_string\">&quot;action&quot;</span>,&#xA0;<span class=\"code_string\">&quot;Detail&quot;</span>,&#xA0;<span class=\"code_keyword\">typeof</span>(<span class=\"code_keyword\">string</span>))\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&amp;&amp;&#xA0;<span class=\"code_method\">MatchesRouteData</span>(<span class=\"code_ident\">routedata</span>,&#xA0;<span class=\"code_string\">&quot;aanbod&quot;</span>,&#xA0;<span class=\"code_ident\">SoortAanbod</span>.<span class=\"code_ident\">Huur</span>,&#xA0;<span class=\"code_keyword\">typeof</span>(<span class=\"code_ident\">SoortAanbod</span>))\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&amp;&amp;&#xA0;<span class=\"code_method\">MatchesRouteData</span>(<span class=\"code_ident\">routedata</span>,&#xA0;<span class=\"code_string\">&quot;pagina&quot;</span>,&#xA0;<span class=\"code_ident\">ObjectPagina</span>.<span class=\"code_ident\">Omschrijving</span>,&#xA0;<span class=\"code_keyword\">typeof</span>(<span class=\"code_ident\">ObjectPagina</span>))\n<br>{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">tag</span>&#xA0;=&#xA0;<span class=\"code_string\">&quot;huur/object-omschrijving&quot;</span>;\n<br>}</code></div></td></tr></table><br>\r\n<br>\r\n<b>Compileren naar Expression Tree</b><br>\r\nDe volgende code zet de strong-typed syntax om naar een stuk code als bovenstaand:<br>\r\n<br>C#:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br>29<br>30<br>31<br>32<br>33<br>34<br>35<br>36<br>37<br>38<br>39<br>40<br>41<br>42<br>43<br>44<br>45<br>46<br>47<br>48<br>49<br>50<br>51<br>52<br>53<br>54<br>55<br>56<br>57<br>58<br>59<br>60<br>61<br>62<br>63<br>64<br>65<br>66<br>67<br>68<br>69<br>70<br>71<br>72<br>73<br>74<br>75<br>76<br>77<br>78<br>79<br>80<br>81<br>82<br>83<br>84<br>85<br>86<br>87<br>88<br>89<br>90<br>91<br>92<br>93<br>94<br>95<br>96<br>97<br>98<br>99<br>100<br>101<br>102<br>103<br>104<br>105<br>106<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_comment\">///&#xA0;&lt;summary&gt;</span>\n<br><span class=\"code_comment\">///&#xA0;Compiles&#xA0;a&#xA0;given&#xA0;rule&#xA0;into&#xA0;a&#xA0;delegate</span>\n<br><span class=\"code_comment\">///&#xA0;&lt;/summary&gt;</span>\n<br><span class=\"code_comment\">///&#xA0;&lt;typeparam&#xA0;name=&quot;TController&quot;&gt;Controller-type&lt;/typeparam&gt;</span>\n<br><span class=\"code_comment\">///&#xA0;&lt;param&#xA0;name=&quot;expectation&quot;&gt;Action&#xA0;on&#xA0;the&#xA0;controller&lt;/param&gt;</span>\n<br><span class=\"code_comment\">///&#xA0;&lt;returns&gt;&lt;/returns&gt;</span>\n<br><span class=\"code_keyword\">internal</span>&#xA0;<span class=\"code_keyword\">static</span>&#xA0;<span class=\"code_ident\">Func</span>&lt;<span class=\"code_ident\">RouteData</span>,&#xA0;<span class=\"code_keyword\">bool</span>&gt;&#xA0;<span class=\"code_ident\">CompileRule</span>&lt;<span class=\"code_ident\">TController</span>&gt;(<span class=\"code_ident\">Expression</span>&lt;<span class=\"code_ident\">Action</span>&lt;<span class=\"code_ident\">TController</span>&gt;&gt;&#xA0;<span class=\"code_ident\">expectation</span>)\n<br>{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;bijhouden&#xA0;van&#xA0;een&#xA0;lijst&#xA0;met&#xA0;expectation</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">Dictionary</span>&lt;<span class=\"code_keyword\">string</span>,&#xA0;<span class=\"code_keyword\">object</span>&gt;&#xA0;<span class=\"code_ident\">expects</span>&#xA0;=&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_ident\">Dictionary</span>&lt;<span class=\"code_keyword\">string</span>,&#xA0;<span class=\"code_keyword\">object</span>&gt;();\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;lijst&#xA0;met&#xA0;de&#xA0;calls&#xA0;naar&#xA0;&apos;MatchesRouteData&apos;</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">List</span>&lt;<span class=\"code_ident\">MethodCallExpression</span>&gt;&#xA0;<span class=\"code_ident\">methodCalls</span>&#xA0;=&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_ident\">List</span>&lt;<span class=\"code_ident\">MethodCallExpression</span>&gt;();\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;eerste&#xA0;argument&#xA0;van&#xA0;de&#xA0;delegate&#xA0;die&#xA0;we&#xA0;maken</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">ParameterExpression</span>&#xA0;<span class=\"code_ident\">parameterExpression</span>&#xA0;=&#xA0;<span class=\"code_ident\">Expression</span>.<span class=\"code_method\">Parameter</span>(<span class=\"code_keyword\">typeof</span>(<span class=\"code_ident\">RouteData</span>),&#xA0;<span class=\"code_string\">&quot;rd&quot;</span>);\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;controller&#xA0;&amp;&#xA0;action&#xA0;uitlezen&#xA0;vanuit&#xA0;de&#xA0;expectation</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">expects</span>.<span class=\"code_method\">Add</span>(<span class=\"code_string\">&quot;Controller&quot;</span>,&#xA0;<span class=\"code_ident\">expectation</span>.<span class=\"code_ident\">Parameters</span>[<span class=\"code_number\">0</span>].<span class=\"code_ident\">Type</span>.<span class=\"code_ident\">Name</span>.<span class=\"code_method\">Replace</span>(<span class=\"code_string\">&quot;Controller&quot;</span>,&#xA0;<span class=\"code_string\">&quot;&quot;</span>));\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">expects</span>.<span class=\"code_method\">Add</span>(<span class=\"code_string\">&quot;Action&quot;</span>,&#xA0;((<span class=\"code_ident\">MethodCallExpression</span>)<span class=\"code_ident\">expectation</span>.<span class=\"code_ident\">Body</span>).<span class=\"code_ident\">Method</span>.<span class=\"code_ident\">Name</span>);\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;alle&#xA0;parameters&#xA0;die&#xA0;zijn&#xA0;meegegeven&#xA0;aan&#xA0;de&#xA0;actie&#xA0;aflopen</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">var</span>&#xA0;<span class=\"code_ident\">parameters</span>&#xA0;=&#xA0;((<span class=\"code_ident\">MethodCallExpression</span>)<span class=\"code_ident\">expectation</span>.<span class=\"code_ident\">Body</span>).<span class=\"code_ident\">Method</span>.<span class=\"code_method\">GetParameters</span>();\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">for</span>&#xA0;(<span class=\"code_ident\">var</span>&#xA0;<span class=\"code_ident\">ix</span>&#xA0;=&#xA0;<span class=\"code_number\">0</span>;&#xA0;<span class=\"code_ident\">ix</span>&#xA0;&lt;&#xA0;<span class=\"code_ident\">parameters</span>.<span class=\"code_ident\">Length</span>;&#xA0;<span class=\"code_ident\">ix</span>++)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;parameterinfo&#xA0;voor&#xA0;het&#xA0;type&#xA0;&amp;&#xA0;de&#xA0;ingevoerde&#xA0;waarde</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">var</span>&#xA0;<span class=\"code_ident\">methodParam</span>&#xA0;=&#xA0;<span class=\"code_ident\">parameters</span>[<span class=\"code_ident\">ix</span>];\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">var</span>&#xA0;<span class=\"code_ident\">expression</span>&#xA0;=&#xA0;((<span class=\"code_ident\">MethodCallExpression</span>)&#xA0;<span class=\"code_ident\">expectation</span>.<span class=\"code_ident\">Body</span>).<span class=\"code_ident\">Arguments</span>[<span class=\"code_ident\">ix</span>];\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">object</span>&#xA0;<span class=\"code_ident\">value</span>;\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;een&#xA0;MemberExpression&#xA0;moeten&#xA0;we&#xA0;even&#xA0;de&#xA0;waarde&#xA0;ophalen&#xA0;die&#xA0;deze&#xA0;referenced</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">if</span>(<span class=\"code_ident\">expression</span>&#xA0;<span class=\"code_keyword\">is</span>&#xA0;<span class=\"code_ident\">MemberExpression</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">value</span>&#xA0;=&#xA0;<span class=\"code_ident\">Expression</span>.<span class=\"code_method\">Lambda</span>(<span class=\"code_ident\">expression</span>).<span class=\"code_method\">Compile</span>().<span class=\"code_method\">DynamicInvoke</span>();\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;Constant&#xA0;is&#xA0;lekker&#xA0;simpel:</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">else</span>&#xA0;<span class=\"code_keyword\">if</span>&#xA0;(<span class=\"code_ident\">expression</span>&#xA0;<span class=\"code_keyword\">is</span>&#xA0;<span class=\"code_ident\">ConstantExpression</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">value</span>&#xA0;=&#xA0;((<span class=\"code_ident\">ConstantExpression</span>)&#xA0;<span class=\"code_ident\">expression</span>).<span class=\"code_ident\">Value</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;Aan&#xA0;andere&#xA0;waardes&#xA0;doen&#xA0;we&#xA0;voorlopig&#xA0;niet</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">else</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">continue</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;null?&#xA0;dan&#xA0;negeren&#xA0;we&#xA0;deze</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">if</span>&#xA0;(!<span class=\"code_ident\">methodParam</span>.<span class=\"code_ident\">ParameterType</span>.<span class=\"code_ident\">IsValueType</span>&#xA0;&amp;&amp;&#xA0;<span class=\"code_ident\">value</span>&#xA0;==&#xA0;<span class=\"code_keyword\">null</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">continue</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;ben&#xA0;je&#xA0;geen&#xA0;reference&#xA0;type?</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">else</span>&#xA0;<span class=\"code_keyword\">if</span>&#xA0;(<span class=\"code_ident\">methodParam</span>.<span class=\"code_ident\">ParameterType</span>.<span class=\"code_ident\">IsValueType</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&amp;&amp;&#xA0;!<span class=\"code_ident\">methodParam</span>.<span class=\"code_ident\">ParameterType</span>.<span class=\"code_ident\">IsEnum</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;generic&#xA0;en&#xA0;geen&#xA0;reference?&#xA0;dan&#xA0;ben&#xA0;je&#xA0;Nullable&lt;&gt;</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">if</span>&#xA0;(<span class=\"code_ident\">methodParam</span>.<span class=\"code_ident\">ParameterType</span>.<span class=\"code_ident\">IsGenericType</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;als&#xA0;value&#xA0;==&#xA0;null,&#xA0;dan&#xA0;negeren</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">if</span>&#xA0;(<span class=\"code_ident\">Activator</span>.<span class=\"code_method\">CreateInstance</span>(<span class=\"code_ident\">methodParam</span>.<span class=\"code_ident\">ParameterType</span>)&#xA0;==&#xA0;<span class=\"code_ident\">value</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">continue</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;anders:&#xA0;als&#xA0;waarde&#xA0;de&#xA0;default&#xA0;waarde&#xA0;van&#xA0;het&#xA0;type&#xA0;is,&#xA0;negeren&#xA0;(voor&#xA0;long&#xA0;is&#xA0;dit&#xA0;dus&#xA0;0)</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">else</span>&#xA0;<span class=\"code_keyword\">if</span>&#xA0;(<span class=\"code_ident\">Activator</span>.<span class=\"code_method\">CreateInstance</span>(<span class=\"code_ident\">methodParam</span>.<span class=\"code_ident\">ParameterType</span>).<span class=\"code_method\">Equals</span>(<span class=\"code_ident\">value</span>))\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">continue</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;voeg&#xA0;toe&#xA0;aan&#xA0;de&#xA0;lijst&#xA0;met&#xA0;expectations</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">expects</span>.<span class=\"code_method\">Add</span>(<span class=\"code_ident\">methodParam</span>.<span class=\"code_ident\">Name</span>,&#xA0;<span class=\"code_ident\">value</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;omzetten&#xA0;van&#xA0;expectation&#xA0;-&gt;&#xA0;method&#xA0;call&#xA0;naar&#xA0;MatchesRouteData</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">foreach</span>&#xA0;(<span class=\"code_ident\">var</span>&#xA0;<span class=\"code_ident\">expect</span>&#xA0;<span class=\"code_keyword\">in</span>&#xA0;<span class=\"code_ident\">expects</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">methodCalls</span>.<span class=\"code_method\">Add</span>(<span class=\"code_ident\">Expression</span>.<span class=\"code_method\">Call</span>(<span class=\"code_keyword\">typeof</span>(<span class=\"code_ident\">AnalyticsHelper</span>).<span class=\"code_method\">GetMethod</span>(<span class=\"code_string\">&quot;MatchesRouteData&quot;</span>,&#xA0;<span class=\"code_ident\">BindingFlags</span>.<span class=\"code_ident\">Static</span>&#xA0;|&#xA0;<span class=\"code_ident\">BindingFlags</span>.<span class=\"code_ident\">NonPublic</span>),\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">parameterExpression</span>,&#xA0;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">Expression</span>.<span class=\"code_method\">Constant</span>(<span class=\"code_ident\">expect</span>.<span class=\"code_ident\">Key</span>),&#xA0;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;we&#xA0;moeten&#xA0;expliciet&#xA0;omzetten&#xA0;naar&#xA0;object;&#xA0;normaal&#xA0;gaat&#xA0;dit&#xA0;impliciet,&#xA0;maar&#xA0;niet&#xA0;in&#xA0;een&#xA0;expression&#xA0;tree</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">Expression</span>.<span class=\"code_method\">Convert</span>(<span class=\"code_ident\">Expression</span>.<span class=\"code_method\">Constant</span>(<span class=\"code_ident\">expect</span>.<span class=\"code_ident\">Value</span>),&#xA0;<span class=\"code_keyword\">typeof</span>(<span class=\"code_keyword\">object</span>)),\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">Expression</span>.<span class=\"code_method\">Constant</span>(<span class=\"code_ident\">expect</span>.<span class=\"code_ident\">Value</span>.<span class=\"code_method\">GetType</span>())));\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;voeg&#xA0;alles&#xA0;samen</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">BinaryExpression</span>&#xA0;<span class=\"code_ident\">wholeExpression</span>&#xA0;=&#xA0;<span class=\"code_keyword\">null</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">foreach</span>&#xA0;(<span class=\"code_ident\">var</span>&#xA0;<span class=\"code_ident\">call</span>&#xA0;<span class=\"code_keyword\">in</span>&#xA0;<span class=\"code_ident\">methodCalls</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">if</span>&#xA0;(<span class=\"code_ident\">wholeExpression</span>&#xA0;==&#xA0;<span class=\"code_keyword\">null</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">wholeExpression</span>&#xA0;=&#xA0;<span class=\"code_ident\">Expression</span>.<span class=\"code_method\">MakeBinary</span>(<span class=\"code_ident\">ExpressionType</span>.<span class=\"code_ident\">AndAlso</span>,&#xA0;<span class=\"code_ident\">Expression</span>.<span class=\"code_method\">Constant</span>(<span class=\"code_keyword\">true</span>),&#xA0;<span class=\"code_ident\">call</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">continue</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;we&#xA0;gebruiken&#xA0;AndAlso</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">wholeExpression</span>&#xA0;=&#xA0;<span class=\"code_ident\">Expression</span>.<span class=\"code_method\">MakeBinary</span>(<span class=\"code_ident\">ExpressionType</span>.<span class=\"code_ident\">AndAlso</span>,&#xA0;<span class=\"code_ident\">wholeExpression</span>,&#xA0;<span class=\"code_ident\">call</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;de&#xA0;delegate&#xA0;wordt&#xA0;nu:</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;routeData&#xA0;=&gt;&#xA0;MatchesRouteData(...)&#xA0;&amp;&amp;&#xA0;MatchesRouteData(...)&#xA0;&amp;&amp;&#xA0;MatchesRouteData(...)</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;hetzelfde&#xA0;als&#xA0;je&#xA0;zelf&#xA0;een&#xA0;lambda&#xA0;hiervoor&#xA0;zou&#xA0;schrijven</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">var</span>&#xA0;<span class=\"code_ident\">del</span>&#xA0;=&#xA0;(<span class=\"code_ident\">Func</span>&lt;<span class=\"code_ident\">RouteData</span>,&#xA0;<span class=\"code_keyword\">bool</span>&gt;)<span class=\"code_ident\">Expression</span>.<span class=\"code_method\">Lambda</span>(<span class=\"code_ident\">wholeExpression</span>,&#xA0;<span class=\"code_ident\">parameterExpression</span>).<span class=\"code_method\">Compile</span>();\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_ident\">del</span>;\n<br>}</code></div></td></tr></table><br>\r\n<br>\r\n<b>Alles samenvoegen</b><br>\r\nDe class, ready to use is te vinden op <a href=\"http://pastebin.com/A7XMp33b\" rel=\"external\">PasteBin</a>. Om deze te gebruiken: in je Global.asax:<br>\r\n<br>C#:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_keyword\">protected</span>&#xA0;<span class=\"code_keyword\">void</span>&#xA0;<span class=\"code_method\">Application_Start</span>()\n<br>{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;Google&#xA0;Analytics&#xA0;strong&#xA0;typed&#xA0;stylo</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">AnalyticsHelper</span>.<span class=\"code_method\">Initialize</span>(<span class=\"code_method\">GetAnalyticsRouteTable</span>());\n<br>}\n<br>\n<br><span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_keyword\">static</span>&#xA0;<span class=\"code_ident\">AnalyticsRouteTable</span>&#xA0;<span class=\"code_method\">GetAnalyticsRouteTable</span>()\n<br>{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">AnalyticsRouteTable</span>&#xA0;<span class=\"code_ident\">r</span>&#xA0;=&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_method\">AnalyticsRouteTable</span>();\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">r</span>.<span class=\"code_ident\">Add</span>&lt;<span class=\"code_ident\">HomepageController</span>&gt;(<span class=\"code_ident\">c</span>&#xA0;=&gt;&#xA0;<span class=\"code_ident\">c</span>.<span class=\"code_method\">Index</span>(<span class=\"code_ident\">SoortAanbod</span>.<span class=\"code_ident\">Koop</span>),&#xA0;<span class=\"code_string\">&quot;koop/&quot;</span>);\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">r</span>.<span class=\"code_ident\">Add</span>&lt;<span class=\"code_ident\">ObjectDetailController</span>&gt;(<span class=\"code_ident\">c</span>&#xA0;=&gt;&#xA0;<span class=\"code_ident\">c</span>.<span class=\"code_method\">Index</span>(<span class=\"code_ident\">SoortAanbod</span>.<span class=\"code_ident\">Koop</span>,&#xA0;<span class=\"code_ident\">ObjectdetailPagina</span>.<span class=\"code_ident\">Overzicht</span>,&#xA0;<span class=\"code_number\">0</span>),&#xA0;<span class=\"code_string\">&quot;koop/object-overzicht&quot;</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">r</span>.<span class=\"code_ident\">Add</span>&lt;<span class=\"code_ident\">ObjectDetailController</span>&gt;(<span class=\"code_ident\">c</span>&#xA0;=&gt;&#xA0;<span class=\"code_ident\">c</span>.<span class=\"code_method\">Index</span>(<span class=\"code_ident\">SoortAanbod</span>.<span class=\"code_ident\">Koop</span>,&#xA0;<span class=\"code_ident\">ObjectdetailPagina</span>.<span class=\"code_ident\">Omschrijving</span>,&#xA0;<span class=\"code_number\">0</span>),&#xA0;<span class=\"code_string\">&quot;koop/object-omschrijving&quot;</span>);\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">r</span>.<span class=\"code_ident\">Add</span>&lt;<span class=\"code_ident\">CmsPageController</span>&gt;(<span class=\"code_ident\">c</span>&#xA0;=&gt;&#xA0;<span class=\"code_ident\">c</span>.<span class=\"code_method\">Index</span>(<span class=\"code_ident\">CmsEntryEnum</span>.<span class=\"code_ident\">Gebruiksvoorwaarden</span>),&#xA0;<span class=\"code_string\">&quot;gebruikersovereenkomst&quot;</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">r</span>.<span class=\"code_ident\">Add</span>&lt;<span class=\"code_ident\">CmsPageController</span>&gt;(<span class=\"code_ident\">c</span>&#xA0;=&gt;&#xA0;<span class=\"code_ident\">c</span>.<span class=\"code_method\">Index</span>(<span class=\"code_ident\">CmsEntryEnum</span>.<span class=\"code_ident\">Privacybeleid</span>),&#xA0;<span class=\"code_string\">&quot;privacybeleid&quot;</span>);\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_ident\">r</span>;\n<br>}</code></div></td></tr></table><br>\r\n<br>\r\nOm je Google Analytics label voor een willekeurige pagina te vinden, heb je aan &#xE9;&#xE9;n regel genoeg:<br>\r\n<br>C#:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_ident\">var</span>&#xA0;<span class=\"code_ident\">label</span>&#xA0;=&#xA0;<span class=\"code_ident\">AnalyticsHelper</span>.<span class=\"code_method\">GetTag</span>(<span class=\"code_ident\">RouteTable</span>.<span class=\"code_ident\">Routes</span>.<span class=\"code_method\">GetRouteData</span>(<span class=\"code_ident\">HttpContext</span>));</code></div></td></tr></table><br>\r\n<br>\r\n<b>Uiteraard bruikbaar voor nog veel meer</b><br>\r\nIn principe voor alles waar je een mapping nodig hebt van URL naar iets anders globaals en onafhankelijks.",
    "nextLink": "http://glamour.tweakblogs.net/blog/6492/ios-like-javascript-photo-gallery-breakdown.html",
    "comments": [
        {
            "author": "loewie1984",
            "date": "donderdag 05 mei 2011 15:29",
            "contentHtml": "Ik zie je posts altijd langs komen en kijk dan even vluchtig. Ik ben totaal niet van de code, maar wat is MVC?<br>\r\n<br>\r\nHandig vind ik het zeerzeker, ik zie mogelijkheden voor een echt gepersonaliseerd dashboard. Verder kudo&apos;s voor je moeite!<br>\r\n<br>\r\n<br>\r\n@onder maar natuurlijk had ik zelf kunnen zoeken... dat was een beetje dom.<br>\r\nMaar die ongein mag je op het forum ook niet meer uithalen dus doe je het hier maar gewoon... lmgtfy very mature  <img src=\"http://tweakimg.net/g/s/yawnee.gif\" width=\"15\" height=\"15\" alt=\":O\"><p class=\"edit\">[Reactie gewijzigd op donderdag 05 mei 2011 15:43]</p>",
            "ownReply": false
        },
        {
            "author": "Chip.",
            "date": "donderdag 05 mei 2011 15:35",
            "contentHtml": "<a href=\"http://lmgtfy.com/?q=MVC\" rel=\"external\" title=\"http://lmgtfy.com/?q=MVC\">http://lmgtfy.com/?q=MVC</a><p class=\"edit\">[Reactie gewijzigd op donderdag 05 mei 2011 15:36]</p>",
            "ownReply": false
        },
        {
            "author": "wha",
            "date": "donderdag 05 mei 2011 15:39",
            "contentHtml": "MVC = Model View Controller<br>\r\n<br>\r\nZie ook <a href=\"http://nl.wikipedia.org/wiki/Model-view-controller-model\" rel=\"external\">wikipedia</a>",
            "ownReply": false
        },
        {
            "author": "RobIII",
            "date": "donderdag 05 mei 2011 15:53",
            "contentHtml": "creator1988 blogt, specifieker, over <a href=\"http://www.asp.net/mvc\" rel=\"external\">ASP.Net MVC</a> (3).<br>\r\n<br>\r\nMVC is eigenlijk gewoon een <a href=\"http://en.wikipedia.org/wiki/Design_pattern\" rel=\"external\">design pattern</a>, maar creator1988 doelt in zijn blogs op het &quot;product&quot; MVC (wat wel het MVC pattern natuurlijk implementeert)<p class=\"edit\">[Reactie gewijzigd op donderdag 05 mei 2011 15:55]</p>",
            "ownReply": false
        },
        {
            "author": "YopY",
            "date": "donderdag 05 mei 2011 21:38",
            "contentHtml": "Als je een Java man was, had je het in XML gedaan <img src=\"http://tweakimg.net/g/s/puh2.gif\" width=\"15\" height=\"15\" alt=\":p\">.<br>\r\n<br>\r\nIn all srsness, het is wel een hele bakkes aan code voor iets dat in theorie eenvoudig zou moeten zijn. Het achterliggende stuk code kun je niet zo heel veel aan doen, denk ik (mind == blank, en ben niet bekend met ASP.NET MVC en wat daarin mogelijk is), maar de daadwerkelijke configuratiecode vind ik niet uitblinken in leesbaarheid en/of gebruiksvriendelijkheid.<br>\r\n<br>\r\nIk zou de controller-specifieke configuratie eerder in de controller zelf doen, danwel bij de daadwerkelijke routing tabel - als die ook &apos;extern&apos; van de controller zelf zit (in het geval van Spring MVC kun je dat in je controller zelf stoppen, dmv een annotation). Als het Java / Spring was zou je dan zoiets kunnen doen, met een eigen annotation:<br>\r\n<br>\r\n<br>Java:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br></code></td><td class=\"phphighlightcode\"><div><code>@<span class=\"code_ident\">Controller</span>\n<br>@<span class=\"code_method\">RequestMapping</span>(<span class=\"code_string\">&quot;/&quot;</span>)\n<br><span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_keyword\">class</span>&#xA0;<span class=\"code_ident\">KoopController</span>&#xA0;{\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;@<span class=\"code_method\">RequestMapping</span>(<span class=\"code_ident\">value</span>=<span class=\"code_string\">&quot;/koop&quot;</span>,&#xA0;<span class=\"code_ident\">method</span>&#xA0;=&#xA0;<span class=\"code_ident\">RequestMethod</span>.<span class=\"code_ident\">GET</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;@<span class=\"code_method\">AnalyticsRoute</span>(<span class=\"code_string\">&quot;koop/&quot;</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_ident\">ModelMap</span>&#xA0;<span class=\"code_method\">index</span>()&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;doe&#xA0;iets</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>&#xA0;&#xA0;&#xA0;&#xA0;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;@<span class=\"code_method\">RequestMapping</span>(<span class=\"code_ident\">value</span>=<span class=\"code_string\">&quot;/koop/overzicht&quot;</span>,&#xA0;<span class=\"code_ident\">method</span>&#xA0;=&#xA0;<span class=\"code_ident\">RequestMethod</span>.<span class=\"code_ident\">GET</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;@<span class=\"code_method\">AnalyticsRoute</span>(<span class=\"code_string\">&quot;koop/object-overzicht&quot;</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_ident\">ModelMap</span>&#xA0;<span class=\"code_method\">overzicht</span>()&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;doe&#xA0;nog&#xA0;iets</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>}</code></div></td></tr></table><p class=\"edit\">[Reactie gewijzigd op donderdag 05 mei 2011 21:38]</p>",
            "ownReply": false
        },
        {
            "author": "HMS",
            "date": "woensdag 11 mei 2011 23:28",
            "contentHtml": "Dat is wel een hele sloot code. Wat is nu eigenlijk het probleem dat je opgelost hebt? Dat mis ik een beetje. (Maar misschien komt dat ook omdat ik niet zo bekend ben met Google Analytics)",
            "ownReply": false
        },
        {
            "author": "creator1988",
            "date": "donderdag 12 mei 2011 10:14",
            "contentHtml": "<blockquote><div class=\"quote\"><a href=\"http://glamour.tweakblogs.net/blog/6508/google-analytics-in-mvc.html#r_87735\">YopY schreef op donderdag 05 mei 2011 @ 21:38:</a><br>\r\nIk zou de controller-specifieke configuratie eerder in de controller zelf doen, danwel bij de daadwerkelijke routing tabel - als die ook &apos;extern&apos; van de controller zelf zit (in het geval van Spring MVC kun je dat in je controller zelf stoppen, dmv een annotation). Als het Java / Spring was zou je dan zoiets kunnen doen, met een eigen annotation:</div></blockquote>Ja, dit kent ASP.NET MVC ook, maar je kunt tags zijn heel erg strong bound met je action. Als je een tag afhankelijk wil maken van een van je parameters kan dat niet op deze manier.",
            "ownReply": true
        }
    ]
}