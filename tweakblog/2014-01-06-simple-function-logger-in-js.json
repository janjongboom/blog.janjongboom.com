{
    "title": "Simple function logger in JS",
    "language": "nl",
    "link": "http://glamour.tweakblogs.net/blog/9761/simple-function-logger-in-js.html",
    "date": "2014-01-06T11:57:00.000Z",
    "category": "Frontend",
    "views": 3509,
    "articleHtml": "Every now and then I end up in a code base where I don&apos;t have a clue about the flow yet; like today when testing out the new keyboard application that we&apos;re developing for Firefox OS. To see whether the flow is actually sane I plug in a simple function logger that allows me to see which functions are called and with what arguments.<br>\r\n<br>JavaScript:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br></code></td><td class=\"phphighlightcode\"><div><code>&#xA0;&#xA0;<span class=\"code_keyword\">function</span>&#xA0;<span class=\"code_method\">log</span>(<span class=\"code_ident\">args</span>)&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">var</span>&#xA0;<span class=\"code_ident\">STRIP_COMMENTS</span>&#xA0;=&#xA0;<span class=\"code_string\">/((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;stole&#xA0;this&#xA0;from&#xA0;http://stackoverflow.com/questions/1007981/how-to-get-function-parameter-names-values-dynamically-from-javascript</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">function</span>&#xA0;<span class=\"code_method\">getParamNames</span>(<span class=\"code_ident\">func</span>)&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">var</span>&#xA0;<span class=\"code_ident\">fnStr</span>&#xA0;=&#xA0;<span class=\"code_ident\">func</span>.<span class=\"code_method\">toString</span>().<span class=\"code_method\">replace</span>(<span class=\"code_ident\">STRIP_COMMENTS</span>,&#xA0;<span class=\"code_string\">&apos;&apos;</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">var</span>&#xA0;<span class=\"code_ident\">result</span>&#xA0;=&#xA0;<span class=\"code_ident\">fnStr</span>.<span class=\"code_method\">slice</span>(<span class=\"code_ident\">fnStr</span>.<span class=\"code_method\">indexOf</span>(<span class=\"code_string\">&apos;(&apos;</span>)<span class=\"code_number\">+1</span>,&#xA0;<span class=\"code_ident\">fnStr</span>.<span class=\"code_method\">indexOf</span>(<span class=\"code_string\">&apos;)&apos;</span>)).<span class=\"code_method\">match</span>(<span class=\"code_string\">/([^\\s,]+)/g</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">if</span>(<span class=\"code_ident\">result</span>&#xA0;===&#xA0;<span class=\"code_keyword\">null</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">result</span>&#xA0;=&#xA0;[];\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_ident\">result</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">console</span>.<span class=\"code_method\">log</span>(<span class=\"code_ident\">args</span>.<span class=\"code_ident\">callee</span>.<span class=\"code_ident\">name</span>,&#xA0;<span class=\"code_method\">getParamNames</span>(<span class=\"code_ident\">args</span>.<span class=\"code_ident\">callee</span>).<span class=\"code_method\">reduce</span>(<span class=\"code_keyword\">function</span>(<span class=\"code_ident\">obj</span>,&#xA0;<span class=\"code_ident\">k</span>,&#xA0;<span class=\"code_ident\">ix</span>)&#xA0;{&#xA0;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">obj</span>[<span class=\"code_ident\">k</span>]&#xA0;=&#xA0;<span class=\"code_ident\">args</span>[<span class=\"code_ident\">ix</span>];&#xA0;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_ident\">obj</span>;&#xA0;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;},&#xA0;{}));\n<br>&#xA0;&#xA0;}</code></div></td></tr></table><br>\r\nNow you can take advantage of this by putting a call to this function on the first line of any function you want to trace:<br>\r\n<br>JavaScript:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_keyword\">function</span>&#xA0;<span class=\"code_method\">a</span>(<span class=\"code_ident\">b</span>,&#xA0;<span class=\"code_ident\">c</span>)&#xA0;{&#xA0;<span class=\"code_method\">log</span>(<span class=\"code_keyword\">arguments</span>);&#xA0;}</code></div></td></tr></table><br>\r\nWhen calling the a function, it will log the function name and an object with argument names and values:<br>\r\n<br>JavaScript:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_method\">a</span>(<span class=\"code_number\">4</span>,&#xA0;<span class=\"code_number\">5</span>);\n<br><span class=\"code_comment\">//&#xA0;a&#xA0;{&#xA0;b:&#xA0;4,&#xA0;c:&#xA0;5&#xA0;}</span></code></div></td></tr></table><br>\r\nRemember to disable &quot;use strict&quot; because accessing callee is not permitted anymore.",
    "nextLink": "http://glamour.tweakblogs.net/blog/9745/simple-async-queue-in-javascript.html",
    "comments": [
        {
            "author": "WeeJeWel",
            "date": "maandag 06 januari 2014 14:20",
            "contentHtml": "Brilliant ^.^",
            "ownReply": false
        },
        {
            "author": "sfranken",
            "date": "dinsdag 07 januari 2014 02:46",
            "contentHtml": "Nice. Is &quot;console&quot; and &quot;console.log&quot; available everywhere though? I&apos;d do something like this:<br>\r\n<br>\r\n<br>code:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><pre>1\n2\n3\n</pre></td><td class=\"phphighlightcode\"><div><pre>if(typeof console ===  &quot;object&quot; &amp;&amp; typeof console.log === &quot;function&quot;) {\r\n    // Console.log code goes here\r\n}</pre></div></td></tr></table><p class=\"edit\">[Reactie gewijzigd op dinsdag 07 januari 2014 02:47]</p>",
            "ownReply": false
        },
        {
            "author": "TheKirk",
            "date": "dinsdag 07 januari 2014 07:56",
            "contentHtml": "<blockquote><div class=\"quote\"><a href=\"http://glamour.tweakblogs.net/blog/9761/simple-function-logger-in-js.html#r_135819\" rel=\"nofollow\">sfranken schreef op dinsdag 07 januari 2014 @ 02:46:</a><br>\r\nNice. Is &quot;console&quot; and &quot;console.log&quot; available everywhere though? I&apos;d do something like this:<br>\r\n<br>\r\n<br>code:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><pre>1\n2\n3\n</pre></td><td class=\"phphighlightcode\"><div><pre>if(typeof console ===  &quot;object&quot; &amp;&amp; typeof console.log === &quot;function&quot;) {\r\n    // Console.log code goes here\r\n}</pre></div></td></tr></table></div></blockquote>As far as I know, the &apos;console&apos; object is available in both Google Chrome, Firefox and Firefox OS:<br>\r\n<br>\r\n<a href=\"https://developer.mozilla.org/en-US/docs/Tools/Web_Console\" rel=\"external nofollow\" title=\"https://developer.mozilla.org/en-US/docs/Tools/Web_Console\">https://developer.mozilla.org/en-US/docs/Tools/Web_Console</a>",
            "ownReply": false
        },
        {
            "author": "creator1988",
            "date": "dinsdag 07 januari 2014 09:47",
            "contentHtml": "<blockquote><div class=\"quote\"><a href=\"http://glamour.tweakblogs.net/blog/9761/simple-function-logger-in-js.html#r_135823\" rel=\"nofollow\">TheKirk schreef op dinsdag 07 januari 2014 @ 07:56:</a><br>\r\n[...]<br>\r\n<br>\r\n<br>\r\nAs far as I know, the &apos;console&apos; object is available in both Google Chrome, Firefox and Firefox OS:<br>\r\n<br>\r\n<a href=\"https://developer.mozilla.org/en-US/docs/Tools/Web_Console\" rel=\"external nofollow\" title=\"https://developer.mozilla.org/en-US/docs/Tools/Web_Console\">https://developer.mozilla.org/en-US/docs/Tools/Web_Console</a></div></blockquote>It&apos;s also available in IE when you have the developer tools (F12) open. At least that was the case in IE8. Maybe IE11 has it by default.",
            "ownReply": true
        }
    ]
}