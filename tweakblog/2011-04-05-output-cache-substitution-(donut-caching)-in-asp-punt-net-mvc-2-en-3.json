{
    "title": "Output Cache Substitution (Donut Caching) in ASP.NET MVC 2 en 3",
    "language": "nl",
    "link": "http://glamour.tweakblogs.net/blog/6358/output-cache-substitution-%28donut-caching%29-in-asp-punt-net-mvc-2-en-3.html",
    "date": "2011-04-05T12:27:00.000Z",
    "category": "Frontend",
    "views": 3125,
    "articleHtml": "Dynamische pagina&apos;s, of het nou in PHP, CGI of .NET is, hebben het internet gemaakt tot wat het nu is; maar hebben &#xE9;&#xE9;n groot nadeel. Voor elk request dient de pagina opnieuw te worden gegenereerd. Oplossing: cachen. Nu hebben we hiervoor in  ASP.NET MVC het &apos;OutputCache&apos; attribuut, dat je op elke Action kan zetten:<br>\r\n<br>C#:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br>4<br>5<br>6<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_comment\">//&#xA0;cache&#xA0;voor&#xA0;1&#xA0;minuut</span>\n<br>[<span class=\"code_method\">OutputCache</span>(<span class=\"code_ident\">Duration</span>&#xA0;=&#xA0;<span class=\"code_number\">60</span>,&#xA0;<span class=\"code_ident\">VaryByParam</span>&#xA0;=&#xA0;<span class=\"code_string\">&quot;id&quot;</span>)]\n<br><span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_ident\">ActionResult</span>&#xA0;<span class=\"code_method\">Detail</span>(<span class=\"code_keyword\">int</span>&#xA0;<span class=\"code_ident\">id</span>)&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;haal&#xA0;model&#xA0;op</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_method\">View</span>();\n<br>}</code></div></td></tr></table><br>\r\n<br>\r\n<b>Probleem</b><br>\r\nIedereen die deze pagina de komende minuut opvraagt krijgt dezelfde versie te zien. Geen probleem voor pagina&apos;s die more-or-less statisch zijn, maar funest wanneer je bijvoorbeeld login informatie toont! Voeg je bijvoorbeeld Output caching toe aan het standaard ASP.NET MVC 2 project (In VS 2010 -&gt; New Project -&gt; ASP.NET MVC 2 Web Application) dan krijg je de volgende situatie:<br>\r\n<img src=\"http://www.100procentjan.nl/tweakers/cache1.png\" title=\"http://www.100procentjan.nl/tweakers/cache1.png\" alt=\"http://www.100procentjan.nl/tweakers/cache1.png\"><br>\r\n<i>Overzichtspagina, je ziet de &apos;last update&apos; datum ter referentie</i><br>\r\n<br>\r\n<img src=\"http://www.100procentjan.nl/tweakers/cache2.png\" title=\"http://www.100procentjan.nl/tweakers/cache2.png\" alt=\"http://www.100procentjan.nl/tweakers/cache2.png\"><br>\r\n<i>Nu loggen we in</i><br>\r\n<br>\r\n<img src=\"http://www.100procentjan.nl/tweakers/cache3.png\" title=\"http://www.100procentjan.nl/tweakers/cache3.png\" alt=\"http://www.100procentjan.nl/tweakers/cache3.png\"><br>\r\n<i>De pagina wordt uit cache geladen (zie &apos;last update&apos;) maar er staat nog steeds een &apos;Log on&apos; knop ipv. &apos;Logged in as jan&apos;.</i><br><a name=\"more\"></a><br>\r\n<b>Oplossing?</b><br>\r\nDe techniek om een hele pagina te cachen <i>behalve</i> een of meerdere kleine stukjes heet &apos;Output Cache Substitution&apos; of &apos;Donut Caching&apos;, maar dit zou in MVC 2 en MVC 3 <a href=\"http://stackoverflow.com/questions/2806663/donut-caching-asp-net-mvc2\" rel=\"external\">niet</a> <a href=\"http://stackoverflow.com/questions/3964393/net-4-mvc2-output-caching-substitute-name\" rel=\"external\">meer</a> <a href=\"http://stackoverflow.com/questions/4685906/is-donut-caching-available-in-asp-net-mvc-3\" rel=\"external\">mogelijk</a> <a href=\"http://stackoverflow.com/questions/5326230/mvc3-outputcache-removeoutputcacheitem-renderaction\" rel=\"external\">zijn</a>. Dat roept om een uitdaging!<br>\r\n<br>\r\n<b>Daarom...</b><br>\r\nAlvast een sneak preview van een project dat ik binnenkort hoop te open sourcen, dat Donut Caching toevoegd aan ASP.NET MVC.<br>\r\n<br>\r\nMaak een nieuwe controller &apos;SharedController&apos; aan in het standaard MVC project, met daarin de actie &apos;Datum&apos;.<br>\r\n<br>C#:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br></code></td><td class=\"phphighlightcode\"><div><code>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_keyword\">class</span>&#xA0;<span class=\"code_ident\">SharedController</span>&#xA0;:&#xA0;<span class=\"code_ident\">Controller</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_ident\">ActionResult</span>&#xA0;<span class=\"code_method\">Datum</span>()\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_method\">View</span>();\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}</code></div></td></tr></table><br>\r\nIn de view die hierbij hoort outputten we de huidige datum &amp; tijd:<br>\r\n<br>ASP.NET:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><pre>1\n2\n</pre></td><td class=\"phphighlightcode\"><div><pre>&lt;%@ Control Language=&quot;C#&quot; Inherits=&quot;System.Web.Mvc.ViewUserControl&lt;dynamic&gt;&quot; %&gt;\r\n&lt;%=DateTime.Now %&gt;</pre></div></td></tr></table><br>\r\n<br>\r\nWe kunnen nu de datum tonen (en dus controleren of er gecachet wordt) door in de Shared/Site.master de regel toe te voegen:<br>\r\n<br>ASP.NET:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><pre>1\n</pre></td><td class=\"phphighlightcode\"><div><pre>&lt;p&gt;Last update &lt;% Html.RenderAction(&quot;Datum&quot;, &quot;Shared&quot;); %&gt;&lt;/p&gt;</pre></div></td></tr></table><br>\r\nElke keer dat je de pagina nu refresht zie je dat de datum verandert.<br>\r\n<br>\r\n<b>Caching aanzetten</b><br>\r\nOok hier werken we weer met een attribuut dat je moet toevoegen aan je Action, met de naam (subject to change) &apos;ActionRenderOptimizer&apos;:<br>\r\n<br>C#:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_comment\">//&#xA0;In&#xA0;Controllers/HomeController.cs</span>\n<br>&#xA0;[<span class=\"code_method\">ActionRenderOptimizer</span>(<span class=\"code_ident\">OutputCaching</span>&#xA0;=&#xA0;<span class=\"code_keyword\">true</span>)]\n<br>&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_ident\">ActionResult</span>&#xA0;<span class=\"code_method\">Index</span>()\n<br>&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">ViewData</span>[<span class=\"code_string\">&quot;Message&quot;</span>]&#xA0;=&#xA0;<span class=\"code_string\">&quot;Welcome&#xA0;to&#xA0;ASP.NET&#xA0;MVC!&quot;</span>;\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_method\">View</span>();\n<br>&#xA0;}</code></div></td></tr></table><br>\r\nWanneer je nu de homepage opvraagt zie je dat de datum steeds hetzelfde blijft. Deze zit namelijk in cache.<br>\r\n<br>\r\n<b>Deel van de pagina niet cachen?</b><br>\r\nWanneer je nu een deel van je pagina niet wil cachen, vervang je de &apos;Html.RenderAction&apos; door &apos;Html.RenderDonutAction&apos;. Om dit te verifieren vervang je de regel in je masterpage door:<br>\r\n<br>ASP.NET:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><pre>1\n2\n</pre></td><td class=\"phphighlightcode\"><div><pre>&lt;p&gt;Last update: &lt;% Html.RenderAction(&quot;Datum&quot;, &quot;Shared&quot;); %&gt;&lt;/p&gt;\r\n&lt;p&gt;Last update donut: &lt;% Html.RenderDonutAction(&quot;Datum&quot;, &quot;Shared&quot;); %&gt;&lt;/p&gt;</pre></div></td></tr></table><br>\r\nRoep je nu de pagina op, dan zie je dat een van de twee datums elke keer opnieuw wordt gegenereerd!<br>\r\n<br>\r\n<img src=\"http://www.100procentjan.nl/tweakers/cache4.png\" title=\"http://www.100procentjan.nl/tweakers/cache4.png\" alt=\"http://www.100procentjan.nl/tweakers/cache4.png\"><br>\r\n<i>Eerste request</i><br>\r\n<br>\r\n<img src=\"http://www.100procentjan.nl/tweakers/cache5.png\" title=\"http://www.100procentjan.nl/tweakers/cache5.png\" alt=\"http://www.100procentjan.nl/tweakers/cache5.png\"><br>\r\n<i>Tweede request</i><br>\r\n<br>\r\n<b>Binnenkort te downloaden</b><br>\r\nBinnenkort te vinden op CodePlex!",
    "nextLink": "http://glamour.tweakblogs.net/blog/6329/validatie-zoals-ux-het-wil-met-asp-punt-net-mvc-2.html",
    "comments": [
        {
            "author": "chrashoverraid",
            "date": "dinsdag 05 april 2011 14:33",
            "contentHtml": "Interessant! Meld je het in deze blog wanneer het op CodePlex staat? Of maak je hiervoor een aparte blogpost?",
            "ownReply": false
        },
        {
            "author": "Rhapsody",
            "date": "dinsdag 05 april 2011 16:51",
            "contentHtml": "Interessante post!! Ben ook benieuwd naar de code :-)",
            "ownReply": false
        }
    ]
}