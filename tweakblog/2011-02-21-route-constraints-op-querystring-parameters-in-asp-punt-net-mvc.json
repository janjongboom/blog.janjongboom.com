{
    "title": "Route constraints op QueryString parameters in ASP.NET MVC",
    "language": "nl",
    "link": "http://glamour.tweakblogs.net/blog/6174/route-constraints-op-querystring-parameters-in-asp-punt-net-mvc.html",
    "date": "2011-02-21T13:11:00.000Z",
    "category": "Frontend",
    "views": 4132,
    "articleHtml": "ASP.NET MVC kent een vrij krachtige routing-engine om URL&apos;s te routen naar de actie die daarbij hoort. Naast puur URL&apos;s mappen kan je tevens constraints toevoegen om je routings wat te finetunen. Bijvoorbeeld praktisch voor de volgende situatie:<br>\r\n<br>code:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><pre>1\n2\n3\n4\n5\n</pre></td><td class=\"phphighlightcode\"><div><pre>/koop/amsterdam/appartement-12345-straat-1/fotos/\r\n-&gt; moet naar ObjectController.Detail\r\n\r\n/koop/amsterdam/appartement-12345-straat-1/reageer/\r\n-&gt; moet naar ObjectController.Contact</pre></div></td></tr></table><br>\r\nDoor een constraint toe te voegen, kan je onderscheid maken tussen deze twee URL&apos;s:<br>\r\n<br>C#:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_comment\">//&#xA0;bijvoorbeeld</span>\n<br><span class=\"code_ident\">routes</span>.<span class=\"code_method\">MapRoute</span>(\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_string\">&quot;object-contact&quot;</span>,\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_string\">&quot;{aanbod}/{plaats}/{type}-{id}-{adres}/{pagina}&quot;</span>,\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">/*&#xA0;...&#xA0;*/</span>,\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">new</span>&#xA0;{&#xA0;<span class=\"code_ident\">pagina</span>&#xA0;=&#xA0;@<span class=\"code_string\">&quot;reageer|bezichtiging&quot;</span>&#xA0;});\n<br>\n<br><span class=\"code_comment\">//&#xA0;als&#xA0;pagina&#xA0;iets&#xA0;anders&#xA0;is&#xA0;dan&#xA0;reageer&#xA0;/&#xA0;bezichtiging&#xA0;matcht&#xA0;de&#xA0;route&#xA0;niet</span></code></div></td></tr></table><br>\r\nProbleem: wanneer je URL&apos;s van binnen als volgt zijn (omdat ASP.NET voor elke URL in je website opslaat of er een fysieke file voor is, en bij miljoenen unieke URL&apos;s is dat een <b>huge</b> leak dat niet automatisch wordt geflusht):<br>\r\n<br>code:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><pre>1\n</pre></td><td class=\"phphighlightcode\"><div><pre>/koop/?id=12345&amp;pagina=reageer</pre></div></td></tr></table><br>\r\nzijn constraints niet meer mogelijk, want dit wordt niet ondersteunt op QueryString parameters. Daarom: de QueryStringConstraint!<br><a name=\"more\"></a><br>\r\nIn gebruik heel simpel. Voor bovenstaande URL kan je de volgende route schrijven:<br>\r\n<br>C#:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br>4<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_ident\">routes</span>.<span class=\"code_method\">MapRoute</span>(<span class=\"code_string\">&quot;object-contact&quot;</span>,\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_string\">&quot;{aanbod}&quot;</span>,\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">/*&#xA0;...&#xA0;*/</span>,\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">new</span>&#xA0;{&#xA0;<span class=\"code_ident\">pagina</span>&#xA0;=&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_method\">QueryStringConstraint</span>(<span class=\"code_string\">&quot;bezichtiging|reageer&quot;</span>)&#xA0;});</code></div></td></tr></table><br>\r\nEn de werking is exact hetzelfde als normaal. The codez:<br>\r\n<br>C#:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_keyword\">class</span>&#xA0;<span class=\"code_ident\">QueryStringConstraint</span>&#xA0;:&#xA0;<span class=\"code_ident\">IRouteConstraint</span>\n<br>{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">private</span>&#xA0;<span class=\"code_keyword\">readonly</span>&#xA0;<span class=\"code_ident\">Regex</span>&#xA0;<span class=\"code_ident\">_regex</span>;\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_method\">QueryStringConstraint</span>(<span class=\"code_keyword\">string</span>&#xA0;<span class=\"code_ident\">regex</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;ctor&#xA0;slaat&#xA0;de&#xA0;regex&#xA0;op&#xA0;voor&#xA0;further&#xA0;use</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">_regex</span>&#xA0;=&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_method\">Regex</span>(<span class=\"code_ident\">regex</span>,&#xA0;<span class=\"code_ident\">RegexOptions</span>.<span class=\"code_ident\">IgnoreCase</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_keyword\">bool</span>&#xA0;<span class=\"code_method\">Match</span>&#xA0;(<span class=\"code_ident\">HttpContextBase</span>&#xA0;<span class=\"code_ident\">httpContext</span>,&#xA0;<span class=\"code_ident\">Route</span>&#xA0;<span class=\"code_ident\">route</span>,&#xA0;<span class=\"code_keyword\">string</span>&#xA0;<span class=\"code_ident\">parameterName</span>,&#xA0;<span class=\"code_ident\">RouteValueDictionary</span>&#xA0;<span class=\"code_ident\">values</span>,&#xA0;<span class=\"code_ident\">RouteDirection</span>&#xA0;<span class=\"code_ident\">routeDirection</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;zit&#xA0;de&#xA0;paramName&#xA0;uberhaupt&#xA0;in&#xA0;de&#xA0;QS</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">if</span>(<span class=\"code_ident\">httpContext</span>.<span class=\"code_ident\">Request</span>.<span class=\"code_ident\">QueryString</span>.<span class=\"code_ident\">AllKeys</span>.<span class=\"code_method\">Contains</span>(<span class=\"code_ident\">parameterName</span>))\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;doe&#xA0;dan&#xA0;check&#xA0;op&#xA0;de&#xA0;meegegeven&#xA0;regex</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_ident\">_regex</span>.<span class=\"code_method\">Match</span>(<span class=\"code_ident\">httpContext</span>.<span class=\"code_ident\">Request</span>.<span class=\"code_ident\">QueryString</span>[<span class=\"code_ident\">parameterName</span>]).<span class=\"code_ident\">Success</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;anders&#xA0;return&#xA0;false</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_keyword\">false</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>}</code></div></td></tr></table>",
    "nextLink": "http://glamour.tweakblogs.net/blog/6158/mobile-device-detection.html",
    "comments": [
        {
            "author": "Jogai",
            "date": "maandag 21 februari 2011 20:49",
            "contentHtml": "Handig. Kun je misschien ook eens bloggen over het zoeken in ASP.net MVC? Een goed artikel kon ik er nog niet over vinden. Ik heb het opgelost met een form waarvan de waardes optioneel in een iqueryable worden opgenomen. Dit werkt echter niet heel mooi, en ik verwacht dat er iets eleganters voor is.",
            "ownReply": false
        }
    ]
}