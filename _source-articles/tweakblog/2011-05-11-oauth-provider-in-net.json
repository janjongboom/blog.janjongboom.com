{
    "title": "OAuth provider in .NET",
    "language": "nl",
    "link": "http://glamour.tweakblogs.net/blog/6538/oauth-provider-in-net.html",
    "date": "2011-05-11T15:45:00.000Z",
    "category": "Frontend",
    "views": 3376,
    "articleHtml": "Om maar eens met een auto-analogie te komen: wanneer je (iets te onbetrouwbare) neefje iets uit de kofferbak van je auto moet halen, kan het een onveilig gevoel geven om hem direct de sleutel van je nieuwe A4 te overhandigen. Hij kan immers met die sleutel de auto starten, wegrijden en je no-claim om zeep helpen. En doet hij het niet nu, dan kan hij de sleutel kopi&#xEB;ren en het morgen proberen. Zou het niet mooi zijn om een sleutel te geven die alleen werkt op de kofferbak?<br>\r\n<br>\r\nZelfde geldt voor 3rd parties die bij jouw data willen. Wanneer een applicatie alleen een lijstje met de huizen die jij bewaard op funda wil tonen, waarom zou je dan je gebruikersnaam en wachtwoord moeten geven? Daar kan de applicatie immers &#xE1;lles mee. Daarom: <a href=\"http://oauth.net/\" rel=\"external\">OAuth</a>.<br>\r\n<br>\r\n<i><b>An open protocol to allow secure API authorization in a simple and standard method from desktop and web applications.</b></i><br>\r\n<i>&quot;If you&apos;re storing protected data on your users&apos; behalf, they shouldn&apos;t be spreading their passwords around the web to get access to it. Use OAuth to give your users access to their data while protecting their account credentials.&quot;</i><br>\r\n<br>\r\nOAuth is dus een open protocol waarmee je 3rd parties toegang kan geven tot data van je gebruikers, zonder dat de gebruiker zijn wachtwoord met de 3rd party hoeft te delen.<br><a name=\"more\"></a><br>\r\n<b>Werking</b><br>\r\nMet in de hoofdrollen &apos;3rd party&apos;, &apos;Leverancier&apos; en onze gebruiker &apos;jan@funda.nl&apos;.<ul><li>- 3rd party: &quot;Hallo Leverancier. Ik wil gegevens van een gebruiker hebben. Hier is mijn door jullie gegeven key!&quot;</li><li>- Leverancier: &quot;Hallo 3rd party. Hier is een token om aan je gebruiker te geven!&quot;</li><li>- 3rd party: &quot;Gebruiker: ga naar de website van Leverancier met deze token.&quot;</li><li>- <a href=\"mailto:jan@funda.nl\" title=\"mailto:jan@funda.nl\">mailto:jan@funda.nl</a>: &quot;Hallo Leverancier. Ik heb hier een token, en mijn gebruikersgegevens!&quot;</li><li>- Leverancier: &quot;Prima in orde. Zeg maar tegen de 3rd party dat hij terug mag komen.&quot;</li><li>- 3rd party: &quot;Ik heb hier een token, kan ik hier iets mee?&quot;</li><li>- Leverancier: &quot;Ja, die token is zojuist gevalideerd. Hier is een nieuwe permanente token waarmee je voortaan alle gegevens van je gebruiker kan opvragen.&quot;</li></ul>De 3rd party heeft nu een gevalideerde token en kan deze gebruiken om te authenticeren. Zoals je zag in bovenstaande lijst hoeft de gebruiker nooit aan de 3rd party bekend te maken wie hij is. Met de token kunnen gegevens opgevraagd worden:<ul><li>- 3rd party: &quot;Ik wil graag de bewaarde woningen ophalen die bij deze token horen.&quot;</li><li>- Leverancier: &quot;Prima. Hier heb je ze.&quot;</li></ul><img src=\"http://www.100procentjan.nl/tweakers/oauth.png\" title=\"http://www.100procentjan.nl/tweakers/oauth.png\" alt=\"http://www.100procentjan.nl/tweakers/oauth.png\"><br>\r\n<a href=\"http://www.snipe.net/2009/07/writing-your-first-twitter-application-with-oauth/\" rel=\"external\">via</a><br>\r\n<br>\r\n<b>En voor de gebruiker?</b><br>\r\nIk heb een voorbeeld client voor Twitter gepakt, en de URLs veranderd naar URLs van mezelf. Bij OAuth zijn er 3 type URLs te onderscheiden:<ul><li>request_token: Opvragen van een request token</li><li>authenticate: Authenticatie URL voor de gebruiker, waarbij je het token meegeeft in de URL</li><li>access_token: Inwissel van request token -&gt; access token, om echt data op te halen</li></ul><b>Request token</b><br>\r\nRequest token is aangevraagd, en de applicatie kondigt aan dat er authenticatie gaat plaatsvinden:<br>\r\n<img src=\"http://www.100procentjan.nl/tweakers/oauth2.png\" title=\"http://www.100procentjan.nl/tweakers/oauth2.png\" alt=\"http://www.100procentjan.nl/tweakers/oauth2.png\"><br>\r\n<br>\r\n<b>Authenticatie</b><br>\r\nDe gebruiker authenticeert zich op de normale website van de leverancier. Je ziet de token die zonet gegenereert is:<br>\r\n<img src=\"http://www.100procentjan.nl/tweakers/oauth3.png\" title=\"http://www.100procentjan.nl/tweakers/oauth3.png\" alt=\"http://www.100procentjan.nl/tweakers/oauth3.png\"><br>\r\n<br>\r\n<b>Uitwisselen request token -&gt; access token</b><br>\r\nIn dit geval moet er handmatig worden aangegeven (want Windows applicatie; in een webapplicatie stuur je de gebruiker door naar de &apos;authenticate&apos; URL met als extra param &apos;oauth_callback&apos;) dat er ingelogd is:<br>\r\n<img src=\"http://www.100procentjan.nl/tweakers/oauth4.png\" title=\"http://www.100procentjan.nl/tweakers/oauth4.png\" alt=\"http://www.100procentjan.nl/tweakers/oauth4.png\"><br>\r\n<br>\r\n<b>Opvragen van data met de access token</b><br>\r\nElk request dat geauthoriseerd moet worden kan nu gedaan worden. Zie hier de response van een beveiligd contract:<br>\r\n<img src=\"http://www.100procentjan.nl/tweakers/oauth5.png\" title=\"http://www.100procentjan.nl/tweakers/oauth5.png\" alt=\"http://www.100procentjan.nl/tweakers/oauth5.png\"><br>\r\n<br>\r\n<b>Meer info?</b><br>\r\nZie deze presentatie op <a href=\"http://www.slideshare.net/leahculver/implementing-oauth\" rel=\"external\">Slideshare</a>.<br>\r\n<br>\r\n<b>Implementatie</b><br>\r\nOm je eigen data beschikbaar te maken via OAuth kan je helemaal zelf een provider schrijven middels de RFC, of dit doen met behulp van een pakket als <a href=\"https://github.com/bittercoder/DevDefined.OAuth\" rel=\"external\">DevDefined.OAuth</a> (open source). Een implementatie op basis van dit framework bestaat uit 4 onderdelen:<ul><li>1. Provider: set van classes die globaal alle requests doorlussen naar je implementaties.</li><li>2. Inspectors: validatie van berichten. Bijvoorbeeld op timestamp, gebruikte hashing of encryptiemethodes.</li><li>3. Consumer store: mapping tussen je DAO en DevDefined.</li><li>4. Token store: mapping tussen je DAO en DevDefined.</li></ul><i><b>N.B.</b> De source staat ook onderaan in ZIP formaat.</i><br>\r\n<br>\r\n<b>Consumer store</b><br>\r\nWanneer je geen RSA encryptie gebruikt, is deze store behoorlijk simpel, en bestaat uit 2 methodes:<br>\r\n<br>C#:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br>29<br>30<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_keyword\">class</span>&#xA0;<span class=\"code_ident\">ConsumerStore</span>&#xA0;:&#xA0;<span class=\"code_ident\">IConsumerStore</span>\n<br>{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;bepaal&#xA0;op&#xA0;basis&#xA0;van&#xA0;context&#xA0;of&#xA0;een&#xA0;gebruiker&#xA0;je&#xA0;API&#xA0;mag&#xA0;gebruiken&#xA0;voor&#xA0;OAuth</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_keyword\">bool</span>&#xA0;<span class=\"code_method\">IsConsumer</span>&#xA0;(<span class=\"code_ident\">IConsumer</span>&#xA0;<span class=\"code_ident\">consumer</span>)&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;iets&#xA0;als:</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">var</span>&#xA0;<span class=\"code_ident\">c</span>&#xA0;=&#xA0;<span class=\"code_ident\">Dao</span>.<span class=\"code_method\">GetConsumer</span>(<span class=\"code_ident\">consumer</span>.<span class=\"code_ident\">ConsumerKey</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_ident\">c</span>&#xA0;!=&#xA0;<span class=\"code_keyword\">null</span>&#xA0;&amp;&amp;&#xA0;<span class=\"code_ident\">c</span>.<span class=\"code_ident\">Rights</span>.<span class=\"code_ident\">OAuth</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_keyword\">void</span>&#xA0;<span class=\"code_method\">SetConsumerSecret</span>&#xA0;(<span class=\"code_ident\">IConsumer</span>&#xA0;<span class=\"code_ident\">consumer</span>,&#xA0;<span class=\"code_keyword\">string</span>&#xA0;<span class=\"code_ident\">consumerSecret</span>)&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;meestal&#xA0;doe&#xA0;je&#xA0;dit&#xA0;ergens&#xA0;anders,&#xA0;dus&#xA0;niet&#xA0;nodig</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_keyword\">string</span>&#xA0;<span class=\"code_method\">GetConsumerSecret</span>&#xA0;(<span class=\"code_ident\">IOAuthContext</span>&#xA0;<span class=\"code_ident\">consumer</span>)&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;iets&#xA0;als:</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;LET&#xA0;OP!&#xA0;Je&#xA0;secret&#xA0;wordt&#xA0;gebruikt&#xA0;om&#xA0;requests</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;te&#xA0;hashen,&#xA0;raadt&#xA0;dus&#xA0;aan&#xA0;om&#xA0;deze&#xA0;geheim&#xA0;te&#xA0;houden</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_ident\">Dao</span>.<span class=\"code_method\">GetSecret</span>(<span class=\"code_ident\">consumer</span>.<span class=\"code_ident\">ConsumerKey</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;niet&#xA0;nodig&#xA0;als&#xA0;je&#xA0;geen&#xA0;RSA&#xA0;gebruikt</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_keyword\">void</span>&#xA0;<span class=\"code_method\">SetConsumerCertificate</span>&#xA0;(<span class=\"code_ident\">IConsumer</span>&#xA0;<span class=\"code_ident\">consumer</span>,&#xA0;<span class=\"code_ident\">X509Certificate2</span>&#xA0;<span class=\"code_ident\">certificate</span>)&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">throw</span>&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_method\">NotImplementedException</span>();\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_ident\">AsymmetricAlgorithm</span>&#xA0;<span class=\"code_method\">GetConsumerPublicKey</span>&#xA0;(<span class=\"code_ident\">IConsumer</span>&#xA0;<span class=\"code_ident\">consumer</span>)&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">throw</span>&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_method\">NotImplementedException</span>();\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>}</code></div></td></tr></table><br>\r\n<br>\r\n<b>Token store</b><br>\r\nHier een in-memory store. Je kunt deze makkelijk vertalen naar een met een database backend.<br>\r\n<br>C#:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br>29<br>30<br>31<br>32<br>33<br>34<br>35<br>36<br>37<br>38<br>39<br>40<br>41<br>42<br>43<br>44<br>45<br>46<br>47<br>48<br>49<br>50<br>51<br>52<br>53<br>54<br>55<br>56<br>57<br>58<br>59<br>60<br>61<br>62<br>63<br>64<br>65<br>66<br>67<br>68<br>69<br>70<br>71<br>72<br>73<br>74<br>75<br>76<br>77<br>78<br>79<br>80<br>81<br>82<br>83<br>84<br>85<br>86<br>87<br>88<br>89<br>90<br>91<br>92<br>93<br>94<br>95<br>96<br>97<br>98<br>99<br>100<br>101<br>102<br>103<br>104<br>105<br>106<br>107<br>108<br>109<br>110<br>111<br>112<br>113<br>114<br>115<br>116<br>117<br>118<br>119<br>120<br>121<br>122<br>123<br>124<br>125<br>126<br>127<br>128<br>129<br>130<br>131<br>132<br>133<br>134<br>135<br>136<br>137<br>138<br>139<br>140<br>141<br>142<br>143<br>144<br>145<br>146<br>147<br>148<br>149<br>150<br>151<br>152<br>153<br>154<br>155<br>156<br>157<br>158<br>159<br>160<br>161<br>162<br>163<br>164<br>165<br>166<br>167<br>168<br>169<br>170<br>171<br>172<br>173<br>174<br>175<br>176<br>177<br>178<br>179<br>180<br>181<br>182<br>183<br>184<br>185<br>186<br>187<br>188<br>189<br>190<br>191<br>192<br>193<br>194<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_keyword\">class</span>&#xA0;<span class=\"code_ident\">SimpleTokenStore</span>&#xA0;:&#xA0;<span class=\"code_ident\">ITokenStore</span>\n<br>{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;repo&apos;s</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">private</span>&#xA0;<span class=\"code_keyword\">static</span>&#xA0;<span class=\"code_ident\">List</span>&lt;<span class=\"code_ident\">IToken</span>&gt;&#xA0;<span class=\"code_ident\">_requestTokenRepository</span>&#xA0;=&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_ident\">List</span>&lt;<span class=\"code_ident\">IToken</span>&gt;();\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">private</span>&#xA0;<span class=\"code_keyword\">static</span>&#xA0;<span class=\"code_ident\">List</span>&lt;<span class=\"code_ident\">IToken</span>&gt;&#xA0;<span class=\"code_ident\">_accessTokenRepository</span>&#xA0;=&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_ident\">List</span>&lt;<span class=\"code_ident\">IToken</span>&gt;();\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;wordt&#xA0;aangeroepen&#xA0;als&#xA0;een&#xA0;gebruiker&#xA0;een&#xA0;token&#xA0;wil&#xA0;hebben</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_ident\">IToken</span>&#xA0;<span class=\"code_method\">CreateRequestToken</span>(<span class=\"code_ident\">IOAuthContext</span>&#xA0;<span class=\"code_ident\">context</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">if</span>&#xA0;(<span class=\"code_ident\">context</span>&#xA0;==&#xA0;<span class=\"code_keyword\">null</span>)&#xA0;<span class=\"code_keyword\">throw</span>&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_method\">ArgumentNullException</span>(<span class=\"code_string\">&quot;context&quot;</span>);\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">var</span>&#xA0;<span class=\"code_ident\">token</span>&#xA0;=&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_ident\">RequestToken</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">ConsumerKey</span>&#xA0;=&#xA0;<span class=\"code_ident\">context</span>.<span class=\"code_ident\">ConsumerKey</span>,\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">Realm</span>&#xA0;=&#xA0;<span class=\"code_ident\">context</span>.<span class=\"code_ident\">Realm</span>,\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;je&#xA0;tokens&#xA0;kunnen&#xA0;gewoon&#xA0;nieuwe&#xA0;guid&apos;s&#xA0;zijn</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">Token</span>&#xA0;=&#xA0;<span class=\"code_ident\">Guid</span>.<span class=\"code_method\">NewGuid</span>().<span class=\"code_method\">ToString</span>(),\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;je&#xA0;secret&#xA0;wordt&#xA0;wederom&#xA0;gebruikt&#xA0;om&#xA0;te&#xA0;hashen</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">TokenSecret</span>&#xA0;=&#xA0;<span class=\"code_ident\">Guid</span>.<span class=\"code_method\">NewGuid</span>().<span class=\"code_method\">ToString</span>(),\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;};\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">_requestTokenRepository</span>.<span class=\"code_method\">Add</span>(<span class=\"code_ident\">token</span>);\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_ident\">token</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;aangeroepen&#xA0;door&#xA0;je&#xA0;3rd&#xA0;party&#xA0;als&#xA0;deze&#xA0;zijn&#xA0;request&#xA0;token</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;wil&#xA0;inwisselen&#xA0;voor&#xA0;een&#xA0;access&#xA0;token</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_keyword\">void</span>&#xA0;<span class=\"code_method\">ConsumeRequestToken</span>(<span class=\"code_ident\">IOAuthContext</span>&#xA0;<span class=\"code_ident\">requestContext</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">if</span>&#xA0;(<span class=\"code_ident\">requestContext</span>&#xA0;==&#xA0;<span class=\"code_keyword\">null</span>)&#xA0;<span class=\"code_keyword\">throw</span>&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_method\">ArgumentNullException</span>(<span class=\"code_string\">&quot;requestContext&quot;</span>);\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;vind&#xA0;request&#xA0;token</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">RequestToken</span>&#xA0;<span class=\"code_ident\">requestToken</span>&#xA0;=&#xA0;<span class=\"code_method\">GetRequestToken</span>(<span class=\"code_ident\">requestContext</span>);\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;als&#xA0;AccessDenied,&#xA0;dan&#xA0;heeft&#xA0;de&#xA0;user&#xA0;nog&#xA0;niet&#xA0;gevalideerd</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">if</span>(<span class=\"code_ident\">requestToken</span>.<span class=\"code_ident\">AccessDenied</span>)&#xA0;<span class=\"code_keyword\">throw</span>&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_method\">OAuthException</span>(<span class=\"code_ident\">requestContext</span>,&#xA0;<span class=\"code_string\">&quot;The&#xA0;request&#xA0;token&#xA0;wasn&apos;t&#xA0;validated&quot;</span>,&#xA0;<span class=\"code_string\">&quot;Redirect&#xA0;your&#xA0;user&#xA0;to&#xA0;the&#xA0;authorize&#xA0;page&quot;</span>);\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;zet&#xA0;token&#xA0;als&#xA0;gebruikt,&#xA0;en&#xA0;maak&#xA0;een&#xA0;access&#xA0;token&#xA0;aan</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_method\">UseUpRequestToken</span>(<span class=\"code_ident\">requestContext</span>,&#xA0;<span class=\"code_ident\">requestToken</span>);\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;UPDATE&#xA0;in&#xA0;database</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;gebruik&#xA0;een&#xA0;access&#xA0;token.&#xA0;valideert&#xA0;geldigheid.</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_keyword\">void</span>&#xA0;<span class=\"code_method\">ConsumeAccessToken</span>(<span class=\"code_ident\">IOAuthContext</span>&#xA0;<span class=\"code_ident\">accessContext</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">AccessToken</span>&#xA0;<span class=\"code_ident\">accessToken</span>&#xA0;=&#xA0;<span class=\"code_method\">GetAccessToken</span>(<span class=\"code_ident\">accessContext</span>);\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">if</span>&#xA0;(<span class=\"code_ident\">accessToken</span>&#xA0;==&#xA0;<span class=\"code_keyword\">null</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">throw</span>&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_method\">OAuthException</span>(<span class=\"code_ident\">accessContext</span>,&#xA0;<span class=\"code_ident\">OAuthProblems</span>.<span class=\"code_ident\">TokenRejected</span>,&#xA0;<span class=\"code_string\">&quot;Token&#xA0;could&#xA0;not&#xA0;be&#xA0;found&quot;</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">if</span>&#xA0;(<span class=\"code_ident\">accessToken</span>.<span class=\"code_ident\">ExpireyDate</span>&#xA0;&lt;&#xA0;<span class=\"code_ident\">Clock</span>.<span class=\"code_ident\">Now</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">throw</span>&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_method\">OAuthException</span>(<span class=\"code_ident\">accessContext</span>,&#xA0;<span class=\"code_ident\">OAuthProblems</span>.<span class=\"code_ident\">TokenExpired</span>,&#xA0;<span class=\"code_string\">&quot;Token&#xA0;has&#xA0;expired&quot;</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;haal&#xA0;het&#xA0;access&#xA0;token&#xA0;dat&#xA0;bij&#xA0;een&#xA0;request&#xA0;token&#xA0;hoort&#xA0;(of&#xA0;NULL&#xA0;als&#xA0;niet&#xA0;beschikbaar)</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_ident\">IToken</span>&#xA0;<span class=\"code_method\">GetAccessTokenAssociatedWithRequestToken</span>(<span class=\"code_ident\">IOAuthContext</span>&#xA0;<span class=\"code_ident\">requestContext</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">RequestToken</span>&#xA0;<span class=\"code_ident\">requestToken</span>&#xA0;=&#xA0;<span class=\"code_method\">GetRequestToken</span>(<span class=\"code_ident\">requestContext</span>);\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_ident\">requestToken</span>.<span class=\"code_ident\">AccessToken</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;bekijkt&#xA0;of&#xA0;de&#xA0;gebruiker&#xA0;het&#xA0;request&#xA0;token&#xA0;al&#xA0;gevalideerd&#xA0;heeft</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_ident\">RequestForAccessStatus</span>&#xA0;<span class=\"code_method\">GetStatusOfRequestForAccess</span>(<span class=\"code_ident\">IOAuthContext</span>&#xA0;<span class=\"code_ident\">accessContext</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">RequestToken</span>&#xA0;<span class=\"code_ident\">request</span>&#xA0;=&#xA0;<span class=\"code_method\">GetRequestToken</span>(<span class=\"code_ident\">accessContext</span>);\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">if</span>&#xA0;(<span class=\"code_ident\">request</span>.<span class=\"code_ident\">AccessDenied</span>)&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_ident\">RequestForAccessStatus</span>.<span class=\"code_ident\">Denied</span>;\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_ident\">RequestForAccessStatus</span>.<span class=\"code_ident\">Granted</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_keyword\">string</span>&#xA0;<span class=\"code_method\">GetCallbackUrlForToken</span>(<span class=\"code_ident\">IOAuthContext</span>&#xA0;<span class=\"code_ident\">requestContext</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">RequestToken</span>&#xA0;<span class=\"code_ident\">requestToken</span>&#xA0;=&#xA0;<span class=\"code_method\">GetRequestToken</span>(<span class=\"code_ident\">requestContext</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_ident\">requestToken</span>.<span class=\"code_ident\">CallbackUrl</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_keyword\">string</span>&#xA0;<span class=\"code_method\">GetVerificationCodeForRequestToken</span>(<span class=\"code_ident\">IOAuthContext</span>&#xA0;<span class=\"code_ident\">requestContext</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">RequestToken</span>&#xA0;<span class=\"code_ident\">requestToken</span>&#xA0;=&#xA0;<span class=\"code_method\">GetRequestToken</span>(<span class=\"code_ident\">requestContext</span>);\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_ident\">requestToken</span>.<span class=\"code_ident\">Verifier</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_keyword\">string</span>&#xA0;<span class=\"code_method\">GetRequestTokenSecret</span>(<span class=\"code_ident\">IOAuthContext</span>&#xA0;<span class=\"code_ident\">context</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">RequestToken</span>&#xA0;<span class=\"code_ident\">requestToken</span>&#xA0;=&#xA0;<span class=\"code_method\">GetRequestToken</span>(<span class=\"code_ident\">context</span>);\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_ident\">requestToken</span>.<span class=\"code_ident\">TokenSecret</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_keyword\">string</span>&#xA0;<span class=\"code_method\">GetAccessTokenSecret</span>(<span class=\"code_ident\">IOAuthContext</span>&#xA0;<span class=\"code_ident\">context</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">AccessToken</span>&#xA0;<span class=\"code_ident\">token</span>&#xA0;=&#xA0;<span class=\"code_method\">GetAccessToken</span>(<span class=\"code_ident\">context</span>);\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">if</span>&#xA0;(<span class=\"code_ident\">token</span>&#xA0;==&#xA0;<span class=\"code_keyword\">null</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">throw</span>&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_method\">OAuthException</span>(<span class=\"code_ident\">context</span>,&#xA0;<span class=\"code_ident\">OAuthProblems</span>.<span class=\"code_ident\">TokenRejected</span>,&#xA0;<span class=\"code_string\">&quot;No&#xA0;token&#xA0;was&#xA0;found&quot;</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_ident\">token</span>.<span class=\"code_ident\">TokenSecret</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_ident\">IToken</span>&#xA0;<span class=\"code_method\">RenewAccessToken</span>(<span class=\"code_ident\">IOAuthContext</span>&#xA0;<span class=\"code_ident\">requestContext</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">throw</span>&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_method\">NotImplementedException</span>();\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;wrapper&#xA0;methodes&#xA0;om&#xA0;je&#xA0;DAO&#xA0;heen</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">RequestToken</span>&#xA0;<span class=\"code_method\">GetRequestToken</span>(<span class=\"code_ident\">IOAuthContext</span>&#xA0;<span class=\"code_ident\">context</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">try</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_ident\">_requestTokenRepository</span>.<span class=\"code_ident\">GetToken</span>&lt;<span class=\"code_ident\">RequestToken</span>&gt;(<span class=\"code_ident\">context</span>.<span class=\"code_ident\">Token</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">catch</span>&#xA0;(<span class=\"code_ident\">Exception</span>&#xA0;<span class=\"code_ident\">exception</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;TODO:&#xA0;log&#xA0;exception</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">throw</span>&#xA0;<span class=\"code_ident\">Error</span>.<span class=\"code_method\">UnknownToken</span>(<span class=\"code_ident\">context</span>,&#xA0;<span class=\"code_ident\">context</span>.<span class=\"code_ident\">Token</span>,&#xA0;<span class=\"code_ident\">exception</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">AccessToken</span>&#xA0;<span class=\"code_method\">GetAccessToken</span>(<span class=\"code_ident\">IOAuthContext</span>&#xA0;<span class=\"code_ident\">context</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">try</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_ident\">_accessTokenRepository</span>.<span class=\"code_ident\">GetToken</span>&lt;<span class=\"code_ident\">AccessToken</span>&gt;(<span class=\"code_ident\">context</span>.<span class=\"code_ident\">Token</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">catch</span>&#xA0;(<span class=\"code_ident\">Exception</span>&#xA0;<span class=\"code_ident\">exception</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;TODO:&#xA0;log&#xA0;exception</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">throw</span>&#xA0;<span class=\"code_ident\">Error</span>.<span class=\"code_method\">UnknownToken</span>(<span class=\"code_ident\">context</span>,&#xA0;<span class=\"code_ident\">context</span>.<span class=\"code_ident\">Token</span>,&#xA0;<span class=\"code_ident\">exception</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_ident\">IToken</span>&#xA0;<span class=\"code_method\">GetRequestToken</span>(<span class=\"code_keyword\">string</span>&#xA0;<span class=\"code_ident\">token</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_ident\">_requestTokenRepository</span>.<span class=\"code_ident\">GetToken</span>&lt;<span class=\"code_ident\">RequestToken</span>&gt;(<span class=\"code_ident\">token</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_ident\">IToken</span>&#xA0;<span class=\"code_method\">GetToken</span>(<span class=\"code_ident\">IOAuthContext</span>&#xA0;<span class=\"code_ident\">context</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">var</span>&#xA0;<span class=\"code_ident\">token</span>&#xA0;=&#xA0;(<span class=\"code_ident\">IToken</span>)<span class=\"code_keyword\">null</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">if</span>&#xA0;(!<span class=\"code_keyword\">string</span>.<span class=\"code_method\">IsNullOrEmpty</span>(<span class=\"code_ident\">context</span>.<span class=\"code_ident\">Token</span>))\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">try</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">token</span>&#xA0;=&#xA0;<span class=\"code_ident\">_accessTokenRepository</span>.<span class=\"code_ident\">GetToken</span>&lt;<span class=\"code_ident\">AccessToken</span>&gt;(<span class=\"code_ident\">context</span>.<span class=\"code_ident\">Token</span>)&#xA0;??\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;(<span class=\"code_ident\">IToken</span>)<span class=\"code_ident\">_requestTokenRepository</span>.<span class=\"code_ident\">GetToken</span>&lt;<span class=\"code_ident\">RequestToken</span>&gt;(<span class=\"code_ident\">context</span>.<span class=\"code_ident\">Token</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">catch</span>&#xA0;(<span class=\"code_ident\">Exception</span>&#xA0;<span class=\"code_ident\">ex</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;TODO:&#xA0;log&#xA0;exception</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">throw</span>&#xA0;<span class=\"code_ident\">Error</span>.<span class=\"code_method\">UnknownToken</span>(<span class=\"code_ident\">context</span>,&#xA0;<span class=\"code_ident\">context</span>.<span class=\"code_ident\">Token</span>,&#xA0;<span class=\"code_ident\">ex</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_ident\">token</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;verander&#xA0;van&#xA0;request&#xA0;token&#xA0;naar&#xA0;access&#xA0;token.</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">static</span>&#xA0;<span class=\"code_keyword\">void</span>&#xA0;<span class=\"code_method\">UseUpRequestToken</span>(<span class=\"code_ident\">IOAuthContext</span>&#xA0;<span class=\"code_ident\">requestContext</span>,&#xA0;<span class=\"code_ident\">RequestToken</span>&#xA0;<span class=\"code_ident\">requestToken</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;nieuwe&#xA0;token&#xA0;maken?</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">var</span>&#xA0;<span class=\"code_ident\">accessToken</span>&#xA0;=&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_method\">AccessToken</span>()\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">ConsumerKey</span>&#xA0;=&#xA0;<span class=\"code_ident\">requestContext</span>.<span class=\"code_ident\">ConsumerKey</span>,\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">Realm</span>&#xA0;=&#xA0;<span class=\"code_ident\">requestContext</span>.<span class=\"code_ident\">Realm</span>,\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">Token</span>&#xA0;=&#xA0;<span class=\"code_ident\">Guid</span>.<span class=\"code_method\">NewGuid</span>().<span class=\"code_method\">ToString</span>(),\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">TokenSecret</span>&#xA0;=&#xA0;<span class=\"code_ident\">Guid</span>.<span class=\"code_method\">NewGuid</span>().<span class=\"code_method\">ToString</span>(),\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">ExpireyDate</span>&#xA0;=&#xA0;<span class=\"code_ident\">DateTime</span>.<span class=\"code_ident\">Now</span>.<span class=\"code_method\">AddYears</span>(<span class=\"code_number\">1</span>),\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">UserName</span>&#xA0;=&#xA0;<span class=\"code_string\">&quot;jan2@funda.nl&quot;</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;};\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">requestToken</span>.<span class=\"code_ident\">AccessToken</span>&#xA0;=&#xA0;<span class=\"code_ident\">accessToken</span>;\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">_accessTokenRepository</span>.<span class=\"code_method\">Add</span>(<span class=\"code_ident\">accessToken</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>}\n<br>\n<br><span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_keyword\">static</span>&#xA0;<span class=\"code_keyword\">class</span>&#xA0;<span class=\"code_ident\">TokenExtender</span>\n<br>{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_keyword\">static</span>&#xA0;<span class=\"code_ident\">T</span>&#xA0;<span class=\"code_ident\">GetToken</span>&lt;<span class=\"code_ident\">T</span>&gt;(<span class=\"code_keyword\">this</span>&#xA0;<span class=\"code_ident\">List</span>&lt;<span class=\"code_ident\">IToken</span>&gt;&#xA0;<span class=\"code_ident\">repo</span>,&#xA0;<span class=\"code_keyword\">string</span>&#xA0;<span class=\"code_ident\">token</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">where</span>&#xA0;<span class=\"code_ident\">T</span>:&#xA0;<span class=\"code_ident\">IToken</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_ident\">repo</span>.<span class=\"code_ident\">OfType</span>&lt;<span class=\"code_ident\">T</span>&gt;().<span class=\"code_method\">FirstOrDefault</span>(<span class=\"code_ident\">t</span>&#xA0;=&gt;&#xA0;<span class=\"code_ident\">t</span>.<span class=\"code_ident\">Token</span>&#xA0;==&#xA0;<span class=\"code_ident\">token</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>}</code></div></td></tr></table><br>\r\n<br>\r\n<b>WCF service</b><br>\r\nWe maken gebruik van een WCF service voor onze OAuth methodes. Eerst leggen we een referentie naar de &apos;provider&apos;:<br>\r\n<br>C#:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br>29<br>30<br>31<br>32<br>33<br>34<br>35<br>36<br>37<br>38<br>39<br>40<br>41<br>42<br>43<br></code></td><td class=\"phphighlightcode\"><div><code>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_keyword\">class</span>&#xA0;<span class=\"code_ident\">DemoService</span>&#xA0;:&#xA0;<span class=\"code_ident\">IDemoService</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;ref&#xA0;naar&#xA0;token&#xA0;store</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">private</span>&#xA0;<span class=\"code_keyword\">static</span>&#xA0;<span class=\"code_ident\">SimpleTokenStore</span>&#xA0;<span class=\"code_ident\">tokenStore</span>&#xA0;=&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_method\">SimpleTokenStore</span>();\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;ref&#xA0;naar&#xA0;consumer&#xA0;store</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">private</span>&#xA0;<span class=\"code_keyword\">static</span>&#xA0;<span class=\"code_ident\">IConsumerStore</span>&#xA0;<span class=\"code_ident\">consumerStore</span>&#xA0;=&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_method\">ConsumerStore</span>();\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;maak&#xA0;nieuwe&#xA0;provider</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">private</span>&#xA0;<span class=\"code_keyword\">static</span>&#xA0;<span class=\"code_ident\">IOAuthProvider</span>&#xA0;<span class=\"code_ident\">provider</span>&#xA0;=&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_method\">OAuthProvider</span>(<span class=\"code_ident\">tokenStore</span>,\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;doe&#xA0;aan&#xA0;consumer&#xA0;validatie</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_method\">ConsumerValidationInspector</span>(<span class=\"code_ident\">consumerStore</span>),\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;body&#xA0;validation</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_method\">BodyHashValidationInspector</span>(),&#xA0;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;valideer&#xA0;dat&#xA0;de&#xA0;signatures&#xA0;(en&#xA0;dus&#xA0;de&#xA0;private&#xA0;keys)&#xA0;kloppen</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;voeg&#xA0;toe&#xA0;dat&#xA0;er&#xA0;alleen&#xA0;HmacSha1&#xA0;gebruikt&#xA0;mag&#xA0;worden</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;Je&#xA0;kan&#xA0;ervoor&#xA0;kiezen&#xA0;om&#xA0;RSA&#xA0;te&#xA0;gebruiken,&#xA0;of&#xA0;Plaintext&#xA0;(maar&#xA0;doe&#xA0;dit&#xA0;alleen&#xA0;over&#xA0;HTTPS)</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_method\">SignatureValidationInspector</span>(<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_method\">ConsumerStore</span>(),&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_method\">OAuthContextSigner</span>(&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_method\">HmacSha1SignatureImplementation</span>())),\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;de&#xA0;timestamp&#xA0;van&#xA0;de&#xA0;client&#xA0;mag&#xA0;max&#xA0;5&#xA0;minuten&#xA0;afwijken</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_method\">TimestampRangeInspector</span>(<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_method\">TimeSpan</span>(<span class=\"code_number\">0</span>,&#xA0;<span class=\"code_number\">0</span>,&#xA0;<span class=\"code_number\">5</span>,&#xA0;<span class=\"code_number\">0</span>),&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_method\">TimeSpan</span>(<span class=\"code_number\">0</span>,<span class=\"code_number\">0</span>,<span class=\"code_number\">5</span>,<span class=\"code_number\">0</span>)));\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;Context&#xA0;bepalen&#xA0;adhv&#xA0;je&#xA0;URL&#xA0;&amp;&#xA0;parameters</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">private</span>&#xA0;<span class=\"code_ident\">IOAuthContext</span>&#xA0;<span class=\"code_method\">GetContext</span>()\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">var</span>&#xA0;<span class=\"code_ident\">requestContext</span>&#xA0;=&#xA0;<span class=\"code_ident\">OperationContext</span>.<span class=\"code_ident\">Current</span>.<span class=\"code_ident\">RequestContext</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">Message</span>&#xA0;<span class=\"code_ident\">request</span>&#xA0;=&#xA0;<span class=\"code_ident\">requestContext</span>.<span class=\"code_ident\">RequestMessage</span>;\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">var</span>&#xA0;<span class=\"code_ident\">requestProperty</span>&#xA0;=&#xA0;(<span class=\"code_ident\">HttpRequestMessageProperty</span>)<span class=\"code_ident\">request</span>.<span class=\"code_ident\">Properties</span>[<span class=\"code_ident\">HttpRequestMessageProperty</span>.<span class=\"code_ident\">Name</span>];\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">IOAuthContext</span>&#xA0;<span class=\"code_ident\">context</span>&#xA0;=&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_method\">OAuthContextBuilder</span>().<span class=\"code_method\">FromUri</span>(<span class=\"code_ident\">requestProperty</span>.<span class=\"code_ident\">Method</span>,&#xA0;<span class=\"code_ident\">request</span>.<span class=\"code_ident\">Headers</span>.<span class=\"code_ident\">To</span>);\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;kent&#xA0;nog&#xA0;geen&#xA0;standaard&#xA0;operatie&#xA0;om&#xA0;met&#xA0;WCF&#xA0;de&#xA0;headers&#xA0;te&#xA0;lezne,&#xA0;maar&#xA0;kan&#xA0;ook&#xA0;zo:</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">if</span>&#xA0;(<span class=\"code_ident\">WebOperationContext</span>.<span class=\"code_ident\">Current</span>&#xA0;!=&#xA0;<span class=\"code_keyword\">null</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">if</span>&#xA0;(<span class=\"code_ident\">WebOperationContext</span>.<span class=\"code_ident\">Current</span>.<span class=\"code_ident\">IncomingRequest</span>.<span class=\"code_ident\">Headers</span>.<span class=\"code_ident\">AllKeys</span>.<span class=\"code_method\">Contains</span>(<span class=\"code_string\">&quot;Authorization&quot;</span>))\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">context</span>.<span class=\"code_ident\">UseAuthorizationHeader</span>&#xA0;=&#xA0;<span class=\"code_keyword\">true</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">context</span>.<span class=\"code_ident\">AuthorizationHeaderParameters</span>&#xA0;=&#xA0;<span class=\"code_ident\">UriUtility</span>.<span class=\"code_method\">GetHeaderParameters</span>(<span class=\"code_ident\">WebOperationContext</span>.<span class=\"code_ident\">Current</span>.<span class=\"code_ident\">IncomingRequest</span>.<span class=\"code_ident\">Headers</span>[<span class=\"code_string\">&quot;Authorization&quot;</span>]).<span class=\"code_method\">ToNameValueCollection</span>();&#xA0;;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_ident\">context</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}</code></div></td></tr></table><br>\r\n<br>\r\n<b>request_token</b><br>\r\nIn je WCF service:<br>\r\n<br>C#:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br>4<br>5<br>6<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_comment\">//&#xA0;maakt&#xA0;nieuw&#xA0;request&#xA0;token&#xA0;aan</span>\n<br><span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_ident\">Stream</span>&#xA0;<span class=\"code_method\">request_token</span>()\n<br>{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">var</span>&#xA0;<span class=\"code_ident\">token</span>&#xA0;=&#xA0;<span class=\"code_ident\">provider</span>.<span class=\"code_method\">GrantRequestToken</span>(<span class=\"code_method\">GetContext</span>());\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_ident\">System</span>.<span class=\"code_ident\">IO</span>.<span class=\"code_method\">MemoryStream</span>(<span class=\"code_ident\">Encoding</span>.<span class=\"code_ident\">Default</span>.<span class=\"code_method\">GetBytes</span>(<span class=\"code_keyword\">string</span>.<span class=\"code_method\">Format</span>(<span class=\"code_string\">&quot;oauth_token={0}&amp;oauth_token_secret={1}&quot;</span>,&#xA0;<span class=\"code_ident\">token</span>.<span class=\"code_ident\">Token</span>,&#xA0;<span class=\"code_ident\">token</span>.<span class=\"code_ident\">TokenSecret</span>)));\n<br>}</code></div></td></tr></table><br>\r\n<br>\r\n<b>access_token</b><br>\r\nIn je WCF service:<br>\r\n<br>C#:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br>4<br>5<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_ident\">Stream</span>&#xA0;<span class=\"code_method\">access_token</span>()\n<br>{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">var</span>&#xA0;<span class=\"code_ident\">exchangeRequestTokenForAccessToken</span>&#xA0;=&#xA0;<span class=\"code_ident\">provider</span>.<span class=\"code_method\">ExchangeRequestTokenForAccessToken</span>(<span class=\"code_method\">GetContext</span>());\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_ident\">System</span>.<span class=\"code_ident\">IO</span>.<span class=\"code_method\">MemoryStream</span>(<span class=\"code_ident\">Encoding</span>.<span class=\"code_ident\">Default</span>.<span class=\"code_method\">GetBytes</span>(<span class=\"code_keyword\">string</span>.<span class=\"code_method\">Format</span>(<span class=\"code_string\">&quot;oauth_token={0}&amp;oauth_token_secret={1}&quot;</span>,&#xA0;<span class=\"code_ident\">exchangeRequestTokenForAccessToken</span>.<span class=\"code_ident\">Token</span>,&#xA0;<span class=\"code_ident\">exchangeRequestTokenForAccessToken</span>.<span class=\"code_ident\">TokenSecret</span>)));\n<br>}</code></div></td></tr></table><br>\r\n<br>\r\n<b>authorize</b><br>\r\nOm je request token in te wisselen kan je elke login pagina op je website gebruiken. In het standaard ASP.NET MVC 2 project in de AccountController.cs. Verander de &apos;Logon&apos; actie in iets als:<br>\r\n<br>C#:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_comment\">//&#xA0;nieuwe&#xA0;oauth&#xA0;params</span>\n<br>[<span class=\"code_ident\">HttpPost</span>]\n<br><span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_ident\">ActionResult</span>&#xA0;<span class=\"code_method\">LogOn</span>(<span class=\"code_ident\">LogOnModel</span>&#xA0;<span class=\"code_ident\">model</span>,&#xA0;<span class=\"code_keyword\">string</span>&#xA0;<span class=\"code_ident\">oauth_token</span>,&#xA0;<span class=\"code_keyword\">string</span>&#xA0;<span class=\"code_ident\">oauth_callback</span>)\n<br>{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">if</span>&#xA0;(<span class=\"code_ident\">ModelState</span>.<span class=\"code_ident\">IsValid</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">if</span>&#xA0;(<span class=\"code_ident\">MembershipService</span>.<span class=\"code_method\">ValidateUser</span>(<span class=\"code_ident\">model</span>.<span class=\"code_ident\">UserName</span>,&#xA0;<span class=\"code_ident\">model</span>.<span class=\"code_ident\">Password</span>))\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">var</span>&#xA0;<span class=\"code_ident\">client</span>&#xA0;=&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_method\">OAuthClient</span>();\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;upgrade&#xA0;request&#xA0;token&#xA0;naar&#xA0;normaal&#xA0;token&#xA0;voor&#xA0;user</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">client</span>.<span class=\"code_method\">authorize_user</span>(<span class=\"code_ident\">oauth_token</span>);\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">if</span>&#xA0;(!<span class=\"code_ident\">String</span>.<span class=\"code_method\">IsNullOrEmpty</span>(<span class=\"code_ident\">oauth_callback</span>))&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_method\">Redirect</span>(<span class=\"code_ident\">oauth_callback</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}&#xA0;<span class=\"code_keyword\">else</span>&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_method\">RedirectToAction</span>(<span class=\"code_string\">&quot;Account&quot;</span>,&#xA0;<span class=\"code_string\">&quot;OAuthComplete&quot;</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">else</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">ModelState</span>.<span class=\"code_method\">AddModelError</span>(<span class=\"code_string\">&quot;&quot;</span>,&#xA0;<span class=\"code_string\">&quot;The&#xA0;user&#xA0;name&#xA0;or&#xA0;password&#xA0;provided&#xA0;is&#xA0;incorrect.&quot;</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;If&#xA0;we&#xA0;got&#xA0;this&#xA0;far,&#xA0;something&#xA0;failed,&#xA0;redisplay&#xA0;form</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_method\">View</span>(<span class=\"code_ident\">model</span>);\n<br>}</code></div></td></tr></table><br>\r\n<br>\r\n<b>Testen?</b><br>\r\nDownloaden:<ul><li><a href=\"http://www.100procentjan.nl/tweakers/service.zip\" rel=\"external\">Test service</a> (draai op poort 1339)</li><li><a href=\"http://www.100procentjan.nl/tweakers/website.zip\" rel=\"external\">Test website</a> (draai op poort 1338)</li><li><a href=\"http://www.100procentjan.nl/tweakers/client.zip\" rel=\"external\">Test client</a> (negeer het PIN gedeelte, gewoon op Update drukken)</li></ul>",
    "nextLink": "http://glamour.tweakblogs.net/blog/6508/google-analytics-in-mvc.html",
    "comments": [
        {
            "author": "CodeCaster",
            "date": "woensdag 11 mei 2011 18:09",
            "contentHtml": "Jij bent echt met leuke dingen bezig op je werk. <img src=\"http://tweakimg.net/g/s/smile.gif\" width=\"15\" height=\"15\" alt=\":)\"> <br>\r\n[/jaloers]<br>\r\n<br>\r\n<small>Ik ook hoor, daar niet van. <img src=\"http://tweakimg.net/g/s/puh2.gif\" width=\"12\" height=\"12\" alt=\":P\"></small><p class=\"edit\">[Reactie gewijzigd op woensdag 11 mei 2011 18:09]</p>",
            "ownReply": false
        },
        {
            "author": "soczol",
            "date": "woensdag 11 mei 2011 19:10",
            "contentHtml": "Al je linkjes wijzen naar dezelfde file <img src=\"http://tweakimg.net/g/s/smile.gif\" width=\"15\" height=\"15\" alt=\":)\"><br>\r\n<br>\r\nJuiste linkjes lijken me <a href=\"http://www.100procentjan.nl/tweakers/client.zip\" rel=\"external\" title=\"http://www.100procentjan.nl/tweakers/client.zip\">http://www.100procentjan.nl/tweakers/client.zip</a> voor de client en <a href=\"http://www.100procentjan.nl/tweakers/Website.zip\" rel=\"external\" title=\"http://www.100procentjan.nl/tweakers/Website.zip\">http://www.100procentjan.nl/tweakers/Website.zip</a> voor de website.<p class=\"edit\">[Reactie gewijzigd op woensdag 11 mei 2011 19:26]</p>",
            "ownReply": false
        },
        {
            "author": "ZpAz",
            "date": "woensdag 11 mei 2011 20:04",
            "contentHtml": "Oauth, documenteer het alsjeblieft beter dan Vimeo. Geez wat een ramp <img src=\"http://tweakimg.net/g/s/clown.gif\" width=\"15\" height=\"15\" alt=\":+\"> Heeft me tijden gekost om het door te krijgen hoe het daar in elkaar zat. Toen het upload systeem wat even slecht is gedocumenteerd... maar eindelijk na lang code heb ik een Wordpress Vimeo upload plugin <img src=\"http://tweakimg.net/g/s/smile.gif\" width=\"15\" height=\"15\" alt=\":)\">",
            "ownReply": false
        },
        {
            "author": "creator1988",
            "date": "woensdag 11 mei 2011 21:03",
            "contentHtml": "<blockquote><div class=\"quote\"><a href=\"http://glamour.tweakblogs.net/blog/6538/oauth-provider-in-net.html#r_88129\">soczol schreef op woensdag 11 mei 2011 @ 19:10:</a><br>\r\nAl je linkjes wijzen naar dezelfde file <img src=\"http://tweakimg.net/g/s/smile.gif\" width=\"15\" height=\"15\" alt=\":)\"><br>\r\n<br>\r\nJuiste linkjes lijken me <a href=\"http://www.100procentjan.nl/tweakers/client.zip\" rel=\"external\" title=\"http://www.100procentjan.nl/tweakers/client.zip\">http://www.100procentjan.nl/tweakers/client.zip</a> voor de client en <a href=\"http://www.100procentjan.nl/tweakers/Website.zip\" rel=\"external\" title=\"http://www.100procentjan.nl/tweakers/Website.zip\">http://www.100procentjan.nl/tweakers/Website.zip</a> voor de website.</div></blockquote>Fixed<blockquote><div class=\"quote\"><a href=\"http://glamour.tweakblogs.net/blog/6538/oauth-provider-in-net.html#r_88134\">ZpAz schreef op woensdag 11 mei 2011 @ 20:04:</a><br>\r\nOauth, documenteer het alsjeblieft beter dan Vimeo. Geez wat een ramp <img src=\"http://tweakimg.net/g/s/clown.gif\" width=\"15\" height=\"15\" alt=\":+\"> Heeft me tijden gekost om het door te krijgen hoe het daar in elkaar zat. Toen het upload systeem wat even slecht is gedocumenteerd... maar eindelijk na lang code heb ik een Wordpress Vimeo upload plugin <img src=\"http://tweakimg.net/g/s/smile.gif\" width=\"15\" height=\"15\" alt=\":)\"></div></blockquote>OAuth is qua standaard al redelijk breed geaccepteerd. Voornamelijk doordat Twitter het de enige authenticatiemethode voor 3rd parties heeft gemaakt. Voor zo&apos;n beetje elke taal zijn er <a href=\"http://oauth.net/code/\" rel=\"external\">libraries</a> beschikbaar.",
            "ownReply": true
        },
        {
            "author": "kipusoep",
            "date": "donderdag 12 mei 2011 21:43",
            "contentHtml": "Helaas is elke oAuth implementatie weer anders <img src=\"http://tweakimg.net/g/s/frown.gif\" width=\"15\" height=\"15\" alt=\":(\"><br>\r\nHeb een &apos;SocialProxy&apos; gemaakt (WCF service) waarmee je met Facebook, Twitter, LinkedIn, Hyves en FourSquare kunt communiceren via oAuth en er waren er maar twee die overeen kwamen, de rest was heel veel uitproberen en trial &amp; error.<br>\r\nEn dan moet je ook nog POST operaties implementeren, die zijn ook weer helemaal anders per netwerk...<br>\r\n<br>\r\nDrama!  <img src=\"http://tweakimg.net/g/s/nosmile.gif\" width=\"15\" height=\"15\" alt=\":/\">",
            "ownReply": false
        }
    ]
}