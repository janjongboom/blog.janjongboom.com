{
    "title": "Schizofrene code met node.js",
    "language": "nl",
    "link": "http://glamour.tweakblogs.net/blog/7211/schizofrene-code-met-node-punt-js.html",
    "date": "2011-10-20T09:59:00.000Z",
    "category": "Backend",
    "views": 7964,
    "articleHtml": "Allereerst een kleine update, op 1 oktober ben ik overgestapt van de <a href=\"http://www.funda.nl\" rel=\"external\">de gevestigde orde</a> naar de wondere wereld van <a href=\"http://c9.io\" rel=\"external\">een startup</a>. Niet alleen cultureel een verschil, maar ook een shift van .NET naar javascript, van Solr naar Redis, van SVN naar Git en van een Xeon workstation naar een Macbook Air. En nog belangrijker, van tafeltennis naar tafelvoetbal. Voor de mensen die niet 74 feeds in Google Reader hebben zitten: Cloud9 is een IDE, vergelijkbaar met Eclipse of Visual Studio, maar volledig draaiend in de browser; het is &apos;c9.io&apos; intikken en gaan. Debugging, stack exploration, versiebeheer, you name it.<br>\r\n<br>\r\nCloud9 is helemaal gebouwd in javascript, de client is gebouwd op <a href=\"http://ui.ajax.org\" rel=\"external\">APF</a>, een open source framework voor web applicaties dat intern is ontwikkeld (heeft wel wat weg van Webforms). De backend draait op <a href=\"http://nodejs.org\" rel=\"external\">node.js</a>, een event-based framework voor het schrijven van server side applicaties in javascript. Doordat node vanaf design geschreven is met het idee dat alle code event-driven moet werken heb je bijna geen blocking calls, en kunnen je threads sneller vrijgegeven worden: ergo: je kan meer requests handlen in je web server (gesimplificeerde weergave <img src=\"http://tweakimg.net/g/s/smile.gif\" width=\"15\" height=\"15\" alt=\":)\">).<br>\r\n<br>\r\n<b>Direct spelen met alle code</b><br>\r\nHet leuke van werken aan een IDE is dat je features die je zelf handig vind gewoon kan inbouwen, zoals het met een klik laten klonen van de GitHub repository waar alle code samples uit de blogpost zitten. Ergo, om alle code uit deze post in hun echte context te zien <b>en meteen te runnen</b> klik <a href=\"http://c9.io/open/git/?url=git://github.com/janjongboom/schizophrenia.git&amp;file=server.js\" rel=\"external\">hier</a> en druk hierna op &apos;Run&apos;.<br><a name=\"more\"></a><br>\r\n<b>Javascript, javascript, javascript</b><br>\r\nWerken met node.js heeft tot logisch gevolg dat je hele applicatie, van caching-layer tot menu, en van syntax highlighting tot routing draait op dezelfde code. En dat heeft tot gevolg dat het doel dat Microsoft ooit voor ogen had met <a href=\"http://tweakers.net/nieuws/50734/microsoft-levert-eerste-versie-volta-aan-webontwikkelaars.html\" rel=\"external\">Microsoft Volta</a>:<blockquote><div class=\"quote\">Microsoft heeft een eerste community technology preview van het ASP.net-framework Volta uitgebracht. Met het pakket hoeven ontwikkelaars zich niet meer over de scheiding tussen server- en clientside code druk te maken.</div></blockquote><b>Schizofrene modules</b><br>\r\nTijd voor code! Hier een heel simpele javascript module die werkt met <a href=\"http://requirejs.org/\" rel=\"external\">RequireJS</a>: <a href=\"http://c9.io/open/git/?url=git://github.com/janjongboom/schizophrenia.git&amp;file=require_modules/calc.js\" rel=\"external\">calc.js</a>.<br>\r\n<br>JavaScript:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_method\">define</span>(<span class=\"code_keyword\">function</span>&#xA0;()&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;takes&#xA0;in&#xA0;an&#xA0;array&#xA0;of&#xA0;numbers&#xA0;and&#xA0;sums&#xA0;them</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">sum</span>:&#xA0;<span class=\"code_keyword\">function</span>&#xA0;(<span class=\"code_ident\">numbers</span>)&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">var</span>&#xA0;<span class=\"code_ident\">total</span>&#xA0;=&#xA0;<span class=\"code_number\">0</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">for</span>&#xA0;(<span class=\"code_keyword\">var</span>&#xA0;<span class=\"code_ident\">ix</span>&#xA0;=&#xA0;<span class=\"code_number\">0</span>;&#xA0;<span class=\"code_ident\">ix</span>&#xA0;&lt;&#xA0;<span class=\"code_ident\">numbers</span>.<span class=\"code_ident\">length</span>;&#xA0;<span class=\"code_ident\">ix</span>++)&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">total</span>&#xA0;+=&#xA0;<span class=\"code_method\">parseInt</span>(<span class=\"code_ident\">numbers</span>[<span class=\"code_ident\">ix</span>],&#xA0;<span class=\"code_number\">10</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">console</span>.<span class=\"code_method\">log</span>(<span class=\"code_ident\">total</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_ident\">total</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>&#xA0;&#xA0;&#xA0;&#xA0;};\n<br>});</code></div></td></tr></table><br>\r\nAn sich een normale module, alleen gewrapped in een functie &apos;define&apos;, waardoor deze on demand in te laden is.<br>\r\n<br>\r\n<b>Client side gebruiken</b><br>\r\n<a href=\"http://c9.io/open/git/?url=git://github.com/janjongboom/schizophrenia.git&amp;file=client/index.html\" rel=\"external\">Client side usage</a> is eenvoudig, je include RequireJS en vraagt daarna je modules op:<br>\r\n<br>JavaScript:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br></code></td><td class=\"phphighlightcode\"><div><code>&lt;<span class=\"code_ident\">script</span>&#xA0;<span class=\"code_ident\">src</span>=<span class=\"code_string\">&quot;/client/require.js&quot;</span>&gt;&lt;/<span class=\"code_ident\">script</span>&gt;\n<br>&lt;<span class=\"code_ident\">script</span>&gt;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;load&#xA0;the&#xA0;calc&#xA0;module,&#xA0;and&#xA0;bind&#xA0;it&#xA0;to&#xA0;the&#xA0;UI</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_method\">require</span>([<span class=\"code_string\">&quot;require_modules/calc&quot;</span>],&#xA0;<span class=\"code_keyword\">function</span>&#xA0;(<span class=\"code_ident\">calc</span>)&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;callback&#xA0;that&#xA0;is&#xA0;fired&#xA0;when&#xA0;the&#xA0;module&#xA0;is&#xA0;loaded</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_method\">$</span>(<span class=\"code_string\">&apos;#numbers-btn&apos;</span>).<span class=\"code_method\">click</span>(<span class=\"code_keyword\">function</span>&#xA0;()&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_method\">alert</span>(<span class=\"code_ident\">calc</span>.<span class=\"code_method\">sum</span>(<span class=\"code_method\">$</span>(<span class=\"code_string\">&apos;#numbers&apos;</span>).<span class=\"code_method\">val</span>().<span class=\"code_method\">split</span>(<span class=\"code_string\">&apos;+&apos;</span>)));\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;});\n<br>&#xA0;&#xA0;&#xA0;&#xA0;});\n<br>&lt;/<span class=\"code_ident\">script</span>&gt;</code></div></td></tr></table><br>\r\n<br>\r\n<b>En nu server side!</b><br>\r\nAls je de app runt, vind je op /calc?1&amp;2 de <a href=\"http://c9.io/open/git/?url=git://github.com/janjongboom/schizophrenia.git&amp;file=server.js&amp;line_start=17&amp;line_end=32\" rel=\"external\">server side</a> weergave van deze module:<br>\r\n<br>code:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><pre>1\n2\n</pre></td><td class=\"phphighlightcode\"><div><pre>$ curl http://module.username.c9.io/calc?1&amp;2&amp;5\r\n8</pre></div></td></tr></table><br>\r\nAls web framework bovenop node.js gebruik ik hier <a href=\"http://senchalabs.github.com/connect/\" rel=\"external\">connect</a>, deze heeft een routing module die werkt als:<br>\r\n<br>JavaScript:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br>4<br>5<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_ident\">app</span>.<span class=\"code_method\">get</span>(<span class=\"code_string\">&quot;/my/url&quot;</span>,&#xA0;<span class=\"code_keyword\">function</span>&#xA0;(<span class=\"code_ident\">req</span>,&#xA0;<span class=\"code_ident\">res</span>)&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;tah&#xA0;dah,&#xA0;req&#xA0;is&#xA0;the&#xA0;incoming&#xA0;request</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;res&#xA0;is&#xA0;the&#xA0;outgoing&#xA0;response</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">res</span>.<span class=\"code_method\">end</span>(<span class=\"code_string\">&quot;hello&#xA0;world!&quot;</span>);\n<br>});</code></div></td></tr></table><br>\r\nOm RequireJS modules te gebruiken in node.js hebben we een gemockte versie van de &apos;define&apos; functie nodig, deze zie je op line 1:<br>\r\n<br>JavaScript:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_method\">require</span>(<span class=\"code_string\">&quot;requirejsnode&quot;</span>);</code></div></td></tr></table><br>\r\nHierna zijn RequireJS modules in te laden via de normale &apos;require&apos; functie in node.js (die synchronous is, en zonder callback werkt). Je kunt nu de module opvragen en de beschikbare functies server side aanroepen.<br>\r\n<br>JavaScript:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_keyword\">var</span>&#xA0;<span class=\"code_ident\">calc</span>&#xA0;=&#xA0;<span class=\"code_method\">require</span>(<span class=\"code_string\">&quot;./require_modules/calc.js&quot;</span>);\n<br>\n<br><span class=\"code_ident\">res</span>.<span class=\"code_method\">end</span>(<span class=\"code_ident\">calc</span>.<span class=\"code_method\">sum</span>(<span class=\"code_ident\">keys</span>).<span class=\"code_method\">toString</span>());</code></div></td></tr></table><br>\r\n<br>\r\n<b>En dit is handig omdat?</b><br>\r\nDe code editor die onderdeel is van Cloud9, en inmiddels ook integraal onderdeel van GitHub is heet <a href=\"https://github.com/ajaxorg/ace\" rel=\"external\">Ace</a>, en wordt volledig opgebouwd in javascript. Toen ik een server side highlighter nodig had kon ik met <a href=\"https://github.com/ajaxorg/ace/blob/master/demo/static-highlighter/server.js\" rel=\"external\">36 regels code</a> de view-only versie van de editor aanbieden aan iedereen zonder dependencies op javascript!<br>\r\n<br>\r\n<b>jQuery en de DOM</b><br>\r\nOok werken met de DOM is mogelijk. Zie bijvoorbeeld mijn <a href=\"http://c9.io/open/git/?url=git://github.com/janjongboom/schizophrenia.git&amp;file=require_modules/schizo.js\" rel=\"external\">zeer intelligente</a> jQuery plugin. Standaard formaat en geen extra code geschreven. Op de client kan je hem gebruiken zoals je elke jQuery plugin gebruikt.<br>\r\n<br>\r\nOm deze plugin zijn werk server side te laten doen hebben we een server side implementatie van de browser nodig: <a href=\"https://github.com/tmpvar/jsdom\" rel=\"external\">jsdom</a>. Je kunt deze aanroepen via &apos;jsdom.env&apos;, en een aantal script dependencies meegeven die direct gebruik maken van de DOM:<br>\r\n<br>JavaScript:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_comment\">//&#xA0;load&#xA0;/client/index.html</span>\n<br><span class=\"code_comment\">//&#xA0;with&#xA0;dependencies&#xA0;on&#xA0;jQuery&#xA0;and&#xA0;the&#xA0;plugin</span>\n<br><span class=\"code_ident\">jsdom</span>.<span class=\"code_method\">env</span>(<span class=\"code_string\">&quot;./client/index.html&quot;</span>,&#xA0;[&#xA0;<span class=\"code_string\">&quot;http://code.jquery.com/jquery-latest.min.js&quot;</span>,&#xA0;<span class=\"code_string\">&quot;require_modules/schizo.js&quot;</span>&#xA0;],&#xA0;{},&#xA0;<span class=\"code_keyword\">function</span>&#xA0;(<span class=\"code_ident\">err</span>,&#xA0;<span class=\"code_special\">window</span>)&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;when&#xA0;loaded,&#xA0;grab&#xA0;jQuery</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">var</span>&#xA0;<span class=\"code_ident\">$</span>&#xA0;=&#xA0;<span class=\"code_special\">window</span>.<span class=\"code_ident\">jQuery</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;apply&#xA0;the&#xA0;plugin</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_method\">$</span>(<span class=\"code_string\">&apos;h1&apos;</span>).<span class=\"code_method\">jan</span>();\n<br>&#xA0;&#xA0;&#xA0;&#xA0;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;write&#xA0;the&#xA0;output&#xA0;to&#xA0;the&#xA0;client</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">res</span>.<span class=\"code_method\">end</span>(<span class=\"code_special\">window</span>.<span class=\"code_special\">document</span>.<span class=\"code_ident\">documentElement</span>.<span class=\"code_ident\">outerHTML</span>);\n<br>});</code></div></td></tr></table><br>\r\n<br>\r\n<b>Tah dah!</b><br>\r\nHopelijk heeft dit jullie nieuwsgierigheid gewekt want het geeft een geweldig gevoel om (bijvoorbeeld) validatie code nog maar 1 keer te schrijven waarna je de echte validatie zowel client- als server side kan uitvoeren. Daarnaast is het ook gewoon heel cool om webapplicaties in een browser te schrijven. Have fun <img src=\"http://tweakimg.net/g/s/smile.gif\" width=\"15\" height=\"15\" alt=\":)\"> Nogmaals: om de samples direct live te zien: <a href=\"http://c9.io/open/git/?url=git://github.com/janjongboom/schizophrenia.git&amp;file=server.js\" rel=\"external\">fork me</a>! Klik op &apos;Run&apos; en een web server met deze examples starten.",
    "nextLink": "http://glamour.tweakblogs.net/blog/6577/dus-euh-jij-voert-dan-die-huizen-in.html",
    "comments": [
        {
            "author": "qless",
            "date": "donderdag 20 oktober 2011 12:18",
            "contentHtml": "Link naar <a href=\"http://apf.ajax.org/\" rel=\"external\" title=\"http://apf.ajax.org/\">http://apf.ajax.org/</a> geeft link naar c9.io...",
            "ownReply": false
        },
        {
            "author": "creator1988",
            "date": "donderdag 20 oktober 2011 12:20",
            "contentHtml": "<blockquote><div class=\"quote\"><a href=\"http://glamour.tweakblogs.net/blog/7211/schizofrene-code-met-node-punt-js.html#r_97631\">qless schreef op donderdag 20 oktober 2011 @ 12:18:</a><br>\r\nLink naar <a href=\"http://apf.ajax.org/\" rel=\"external\" title=\"http://apf.ajax.org/\">http://apf.ajax.org/</a> geeft link naar c9.io...</div></blockquote>Ah dat had <a href=\"http://ui.ajax.org/\" rel=\"external\" title=\"http://ui.ajax.org/\">http://ui.ajax.org/</a> moeten zijn. Fixed <img src=\"http://tweakimg.net/g/s/smile.gif\" width=\"15\" height=\"15\" alt=\":)\">",
            "ownReply": true
        },
        {
            "author": "ZpAz",
            "date": "donderdag 20 oktober 2011 13:14",
            "contentHtml": "Ziet er best leuk uit allemaal. Wat is de reden dat jullie zelf een client-side framework hebben ontwikkeld en niet gebruik hebben gemaakt van bijvoorbeeld het bestaande <a href=\"http://www.sproutcore.com/\" rel=\"external\">SproutCore</a>?",
            "ownReply": false
        },
        {
            "author": "RobIII",
            "date": "donderdag 20 oktober 2011 13:21",
            "contentHtml": "<blockquote><div class=\"quote\">Doordat node vanaf design geschreven is met het idee dat alle code event-driven moet werken heb je bijna geen blocking calls, en kunnen je threads sneller vrijgegeven worden: ergo: je kan meer requests handlen in je web server (gesimplificeerde weergave <img src=\"http://tweakimg.net/g/s/smile.gif\" width=\"15\" height=\"15\" alt=\":)\"> ).</div></blockquote>Pas een interessant stukje (en followup) over gelezen van iemand die ik toch wel hoog aanschrijf:<br>\r\n<br>\r\n<a href=\"http://teddziuba.com/2011/10/node-js-is-cancer.html\" rel=\"external\" title=\"http://teddziuba.com/2011/10/node-js-is-cancer.html\">http://teddziuba.com/2011/10/node-js-is-cancer.html</a><br>\r\n<a href=\"http://teddziuba.com/2011/10/straight-talk-on-event-loops.html\" rel=\"external\" title=\"http://teddziuba.com/2011/10/straight-talk-on-event-loops.html\">http://teddziuba.com/2011...-talk-on-event-loops.html</a><br>\r\n<br>\r\nIk weet nog niet bij welk kamp ik me ga aansluiten, daarvoor heb ik nog te weinig met node.js gedaan (als in: zo goed als niets). Ik wil er wel meer mee gaan spelen om een beter idee te krijgen.<p class=\"edit\">[Reactie gewijzigd op donderdag 20 oktober 2011 13:21]</p>",
            "ownReply": false
        },
        {
            "author": "ZpAz",
            "date": "donderdag 20 oktober 2011 13:45",
            "contentHtml": "Beide mensen hebben zo en zo al een afkeer tegen Javascript, iets wat wel meer programmeurs hebben. Het is anders dan &quot;de gevestigde orde&quot; (C#, Java whatever) maar dat is niet iets wat het per definitie slechter maakt. <br>\r\n<br>\r\nIn alle talen moet je wel weten wat je doet. Maar zijn voorbeeld gaat ook nergens over. Als je in de &quot;main loop&quot; van een andere taal fibonacci gaat uitrekeken duurt het ook lang voordat je response krijgt. Dat betekend niet dat de taal slecht is, dat betekend dat de persoon zijn project slecht uitgedacht heeft.",
            "ownReply": false
        },
        {
            "author": "creator1988",
            "date": "donderdag 20 oktober 2011 14:11",
            "contentHtml": "<blockquote><div class=\"quote\"><a href=\"http://glamour.tweakblogs.net/blog/7211/schizofrene-code-met-node-punt-js.html#r_97636\">ZpAz schreef op donderdag 20 oktober 2011 @ 13:14:</a><br>\r\nZiet er best leuk uit allemaal. Wat is de reden dat jullie zelf een client-side framework hebben ontwikkeld en niet gebruik hebben gemaakt van bijvoorbeeld het bestaande <a href=\"http://www.sproutcore.com/\" rel=\"external\">SproutCore</a>?</div></blockquote>Omdat APF uit 2005 komt, ver voor andere frameworks <img src=\"http://tweakimg.net/g/s/smile.gif\" width=\"15\" height=\"15\" alt=\":)\"><blockquote><div class=\"quote\"><a href=\"http://glamour.tweakblogs.net/blog/7211/schizofrene-code-met-node-punt-js.html#r_97637\">RobIII schreef op donderdag 20 oktober 2011 @ 13:21:</a><br>\r\n[...]<br>\r\n<br>\r\nPas een interessant stukje (en followup) over gelezen van iemand die ik toch wel hoog aanschrijf:<br>\r\n<br>\r\n<a href=\"http://teddziuba.com/2011/10/node-js-is-cancer.html\" rel=\"external\" title=\"http://teddziuba.com/2011/10/node-js-is-cancer.html\">http://teddziuba.com/2011/10/node-js-is-cancer.html</a><br>\r\n<a href=\"http://teddziuba.com/2011/10/straight-talk-on-event-loops.html\" rel=\"external\" title=\"http://teddziuba.com/2011/10/straight-talk-on-event-loops.html\">http://teddziuba.com/2011...-talk-on-event-loops.html</a><br>\r\n<br>\r\nIk weet nog niet bij welk kamp ik me ga aansluiten, daarvoor heb ik nog te weinig met node.js gedaan (als in: zo goed als niets). Ik wil er wel meer mee gaan spelen om een beter idee te krijgen.</div></blockquote>Hier een onderbouwde response: <a href=\"http://blog.brianbeck.com/post/node-js-cures-cancer\" rel=\"external\" title=\"http://blog.brianbeck.com/post/node-js-cures-cancer\">http://blog.brianbeck.com/post/node-js-cures-cancer</a>. Ik blijf het gek vinden wat hij gezegd heeft.<blockquote><div class=\"quote\"><a href=\"http://glamour.tweakblogs.net/blog/7211/schizofrene-code-met-node-punt-js.html#r_97638\">ZpAz schreef op donderdag 20 oktober 2011 @ 13:45:</a><br>\r\nBeide mensen hebben zo en zo al een afkeer tegen Javascript, iets wat wel meer programmeurs hebben. Het is anders dan &quot;de gevestigde orde&quot; (C#, Java whatever) maar dat is niet iets wat het per definitie slechter maakt. <br>\r\n<br>\r\nIn alle talen moet je wel weten wat je doet. Maar zijn voorbeeld gaat ook nergens over. Als je in de &quot;main loop&quot; van een andere taal fibonacci gaat uitrekeken duurt het ook lang voordat je response krijgt. Dat betekend niet dat de taal slecht is, dat betekend dat de persoon zijn project slecht uitgedacht heeft.</div></blockquote>Klopt. Wat node.js probeert op te lossen is dat network programming, wat nou eenmaal heel moeilijk is om goed te doen wel fixed met een event loop als basis van het systeem. Je zal je daar dan wel aan moeten conformeren.",
            "ownReply": true
        },
        {
            "author": "ZpAz",
            "date": "donderdag 20 oktober 2011 15:25",
            "contentHtml": "<blockquote><div class=\"quote\"><a href=\"http://glamour.tweakblogs.net/blog/7211/schizofrene-code-met-node-punt-js.html#r_97641\">creator1988 schreef op donderdag 20 oktober 2011 @ 14:11:</a><br>\r\n[...]<br>\r\n<br>\r\nOmdat APF uit 2005 komt, ver voor andere frameworks <img src=\"http://tweakimg.net/g/s/smile.gif\" width=\"15\" height=\"15\" alt=\":)\"></div></blockquote>Als in jullie waren al bezig met dit project in 2005? Leeftijd is niet per definitie iets wat beter is. Immers is Node.JS ook &quot;jonger&quot; dan PHP en toch hebben jullie voor Node.JS gekozen. Sproutcore zelf komt uit 2007 trouwens. En wordt gebruikt door meerdere grote bedrijven (o.a Apple heeft o.a <a href=\"http://www.icloud.com\" rel=\"external\" title=\"http://www.icloud.com\">www.icloud.com</a> er mee gemaakt. <br>\r\n<br>\r\nJe hebt dus een community er achter staan welke ook actief ontwikkeld aan het systeem.",
            "ownReply": false
        },
        {
            "author": "donderdag 20 oktober 2011 17:33",
            "date": "",
            "contentHtml": "Devven in de browser lijkt me stukken beter dan wat we nu doen. Fragiele workstation installs, gelimiteerde power: dat kan veel beter. Lijkt me wel wat, &quot;devven in de cloud&quot;. Kansen voor grote productiviteitsverbetering.<br>\r\n<br>\r\nMaar ik heb een probleem met JavaScript. Namelijk: dat het niet schaalt. Dat moet C9 zich ook realiseren, anders vraag je niet de allerbeste JS hackers die de markt beschikt. C9 als cloudapp die devven in JS makkelijker maakt klinkt dan wel weer als interresante ducttape oplossing om toch groter te gaan met JS, maar de fundamentele problemen lost het niet op. Ga serieus in Javascript werken, en complexiteit wordt zo groot dat simpele refactorings als in Java/C# gewoon niet meer gaan werken zonder handmatig 100 files door te lopen (regexes hiervoor bouwen zie ik ook als handmatig).<br>\r\n<br>\r\nWat dat betreft lijkt Dart me veel interresanter. Die lost precies alle knelpunten van JS op: Reified generics, optional typing en een berg syntactische suiker om KISS code te kloppen. &apos;t is natuurlijk nog maar 0.0.2, maar ontwikkeling van API&#x15B; schier al heel aardig op. <br>\r\n<br>\r\nEr wordt wel eens gegrapt in #GWT dat Dart GWT 3.0 is. <br>\r\n<br>\r\nNee, JS is leuk voor enkele duizenden LOC, maar daarboven moet je veel moed en discipline hebben wil je iets groots erin maken. Ik wacht wel op Brightly.",
            "ownReply": false
        },
        {
            "author": "creator1988",
            "date": "donderdag 20 oktober 2011 18:03",
            "contentHtml": "<blockquote><div class=\"quote\"><a href=\"http://glamour.tweakblogs.net/blog/7211/schizofrene-code-met-node-punt-js.html#r_97642\">ZpAz schreef op donderdag 20 oktober 2011 @ 15:25:</a><br>\r\nAls in jullie waren al bezig met dit project in 2005? Leeftijd is niet per definitie iets wat beter is. Immers is Node.JS ook &quot;jonger&quot; dan PHP en toch hebben jullie voor Node.JS gekozen. Sproutcore zelf komt uit 2007 trouwens. En wordt gebruikt door meerdere grote bedrijven (o.a Apple heeft o.a <a href=\"http://www.icloud.com\" rel=\"external\" title=\"http://www.icloud.com\">www.icloud.com</a> er mee gemaakt. <br>\r\n<br>\r\nJe hebt dus een community er achter staan welke ook actief ontwikkeld aan het systeem.</div></blockquote>APF en Sproutcore zitten wel in elkaars gezichtsveld, maar vergeet niet dat Sproutcore tot niet zo heel lang geleden nog ver van volwassenheid was. Wellicht dat we wanneer er nu begonnen zou zijn met Cloud9 er een andere keuze gemaakt zou worden, maar desktop scale applicaties schrijven was anno 2009 nog niet zo vanzelfsprekend. APF is al tijden volwassen, en bovendien ook open source <img src=\"http://tweakimg.net/g/s/smile.gif\" width=\"15\" height=\"15\" alt=\":)\"> .<blockquote><div class=\"quote\"><a href=\"http://glamour.tweakblogs.net/blog/7211/schizofrene-code-met-node-punt-js.html#r_97643\">Ruudjah schreef op donderdag 20 oktober 2011 @ 17:33:</a><br>\r\nDevven in de browser lijkt me stukken beter dan wat we nu doen. Fragiele workstation installs, gelimiteerde power: dat kan veel beter. Lijkt me wel wat, &quot;devven in de cloud&quot;. Kansen voor grote productiviteitsverbetering.<br>\r\n<br>\r\nMaar ik heb een probleem met JavaScript. Namelijk: dat het niet schaalt. Dat moet C9 zich ook realiseren, anders vraag je niet de allerbeste JS hackers die de markt beschikt. C9 als cloudapp die devven in JS makkelijker maakt klinkt dan wel weer als interresante ducttape oplossing om toch groter te gaan met JS, maar de fundamentele problemen lost het niet op. Ga serieus in Javascript werken, en complexiteit wordt zo groot dat simpele refactorings als in Java/C# gewoon niet meer gaan werken zonder handmatig 100 files door te lopen (regexes hiervoor bouwen zie ik ook als handmatig).<br>\r\n<br>\r\nWat dat betreft lijkt Dart me veel interresanter. Die lost precies alle knelpunten van JS op: Reified generics, optional typing en een berg syntactische suiker om KISS code te kloppen. &apos;t is natuurlijk nog maar 0.0.2, maar ontwikkeling van API&#x15B; schier al heel aardig op. <br>\r\n<br>\r\nEr wordt wel eens gegrapt in #GWT dat Dart GWT 3.0 is. <br>\r\n<br>\r\nNee, JS is leuk voor enkele duizenden LOC, maar daarboven moet je veel moed en discipline hebben wil je iets groots erin maken. Ik wacht wel op Brightly.</div></blockquote>Ik ben het hier niet met je eens, je zal in elke programmeertaal moeten opletten hoe je de architectuur van je applicatie inricht wanneer je meer dan 10.000 LOC hebt; vaak genoeg gezien dat een C# app volledige spaghetti is; en daar gaat DART je ook niet bij helpen. Javascript heeft natuurlijk zijn cons, maar het is een heel krachtige dynamische en object georienteerde programmeertaal. De uitdaging van refactorings is een probleem dat alle dynamische talen hebben. Statische analyse is moeilijker dan voor bijv. C# of Java, maar ook daar zal Dart moeite mee hebben als je gebruik maakt van de dynamische features. Dat betekent echter niet dat static analysis niet mogelijk is. We hebben voor Cloud9 <a href=\"http://zef.me/\" rel=\"external\">iemand</a> aangetrokken die veel van static analysis weet en die is hier fulltime mee bezig. Wanneer je correcte AST&apos;s kan opbouwen dan betekent dat dat je refactorings etc. kan aanbieden en je van het files doorzoeken af bent. Het module systeem dat je wordt aangeboden door bijv. RequireJS helpt je hier overigens ook al heel erg bij, door duidelijke conventies af te spreken over het inladen van externe packages.<br>\r\n<br>\r\nOverigens geloof ik niet dat Dart de oorlog gaat winnen. Op de server zijn er al talloze concurrenten met een veel beter en uitgebreider eco-system, en op de client lost het niet HET probleem van javascript op, want dat is de DOM.<blockquote><div class=\"quote\">On the other hand, there was the Document Object Model, also known affectionately as the DOM. It is what most people hate when they say they hate JavaScript. Most of the people who say they hate JavaScript don&#x2019;t know JavaScript, might have never seen JavaScript, but they&#x2019;ve felt the DOM alright. If you don&#x2019;t know what the difference is and you say, &#x201C;JavaScript is the stupidest thing I&#x2019;ve ever seen,&#x201D; you&#x2019;re not talking about JavaScript, you&#x2019;re talking about the DOM. The DOM is the browser&#x2019;s API. It is the interface. It provides JavaScript for manipulating documents.</div></blockquote>Zolang Dart dit niet verbeterd (en dit kunnen ze niet verbeteren want dit is een browser zaak), hebben ze geen echte advantages over Javascript.<br>\r\n<br>\r\nLees overigens ook wat PPK heeft geschreven over Dart: <a href=\"http://www.quirksmode.org/blog/archives/2011/10/dart_or_why_jav.html\" rel=\"external\" title=\"http://www.quirksmode.org/blog/archives/2011/10/dart_or_why_jav.html\">http://www.quirksmode.org...1/10/dart_or_why_jav.html</a><p class=\"edit\">[Reactie gewijzigd op donderdag 20 oktober 2011 18:07]</p>",
            "ownReply": true
        },
        {
            "author": "donderdag 20 oktober 2011 18:14",
            "date": "",
            "contentHtml": "<blockquote><div class=\"quote\">Ik ben het hier niet met je eens, je zal in elke programmeertaal moeten opletten hoe je de architectuur van je applicatie inricht wanneer je meer dan 10.000 LOC hebt; vaak genoeg gezien dat een C# app volledige spaghetti is; en daar gaat DART je ook niet bij helpen.</div></blockquote>Daar gaat Dart mij zeker wel bij helpen. In JS moet ik zelf iets bedenken, wat kan, maar niet tot een uniforme wijze van projectinrichting leid. Betekent dat ik bij ieder JS project opnieuw moet uitzoeken hoe de boel in elkaar steekt. Tot op zekere hoogte werkt aangenomen conventie hier, maar niet zo goed als een geforceerde projectstructuur door het platform zelf. <br>\r\n<br>\r\nUiteraard kan je met elke hamer een fijngeslepen schaakspel slijpen, of lomp zorgen dat de boel past (met een hamer past alles immers). Het feit dat je veel van static analysis moet weten om iets als refactorings gedaan te krijgen is tekenend; het geeft aan dat bepaalde zaken gewoon te lastig zijn om op dat platform te doen. Waar C9 een hardcore analist nodig heeft, zal je met Dart een doodgewone coder refactoring kunnen laten implementeren; het onderliggende typesysteem is eenvoudig genoeg. <br>\r\n<br>\r\nJavascript is krachtig genoeg om de meest uiteenlopende systemen in te bouwen. Maar de complexiteit die het met zich meebrengt is het gewoon niet waard om erin te investeren voor grote apps.",
            "ownReply": false
        },
        {
            "author": "donderdag 20 oktober 2011 18:19",
            "date": "",
            "contentHtml": "<blockquote><div class=\"quote\">Overigens geloof ik niet dat Dart de oorlog gaat winnen. Op de server zijn er al talloze concurrenten met een veel beter en uitgebreider eco-system, en op de client lost het niet HET probleem van javascript op, want dat is de DOM.</div></blockquote><a href=\"http://www.dartlang.org/articles/improving-the-dom/\" rel=\"external\" title=\"http://www.dartlang.org/articles/improving-the-dom/\">http://www.dartlang.org/articles/improving-the-dom/</a><blockquote><div class=\"quote\">(en dit kunnen ze niet verbeteren want dit is een browser zaak),</div></blockquote>Jawel. De Dart VM gaat de JS VM vervangen (althans, da&apos;s het plan). De DOM kan je dan dus via de Dart DOM API aanspreken. De JS &lt;===&gt; DOM horror heb je dan dus niet meer, of vele malen simpeler/beter geregeld.<br>\r\n<br>\r\nEen VM die goed genoeg werkt op de server kan een hoop usecases positief beinvloeden. Dan heb je opeens ook schizofrene code (net als met GWT), met dus meer reusability.",
            "ownReply": false
        },
        {
            "author": "Jrz",
            "date": "donderdag 20 oktober 2011 19:59",
            "contentHtml": "Gefeliciteerd met je overstap naar c9 =)<br>\r\nEen NL startup met silicon valley geld <img src=\"http://tweakimg.net/g/s/puh2.gif\" width=\"15\" height=\"15\" alt=\":P\">",
            "ownReply": false
        },
        {
            "author": "sheeppower",
            "date": "zaterdag 22 oktober 2011 15:13",
            "contentHtml": "Mooie overstap, is een wereld van verschil.<br>\r\n<br>\r\nKan je meteen een balletje opgooien bij c9 of er een studenten abo kan komen?  <img src=\"http://tweakimg.net/g/s/shiny.gif\" width=\"15\" height=\"15\" alt=\":*)\"> Voor opdrachten bij de studie kan ik niet altijd de source opengooien en 15 euro vind ik net iets te veel van het goede. Nu draai ik c9 lokaal en gebruik private repos van bitbucket. Werkt ook prima, maar vereist wel dat ik altijd mn laptop mee moet nemen naar de uni.<br>\r\n<br>\r\nSucces met je nieuwe job! Ik kijk uit naar nieuwe posts over node.js",
            "ownReply": false
        },
        {
            "author": "creator1988",
            "date": "maandag 24 oktober 2011 10:20",
            "contentHtml": "<blockquote><div class=\"quote\"><a href=\"http://glamour.tweakblogs.net/blog/7211/schizofrene-code-met-node-punt-js.html#r_97646\">Ruudjah schreef op donderdag 20 oktober 2011 @ 18:19:</a><br>\r\n<a href=\"http://www.dartlang.org/articles/improving-the-dom/\" rel=\"external\" title=\"http://www.dartlang.org/articles/improving-the-dom/\">http://www.dartlang.org/articles/improving-the-dom/</a><br>\r\n<br>\r\nJawel. De Dart VM gaat de JS VM vervangen (althans, da&apos;s het plan). De DOM kan je dan dus via de Dart DOM API aanspreken. De JS &lt;===&gt; DOM horror heb je dan dus niet meer, of vele malen simpeler/beter geregeld.<br>\r\n<br>\r\nEen VM die goed genoeg werkt op de server kan een hoop usecases positief beinvloeden. Dan heb je opeens ook schizofrene code (net als met GWT), met dus meer reusability.</div></blockquote>Dit is een extra laag over de DOM heen, net als je in javascript Sizzle hebt die dit faciliteert (jQuery gebruikt dit). Het enige wat ze echter oplossen is de selectors, de onderliggende hell met &apos;innerHTML&apos;, de style properties, etc. lossen ze niet op. Ook heel moeilijk want de DOM is een directe port van de C API in de browser. Javascript heeft hier al een heel eco systeem voor waardoor je via bijv. jQuery nooit meer hoeft na te denken over de DOM. Daar ligt dus nog een heel grote voorsprong voor js.<blockquote><div class=\"quote\"><a href=\"http://glamour.tweakblogs.net/blog/7211/schizofrene-code-met-node-punt-js.html#r_97645\">Ruudjah schreef op donderdag 20 oktober 2011 @ 18:14:</a><br>\r\n[...]<br>\r\n<br>\r\nDaar gaat Dart mij zeker wel bij helpen. In JS moet ik zelf iets bedenken, wat kan, maar niet tot een uniforme wijze van projectinrichting leid. Betekent dat ik bij ieder JS project opnieuw moet uitzoeken hoe de boel in elkaar steekt. Tot op zekere hoogte werkt aangenomen conventie hier, maar niet zo goed als een geforceerde projectstructuur door het platform zelf.</div></blockquote>Wat probeer je hier nu te zeggen? Javascript kent zat frameworks die je een bepaalde denkwijze induwen, neem <a href=\"http://expressjs.com/\" rel=\"external\">express</a> (node.js web framework). Zolang je op basis van dat framework gaat bouwen zal je aanpak telkens hetzelfde zijn. Meer keuzevrijheid ftw<blockquote><div class=\"quote\">Uiteraard kan je met elke hamer een fijngeslepen schaakspel slijpen, of lomp zorgen dat de boel past (met een hamer past alles immers). Het feit dat je veel van static analysis moet weten om iets als refactorings gedaan te krijgen is tekenend; het geeft aan dat bepaalde zaken gewoon te lastig zijn om op dat platform te doen. Waar C9 een hardcore analist nodig heeft, zal je met Dart een doodgewone coder refactoring kunnen laten implementeren; het onderliggende typesysteem is eenvoudig genoeg.</div></blockquote>Statische onderdelen zijn makkelijker te analyseren dan dynamische. Code completion voor bijv. de DOM is relatief eenvoudig. Het probleem begint bij het dynamische gedeelte van je taal. Hier is Dart ook vatbaar voor want ondanks de syntactic sugar voor type hinting blijft Dart dynamisch. 100% correct syntax trees zijn dan ook moeilijk te bouwen voor Dart tenzij je type hinting gebruikt. Desondanks, als je dit geen probleem vindt; er zijn ook dit soort additions voor javascript. Bijvoorbeeld <a href=\"http://appendto.com/community/jquery-vsdoc\" rel=\"external\" title=\"http://appendto.com/community/jquery-vsdoc\">http://appendto.com/community/jquery-vsdoc</a>.<blockquote><div class=\"quote\">Javascript is krachtig genoeg om de meest uiteenlopende systemen in te bouwen. Maar de complexiteit die het met zich meebrengt is het gewoon niet waard om erin te investeren voor grote apps.</div></blockquote>Een taal maakt niet of een applicatie wel of niet complex wordt, dat bepaalt de architectuur.",
            "ownReply": true
        },
        {
            "author": "creator1988",
            "date": "maandag 24 oktober 2011 10:23",
            "contentHtml": "<blockquote><div class=\"quote\"><a href=\"http://glamour.tweakblogs.net/blog/7211/schizofrene-code-met-node-punt-js.html#r_97648\">Jrz schreef op donderdag 20 oktober 2011 @ 19:59:</a><br>\r\nGefeliciteerd met je overstap naar c9 =)<br>\r\nEen NL startup met silicon valley geld <img src=\"http://tweakimg.net/g/s/puh2.gif\" width=\"15\" height=\"15\" alt=\":P\"></div></blockquote>Dank! En ja, dit is redelijk uniek in Nederland. C9 is ook de eerste NL investering van Accel voor wat ik heb begrepen, dus leuk om daar onderdeel van uit te maken  <img src=\"http://tweakimg.net/g/s/smile.gif\" width=\"15\" height=\"15\" alt=\":)\"><blockquote><div class=\"quote\"><a href=\"http://glamour.tweakblogs.net/blog/7211/schizofrene-code-met-node-punt-js.html#r_97746\">sheeppower schreef op zaterdag 22 oktober 2011 @ 15:13:</a><br>\r\nMooie overstap, is een wereld van verschil.<br>\r\n<br>\r\nKan je meteen een balletje opgooien bij c9 of er een studenten abo kan komen?  <img src=\"http://tweakimg.net/g/s/shiny.gif\" width=\"15\" height=\"15\" alt=\":*)\"> Voor opdrachten bij de studie kan ik niet altijd de source opengooien en 15 euro vind ik net iets te veel van het goede. Nu draai ik c9 lokaal en gebruik private repos van bitbucket. Werkt ook prima, maar vereist wel dat ik altijd mn laptop mee moet nemen naar de uni.<br>\r\n<br>\r\nSucces met je nieuwe job! Ik kijk uit naar nieuwe posts over node.js</div></blockquote>We zijn er mee bezig, maar het is even uitzoeken hoe je dit fool- en fraudeproof kan maken. Als je mij een mail kan sturen op <a href=\"mailto:jan@c9.io\" title=\"mailto:jan@c9.io\">mailto:jan@c9.io</a> dan hou ik je op de hoogte.",
            "ownReply": true
        },
        {
            "author": "maandag 24 oktober 2011 19:53",
            "date": "",
            "contentHtml": "<blockquote><div class=\"quote\">Javascript kent zat frameworks die je een bepaalde denkwijze induwen, neem express (node.js web framework).</div></blockquote>Dat zie ik als een groot nadeel. De verkregen flexibiliteit heeft geen toegevoegde waarde, maar leidt wel tot verschillen in projectinrichting. Met als gevolg dat nieuwe devvers eerst de structuur eigen moeten maken. Da&apos;s met Java of .NET anders: zij hebben standaardstructuren om projecten op te zetten. Bij een Javascript app moet ik eerst tijd energie steken in het snappen van de structuur <i>waarna</i> ik pas kan beginnen  aan het snappen van de domein specifieke concepten, en hoe deze verankerd liggen in de projectstructuur.<br>\r\nAnder belangrijk nadeel is dat je geen reflectie kan doen op projectnivo, of een structuur provider moet ook een reflectieprovider aanbieden. Als dynamische taal heeft JS natuurlijk een mate van reflectie, maar niet voor projectstructuur.<blockquote><div class=\"quote\">Een taal maakt niet of een applicatie wel of niet complex wordt, dat bepaalt de architectuur.</div></blockquote>Inderdaad. Maar een platform/taal kan wel <i>helpen om een goede structuur te gebruiken</i>. Standaardmanieren om imports te doen scheelt bijvoorbeeld al een hoop. Javascript makes me think. Don&apos;t make me think. Make me think about the business domain. En dat doet C9 natuurlijk. <br>\r\n<br>\r\n[q]Javascript heeft hier al een heel eco systeem voor waardoor je via bijv. jQuery nooit meer hoeft na te denken over de DOM. Daar ligt dus nog een heel grote voorsprong voor js.[q]<br>\r\nDe dom kan je &quot;gewoon&quot; aanbieden als facade over de DOM api van de browser heen (wat ze ook gewoon doen met de nieuwe API).<blockquote><div class=\"quote\">Wat probeer je hier nu te zeggen?</div></blockquote>C9 is very nice. Maar om een aantal zaken in webapp IDE land structureler op te lossen, heb je een taal nodig die minder issues met schaling heeft. C9 maakt het mogelijk om <i>complexere</i> apps (in vergelijking met huidige js apps) te bouwen voor in de browser. Dart maakt het mogelijk zeer <i>complexe</i> apps te bouwen (Dart is daarvoor excpliciet ontworpen). C9 lost een probleem op: complexe webapps maken. Ik zeg: Kan, maar je blijft met inherente problemen van Javascript zitten.<br>\r\n<br>\r\nMooie is dat C9 <i>er nu is</i>, terwijl dart nog flink moet groeien wil je echt serieuzere dingen doen.",
            "ownReply": false
        }
    ]
}