{
    "title": "Diakritische tekens en Soundex in .NET",
    "language": "nl",
    "link": "http://glamour.tweakblogs.net/blog/5732/diakritische-tekens-en-soundex-in-net.html",
    "date": "2010-12-14T11:17:00.000Z",
    "category": "Algoritmes",
    "views": 4186,
    "articleHtml": "In Nederland kennen we zo&apos;n 240.000 geografische entiteiten (straten, buurten, plaatsen, gemeentes, etc.) die gebruik maken van <a href=\"http://connect.nen.nl/~/Preview.aspx?artfile=437043&amp;RNR=83617\" rel=\"external\">NEN-norm 5825</a> voor de offici&#xEB;le schrijfwijze. Een norm waarin g&#xE9;&#xE9;n diakritische tekens mogen worden gebruikt. So far so good.<br>\r\n<br>\r\n<i><a href=\"http://nl.wikipedia.org/wiki/Diakritisch_teken\" rel=\"external\">Wikipedia</a> over diakrieten: Een diakritisch teken is een teken dat boven, onder of door een letter gezet wordt en nodig is voor de uitspraak. Met diakritische tekens kunnen verschillende aspecten van de uitspraak worden aangegeven. Voorbeelden hiervan zijn de tekens op &#xE9;, &#xE2;, &#xF6;.</i><br>\r\n<br>\r\n<b>Zelfde data, andere schrijfwijze?</b><br>\r\nSo far so good, tot het CBS met een nieuwe aanlevering van <a href=\"http://www.funda.nl/buurtinfo/zaandam/kalf/kenmerken/\" rel=\"external\">buurtinformatie</a> komt. Een groot Excel document waarin ze de schrijfwijze van buurten zoals de gemeente deze hanteert overnemen; waar uiteraard w&#xE9;l diakritische tekens kunnen voorkomen. Gevolg: problemen bij het koppelen van de nieuwe CBS-data, aan onze bestaande data.<br>\r\n<br>\r\nNormalisatietijd dus!<br>\r\n<br><a name=\"more\"></a><br>\r\n<br>\r\n<b>Normaliseren van buurt- en gemeentenamen tussen twee datasets</b><br>\r\n1. Vind alle buurt / gemeente combinaties die direct matchen.<br>\r\n2. Verwijder diakritische tekens, en herhaal 1.<br>\r\n3. Nog niet gelukt? Gebruik het fonetische algoritme <a href=\"http://en.wikipedia.org/wiki/Soundex\" rel=\"external\">Soundex</a> om overeenkomstige gebieden te vinden.<br>\r\n<br>\r\nNu hebben we voor bovenstaande stappen wel wat code nodig:<br>\r\n<br>\r\n<b>Diakrieten verwijderen in C#</b><br>\r\nUnicode kent een aantal schrijfwijzen; waarin de output hetzelfde is, maar de binaire representatie hetzelfde. Deze staan beschreven in de <a href=\"http://unicode.org/reports/tr15/tr15-23.html\" rel=\"external\">Unicode Normalization Forms</a>. FormD is voor het verwijderen van diakritische tekens erg handig, omdat hierin het teken <i>&#xFB;</i> wordt gerepresenteerd als 2 karakters: de &apos;u&apos;, en de toevoeging &apos;^&apos; als los karakter met een eigen unicode teken. In .NET is voor het normalizeren van Unicode de functie &apos;Normalize&apos; beschikbaar, waarin ook FormD beschikbaar is.<br>\r\n<br>\r\n<br>C#:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br>4<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_keyword\">string</span>&#xA0;<span class=\"code_ident\">q</span>&#xA0;=&#xA0;<span class=\"code_string\">&quot;W&#xFB;nseradiel&quot;</span>;\n<br><span class=\"code_keyword\">char</span>[]&#xA0;<span class=\"code_ident\">normalised</span>&#xA0;=&#xA0;<span class=\"code_ident\">q</span>.<span class=\"code_method\">Normalize</span>(<span class=\"code_ident\">NormalizationForm</span>.<span class=\"code_ident\">FormD</span>).<span class=\"code_method\">ToCharArray</span>();\n<br><span class=\"code_ident\">q</span>&#xA0;=&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_keyword\">string</span>(<span class=\"code_ident\">normalised</span>.<span class=\"code_method\">Where</span>(<span class=\"code_ident\">c</span>&#xA0;=&gt;&#xA0;(<span class=\"code_keyword\">int</span>)&#xA0;<span class=\"code_ident\">c</span>&#xA0;&lt;=&#xA0;<span class=\"code_number\">127</span>).<span class=\"code_method\">ToArray</span>());\n<br><span class=\"code_comment\">//&#xA0;q&#xA0;==&#xA0;&quot;Wunseradiel&quot;</span></code></div></td></tr></table><br>\r\n<br>\r\n<b>Soundex in C#</b><br>\r\nSoundex is een fonetisch algoritme dat gebruikt kan worden om 2 strings te vergelijken op uitspraak. In de meeste SQL dialecten is een vorm van dit algoritme beschikbaar, maar meestal in het Engels. Daarom hieronder een Nederlandse versie van Soundex, op basis van een artikel van <a href=\"http://dpatrickcaldwell.blogspot.com/2009/06/soundex-extension-method-for-c.html\" rel=\"external\">D. Patrick Caldwell</a>.<br>\r\n<br>C#:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br>29<br>30<br>31<br>32<br>33<br>34<br>35<br>36<br>37<br>38<br>39<br>40<br>41<br>42<br>43<br>44<br>45<br>46<br>47<br>48<br>49<br>50<br>51<br>52<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_ident\">var</span>&#xA0;<span class=\"code_ident\">a</span>&#xA0;=&#xA0;<span class=\"code_method\">DutchSoundex</span>(<span class=\"code_string\">&quot;Overeisel&quot;</span>);&#xA0;<span class=\"code_comment\">//&#xA0;O4070205</span>\n<br><span class=\"code_ident\">var</span>&#xA0;<span class=\"code_ident\">b</span>&#xA0;=&#xA0;<span class=\"code_method\">DutchSoundex</span>(<span class=\"code_string\">&quot;Overrijssel&quot;</span>);&#xA0;<span class=\"code_comment\">//&#xA0;O4070205</span>\n<br><span class=\"code_comment\">//&#xA0;omg!&#xA0;A&#xA0;en&#xA0;B&#xA0;zijn&#xA0;gelijk!&#xA0;It&apos;s&#xA0;magic!</span>\n<br>\n<br><span class=\"code_keyword\">private</span>&#xA0;<span class=\"code_keyword\">static</span>&#xA0;<span class=\"code_ident\">Regex</span>&#xA0;<span class=\"code_ident\">simplify</span>&#xA0;=&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_method\">Regex</span>(@<span class=\"code_string\">&quot;(\\d)\\1*D?\\1+&quot;</span>,&#xA0;<span class=\"code_ident\">RegexOptions</span>.<span class=\"code_ident\">Compiled</span>);\n<br>\n<br><span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_keyword\">string</span>&#xA0;<span class=\"code_method\">DutchSoundex</span>(<span class=\"code_keyword\">string</span>&#xA0;<span class=\"code_ident\">s</span>)\n<br>{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;encoding&#xA0;info,&#xA0;e.g.&#xA0;M&#xA0;heeft&#xA0;waarde&#xA0;6</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">const</span>&#xA0;<span class=\"code_keyword\">string</span>&#xA0;<span class=\"code_ident\">chars</span>&#xA0;=&#xA0;<span class=\"code_string\">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZ&quot;</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">const</span>&#xA0;<span class=\"code_keyword\">string</span>&#xA0;<span class=\"code_ident\">codes</span>&#xA0;=&#xA0;<span class=\"code_string\">&quot;01230420002566012723044802&quot;</span>;\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;karakters&#xA0;vervangen</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">Dictionary</span>&lt;<span class=\"code_keyword\">string</span>,&#xA0;<span class=\"code_keyword\">string</span>&gt;&#xA0;<span class=\"code_ident\">replacements</span>&#xA0;=&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_ident\">Dictionary</span>&lt;<span class=\"code_keyword\">string</span>,&#xA0;<span class=\"code_keyword\">string</span>&gt;()\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{<span class=\"code_string\">&quot;QU&quot;</span>,&#xA0;<span class=\"code_string\">&quot;KW&quot;</span>},\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{<span class=\"code_string\">&quot;SCH&quot;</span>,&#xA0;<span class=\"code_string\">&quot;SEE&quot;</span>},\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{<span class=\"code_string\">&quot;KS&quot;</span>,&#xA0;<span class=\"code_string\">&quot;XX&quot;</span>},\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{<span class=\"code_string\">&quot;KX&quot;</span>,&#xA0;<span class=\"code_string\">&quot;XX&quot;</span>},\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{<span class=\"code_string\">&quot;KC&quot;</span>,&#xA0;<span class=\"code_string\">&quot;KK&quot;</span>},\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{<span class=\"code_string\">&quot;CK&quot;</span>,&#xA0;<span class=\"code_string\">&quot;KK&quot;</span>},\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{<span class=\"code_string\">&quot;DT&quot;</span>,&#xA0;<span class=\"code_string\">&quot;TT&quot;</span>},\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{<span class=\"code_string\">&quot;TD&quot;</span>,&#xA0;<span class=\"code_string\">&quot;TT&quot;</span>},\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{<span class=\"code_string\">&quot;CH&quot;</span>,&#xA0;<span class=\"code_string\">&quot;GG&quot;</span>},\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{<span class=\"code_string\">&quot;SZ&quot;</span>,&#xA0;<span class=\"code_string\">&quot;SS&quot;</span>},\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{<span class=\"code_string\">&quot;IJ&quot;</span>,&#xA0;<span class=\"code_string\">&quot;YY&quot;</span>}\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;};\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">s</span>&#xA0;=&#xA0;<span class=\"code_ident\">s</span>.<span class=\"code_method\">ToUpper</span>();\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;vervang&#xA0;de&#xA0;waardes&#xA0;in&#xA0;de&#xA0;dictionary</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">foreach</span>&#xA0;(<span class=\"code_ident\">var</span>&#xA0;<span class=\"code_ident\">replacementRule</span>&#xA0;<span class=\"code_keyword\">in</span>&#xA0;<span class=\"code_ident\">replacements</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">s</span>&#xA0;=&#xA0;<span class=\"code_ident\">s</span>.<span class=\"code_method\">Replace</span>(<span class=\"code_ident\">replacementRule</span>.<span class=\"code_ident\">Key</span>,&#xA0;<span class=\"code_ident\">replacementRule</span>.<span class=\"code_ident\">Value</span>);\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">StringBuilder</span>&#xA0;<span class=\"code_ident\">coded</span>&#xA0;=&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_method\">StringBuilder</span>();\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;bereken&#xA0;de&#xA0;waardes&#xA0;op&#xA0;basis&#xA0;van&#xA0;de&#xA0;encoding&#xA0;array</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">for</span>&#xA0;(<span class=\"code_keyword\">int</span>&#xA0;<span class=\"code_ident\">i</span>&#xA0;=&#xA0;<span class=\"code_number\">0</span>;&#xA0;<span class=\"code_ident\">i</span>&#xA0;&lt;&#xA0;<span class=\"code_ident\">s</span>.<span class=\"code_ident\">Length</span>;&#xA0;<span class=\"code_ident\">i</span>++)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">int</span>&#xA0;<span class=\"code_ident\">index</span>&#xA0;=&#xA0;<span class=\"code_ident\">chars</span>.<span class=\"code_method\">IndexOf</span>(<span class=\"code_ident\">s</span>[<span class=\"code_ident\">i</span>]);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">if</span>&#xA0;(<span class=\"code_ident\">index</span>&#xA0;&gt;=&#xA0;<span class=\"code_number\">0</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">coded</span>.<span class=\"code_method\">Append</span>(<span class=\"code_ident\">codes</span>[<span class=\"code_ident\">index</span>]);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">string</span>&#xA0;<span class=\"code_ident\">result</span>&#xA0;=&#xA0;<span class=\"code_ident\">coded</span>.<span class=\"code_method\">ToString</span>();\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;repeating&#xA0;karakters&#xA0;vervangen</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">result</span>&#xA0;=&#xA0;<span class=\"code_ident\">simplify</span>.<span class=\"code_method\">Replace</span>(<span class=\"code_ident\">result</span>,&#xA0;<span class=\"code_string\">&quot;$1&quot;</span>).<span class=\"code_method\">Substring</span>(<span class=\"code_number\">1</span>);\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;return&#xA0;the&#xA0;first&#xA0;character&#xA0;followed&#xA0;by&#xA0;the&#xA0;coded&#xA0;string</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_keyword\">string</span>.<span class=\"code_method\">Format</span>(<span class=\"code_string\">&quot;{0}{1}&quot;</span>,&#xA0;<span class=\"code_ident\">s</span>[<span class=\"code_number\">0</span>],&#xA0;<span class=\"code_ident\">result</span>);\n<br>}</code></div></td></tr></table><br>\r\n<br>\r\nOp basis van regel 2. en 3. hebben we 94% van de probleemgevallen automatisch kunnen fixen!",
    "nextLink": "http://glamour.tweakblogs.net/blog/5709/internet-explorer-6-7-en-onverklaarbaar-cpu-gebruik.html",
    "comments": [
        {
            "author": "-RetroX-",
            "date": "dinsdag 14 december 2010 12:32",
            "contentHtml": "Mooie functie.<br>\r\n<br>\r\nWelke plaatsen leverden nog verrassende problemen op?<p class=\"edit\">[Reactie gewijzigd op dinsdag 14 december 2010 12:35]</p>",
            "ownReply": false
        },
        {
            "author": "RobIII",
            "date": "dinsdag 14 december 2010 13:42",
            "contentHtml": "<span style=\"text-decoration:line-through\">Hou er wel rekening mee dat soundex primair voor engelstalige doeleinden bedoeld is; waarmee ik dus wil zeggen dat voor de hand liggende matches alsnog wellicht niet gevonden kunnen worden. Oh, en de meeste RDBMS&apos;en kennen native al een soundex <img src=\"http://tweakimg.net/g/s/wink.gif\" width=\"15\" height=\"15\" alt=\";)\"></span><br>\r\nEcht... heb nog stront in mijn ogen volgens mij <img src=\"http://tweakimg.net/g/s/shutup.gif\" width=\"15\" height=\"16\" alt=\":X\"> <b>Dutch</b>Soundex()<br>\r\n<br>\r\n<br>\r\nOverigens heb je in je comments dan weer NL dan weer EN <img src=\"http://tweakimg.net/g/s/puh2.gif\" width=\"15\" height=\"15\" alt=\":P\"><p class=\"edit\">[Reactie gewijzigd op dinsdag 14 december 2010 13:51]</p>",
            "ownReply": false
        },
        {
            "author": "creator1988",
            "date": "woensdag 15 december 2010 10:26",
            "contentHtml": "<blockquote><div class=\"quote\"><a href=\"http://glamour.tweakblogs.net/blog/5732/diakritische-tekens-en-soundex-in-net.html#r_76968\">-RetroX- schreef op dinsdag 14 december 2010 @ 12:32:</a><br>\r\nMooie functie.<br>\r\n<br>\r\nWelke plaatsen leverden nog verrassende problemen op?</div></blockquote>1. Friese buurten waarin de naam in Fries werd aangeleverd door het CBS, en bij ons in het Nederlands staat. Haast onmogelijk om geautomatiseerd te fixen.<br>\r\n2. Buurtnamen die heel erg op elkaar lijken in eenzelfde gemeente (wel in verschillende plaatsen). Ik kan me een specifiek geval herinneren waarin bij ons de buurt eindigde op &apos;dael&apos;, en in CBS data twee keer voorkwam als &apos;daal&apos; en &apos;deel&apos;.",
            "ownReply": true
        }
    ]
}