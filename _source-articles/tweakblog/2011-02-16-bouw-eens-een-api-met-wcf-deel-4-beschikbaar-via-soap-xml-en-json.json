{
    "title": "Bouw eens een API met WCF, deel 4: Beschikbaar via SOAP, XML en JSON",
    "language": "nl",
    "link": "http://glamour.tweakblogs.net/blog/6152/bouw-eens-een-api-met-wcf-deel-4-beschikbaar-via-soap-xml-en-json.html",
    "date": "2011-02-16T13:30:00.000Z",
    "category": "Reacties (3)",
    "views": 5006,
    "articleHtml": "Een API is geen API als er niet via verschillende protocollen tegenaan gepraat kan worden; iets wat in WCF volledig in config geregeld kan worden. In Visual Studio 2008 nog iets wat haast automatisch handwerk werd:  de Configuration Editor was niet alleen alles behalve intuitief, maar genereerde ook nogal eens niet werkende configs. 2010 heeft daar echter verbeteringen in aangebracht, waardoor het configureren voor meerdere endpoints een breeze is.<br><a name=\"more\"></a><br>\r\n<b>Service</b><br>\r\nWe gaan uit van de volgende service:<br>\r\n<br>C#:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br>29<br>30<br>31<br></code></td><td class=\"phphighlightcode\"><div><code>&#xA0;&#xA0;&#xA0;&#xA0;[<span class=\"code_ident\">ServiceContract</span>]\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_keyword\">interface</span>&#xA0;<span class=\"code_ident\">IDemoService</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;[<span class=\"code_ident\">OperationContract</span>]\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;[<span class=\"code_ident\">WebGet</span>]\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">SomeContract</span>&#xA0;<span class=\"code_method\">GetData</span>(<span class=\"code_keyword\">string</span>&#xA0;<span class=\"code_ident\">id</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_keyword\">class</span>&#xA0;<span class=\"code_ident\">DemoService</span>&#xA0;:&#xA0;<span class=\"code_ident\">IDemoService</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_ident\">SomeContract</span>&#xA0;<span class=\"code_method\">GetData</span>&#xA0;(<span class=\"code_keyword\">string</span>&#xA0;<span class=\"code_ident\">id</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_method\">SomeContract</span>(<span class=\"code_ident\">id</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;[<span class=\"code_ident\">DataContract</span>]\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_keyword\">class</span>&#xA0;<span class=\"code_ident\">SomeContract</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">private</span>&#xA0;<span class=\"code_keyword\">readonly</span>&#xA0;<span class=\"code_keyword\">string</span>&#xA0;<span class=\"code_ident\">_id</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_method\">SomeContract</span>(<span class=\"code_keyword\">string</span>&#xA0;<span class=\"code_ident\">id</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">_id</span>&#xA0;=&#xA0;<span class=\"code_ident\">id</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;[<span class=\"code_ident\">DataMember</span>]\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_keyword\">string</span>&#xA0;<span class=\"code_ident\">Hoi</span>&#xA0;{&#xA0;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">get</span>&#xA0;{&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_string\">&quot;Jan&quot;</span>&#xA0;+&#xA0;<span class=\"code_ident\">_id</span>;&#xA0;&#xA0;}&#xA0;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">set</span>&#xA0;{&#xA0;}\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}</code></div></td></tr></table><br>\r\n<br>\r\n<b>Endpoints?</b><br>\r\nVoor een standaard WCF API die SOAP en REST ondersteunt zijn er 2 endpoints nodig. Een endpoint is een adres waarop de service kan reageren volgens een bepaalde configuratieset. De endpoints in dit geval zijn:<ul><li>rest, een webHttpBinding die luistert op adres &apos;&apos; (leeg)</li><li>soap, een basicHttpBinding die luistert op adres &apos;soap&apos;</li></ul>De &apos;soap&apos; binding biedt een WSDL aan om te gebruiken door andere platformen.<br>\r\n<br>\r\n<b>Configureren</b><br>\r\nIn je project kies voor &apos;Tools&apos; -&gt; &apos;WCF Configuration Editor&apos;, en selecteer je web.config-file onder &apos;File&apos; -&gt; &apos;Open&apos; -&gt; &apos;Config file&apos;. Als je op &apos;Services&apos; klikt zie je dat er standaard al een aantal endpoints zijn aangemaakt. Verwijder deze allemaal met de &apos;Delete&apos; button.<br>\r\n<img src=\"http://www.100procentjan.nl/tweakers/wcf_endpoints1.png\" title=\"http://www.100procentjan.nl/tweakers/wcf_endpoints1.png\" alt=\"http://www.100procentjan.nl/tweakers/wcf_endpoints1.png\"><br>\r\n<br>\r\n<b>Behavior aanmaken</b><br>\r\nAllereerst maken we een &apos;behavior&apos; aan, een set regels waar de service zich aan moet houden. Hier kunnen we instellen dat de service via HTTP te benaderen is. Nodig om de service beschikbaar te maken via REST.<br>\r\n<img src=\"http://www.100procentjan.nl/tweakers/wcf_endpoints2.png\" title=\"http://www.100procentjan.nl/tweakers/wcf_endpoints2.png\" alt=\"http://www.100procentjan.nl/tweakers/wcf_endpoints2.png\"><br>\r\n<br>\r\n<b>Eerste endpoint toevoegen: REST</b><br>\r\nWanneer je nu op de folder &apos;Services&apos; klikt, kies voor &apos;Create a New Service Endpoint&apos;. Je komt vervolgens in een wizard terecht.<br>\r\n<br>\r\n1. Selecteer allereerst de DLL van je service, en direct daarna de type:<br>\r\n<img src=\"http://www.100procentjan.nl/tweakers/wcf_endpoints1.png\" title=\"http://www.100procentjan.nl/tweakers/wcf_endpoints1.png\" alt=\"http://www.100procentjan.nl/tweakers/wcf_endpoints1.png\"><br>\r\n<br>\r\n2. Kies bij &apos;What communication mode is your service using&apos; voor &apos;HTTP&apos;.<br>\r\n<br>\r\n3. Kies bij &apos;What method of interoperability do you want to use&apos; voor &apos;Basic Web Services interoperability&apos;<br>\r\n<br>\r\n4. Voer bij &apos;What is the address of your endpoint&apos; niets in:<br>\r\n<img src=\"http://www.100procentjan.nl/tweakers/wcf_endpoints4.png\" title=\"http://www.100procentjan.nl/tweakers/wcf_endpoints4.png\" alt=\"http://www.100procentjan.nl/tweakers/wcf_endpoints4.png\"><br>\r\n<br>\r\n5. Het eerste endpoint is aangemaakt. Verander de volgende settings:<br>\r\n<img src=\"http://www.100procentjan.nl/tweakers/wcf_endpoints5.png\" title=\"http://www.100procentjan.nl/tweakers/wcf_endpoints5.png\" alt=\"http://www.100procentjan.nl/tweakers/wcf_endpoints5.png\"><br>\r\n<br>\r\nVoila. Wanneer je nu build is je service beschikbaar onder:<br>\r\nhttp://localhost:POORT/DemoService.wcf/getdata?id=1<br>\r\n<img src=\"http://www.100procentjan.nl/tweakers/wcf_endpoints6.png\" title=\"http://www.100procentjan.nl/tweakers/wcf_endpoints6.png\" alt=\"http://www.100procentjan.nl/tweakers/wcf_endpoints6.png\"><br>\r\n<br>\r\n<b>Tweede endpoint toevoegen: SOAP</b><br>\r\nVoor het toevoegen van je &apos;SOAP&apos; endpoint, kies je weer voor &apos;Create a New Service Endpoint&apos;. Druk steeds op &apos;Next &gt;&apos; behalve bij &apos;Address&apos;. Voer hier &apos;soap&apos; in. C&apos;est soit.<br>\r\n<img src=\"http://www.100procentjan.nl/tweakers/wcf_endpoints7.png\" title=\"http://www.100procentjan.nl/tweakers/wcf_endpoints7.png\" alt=\"http://www.100procentjan.nl/tweakers/wcf_endpoints7.png\"><br>\r\n<br>\r\nVoor some reason kiest WCF er soms voor om &apos;&lt;identity/&gt;&apos; secties in je web.config te zetten. Deze zijn voor een publieke API niet nodig, als je hier een fout over krijgt; verwijder dan secties die er uit zien als:<br>\r\n<br>XML:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br>4<br></code></td><td class=\"phphighlightcode\"><div><code>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&lt;<span class=\"code_ident\">identity</span>&gt;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&lt;<span class=\"code_ident\">certificateReference</span>&#xA0;<span class=\"code_ident\">storeName</span>=<span class=\"code_string\">&quot;My&quot;</span>&#xA0;<span class=\"code_ident\">storeLocation</span>=<span class=\"code_string\">&quot;LocalMachine&quot;</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">x509FindType</span>=<span class=\"code_string\">&quot;FindBySubjectDistinguishedName&quot;</span>&#xA0;/&gt;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&lt;/<span class=\"code_ident\">identity</span>&gt;</code></div></td></tr></table><br>\r\n<br>\r\nJe SOAP service is nu beschikbaar onder: &apos;http://localhost:POORT/DemoService.wcf?wsdl&apos;, en is direct bruikbaar vanuit elk ander platform dat een SOAP client beschikbaar heeft!<br>\r\n<br>\r\n<b>REST ook via JSON beschikbaar maken</b><br>\r\nMet de huidige config is de service alleen via XML beschikbaar. We kunnen echter met &apos;behaviors&apos; de service ook via JSON beschikbaar maken. Maak onder &apos;Endpoint Behaviors&apos; de volgende behavior aan:<br>\r\n<img src=\"http://www.100procentjan.nl/tweakers/wcf_endpoints8.png\" title=\"http://www.100procentjan.nl/tweakers/wcf_endpoints8.png\" alt=\"http://www.100procentjan.nl/tweakers/wcf_endpoints8.png\"><br>\r\n<br>\r\nWanneer je nu het volgende endpoint toevoegt, is je service ook beschikbaar als JSON service:<br>\r\n<img src=\"http://www.100procentjan.nl/tweakers/wcf_endpoints9.png\" title=\"http://www.100procentjan.nl/tweakers/wcf_endpoints9.png\" alt=\"http://www.100procentjan.nl/tweakers/wcf_endpoints9.png\"><br>\r\n<br>\r\nDe service is benaderbaar via: http://localhost:POORT/DemoService.wcf/json/getdata?id=1<br>\r\n<img src=\"http://www.100procentjan.nl/tweakers/wcf_endpoints10.png\" title=\"http://www.100procentjan.nl/tweakers/wcf_endpoints10.png\" alt=\"http://www.100procentjan.nl/tweakers/wcf_endpoints10.png\"><br>\r\n<br>\r\n<b>Et voila</b><br>\r\nIn een paar minuten is je WCF service benaderbaar via XML, JSON en SOAP. Wanneer je bijvoorbeeld een NetTcpBinding (voor snelheid, reliability, noem iets) wil toevoegen, kan je gebruik maken van dezelfde stappen.",
    "nextLink": "http://glamour.tweakblogs.net/blog/6143/waarom-javascript-zo-awesome-is.html",
    "comments": [
        {
            "author": "pasz",
            "date": "woensdag 16 februari 2011 14:46",
            "contentHtml": "Weer een heerlijk pragmatische blogpost. Chapeau ! <img src=\"http://tweakimg.net/g/s/worshippy.gif\" width=\"29\" height=\"15\" alt=\"_/-\\o_\">",
            "ownReply": false
        },
        {
            "author": "Deathraven",
            "date": "vrijdag 18 februari 2011 08:59",
            "contentHtml": "Ligt het aan mij of is de JSON die WCF uitspuugt echt &apos;but-ugly&apos;.",
            "ownReply": false
        },
        {
            "author": "creator1988",
            "date": "vrijdag 18 februari 2011 10:28",
            "contentHtml": "<blockquote><div class=\"quote\"><a href=\"http://glamour.tweakblogs.net/blog/6152/bouw-eens-een-api-met-wcf-deel-4-beschikbaar-via-soap-xml-en-json.html#r_82834\">Deathraven schreef op vrijdag 18 februari 2011 @ 08:59:</a><br>\r\nLigt het aan mij of is de JSON die WCF uitspuugt echt &apos;but-ugly&apos;.</div></blockquote>De JSON die wordt uitgespuugd is &apos;ASP.NET AJAX&apos;-compatible (inmiddels more-or-less deprecated javascript framework van Microsoft); is een nadeel van de JSON alleen via config laten uitspugen, je kan ook gewoon nette JSON krijgen door op je &apos;WebGet&apos; het ReturnType naar JSON te zetten. Nadeel is dan echter dat je 2 aparte endpoints moet maken voor XML en JSON, vandaar dat het niet in deze post staat.",
            "ownReply": true
        }
    ]
}