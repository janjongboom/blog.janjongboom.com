{
    "title": "Fix your own smartphone OS",
    "language": "en",
    "link": "http://glamour.tweakblogs.net/blog/10085/fix-your-own-smartphone-os.html",
    "date": "2014-03-18T09:27:00.000Z",
    "category": "Frontend",
    "views": 18469,
    "articleHtml": "If you&apos;re an avid smartphone user there will be times when there is behavior on your phone that just doesn&apos;t make sense, and that annoys the crap out of you. Well, you&apos;re not alone! Same thing happens to me, and I&apos;m even a full time developer on Firefox OS. One of the things that bugs me the most is the behavior of the address bar in the browser. When you scroll enough down, it will disappear, but the content jumps up under your finger. And content jumping is the @#*&amp;*#@&amp;#&amp;$ annoying.<br>\r\n<br>\r\nTime to fix it!<br>\r\n<br>\r\nSo Firefox OS is built on top of open standards, HTML, JavaScript, blah, blah, blah, but the only real important thing here is, is that every (system) app is built on top of web technology. And thus, it&apos;s not compiled. That&apos;s actually pretty cool, because what I could do is <a href=\"https://github.com/mozilla-b2g/gaia/\" rel=\"external nofollow\">grab the source code</a> of the whole frontend of the OS; make changes; and then push to my phone. Sure. But that takes long, and maybe you miss a build prerequisite, etc. Luckily, because the browser app is basically a website, we can just pull the app from the phone and edit it.<br><a name=\"more\"></a><br>\r\n<b>Pulling the app</b><br>\r\nSo first we&apos;ll need the source code of the application. To do that, we first enable remote debugging on the phone. You do this via:<br>\r\n<br>\r\nSettings -&gt; Device Information -&gt; More Information -&gt; Developer -&gt; Remote Debugging<br>\r\n<br>\r\nNow if you have the <a href=\"https://developer.mozilla.org/en-US/Firefox_OS/Debugging/Installing_ADB\" rel=\"external nofollow\">Android Developer Bridge (adb)</a> installed, and plugged in your phone, running adb devices will show you your device:<br>\r\n<br>bash:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><pre>1\n2\n3\n</pre></td><td class=\"phphighlightcode\"><div><pre>$ adb devices\r\nList of devices attached\r\nClovertrailB8FBEE0A    device</pre></div></td></tr></table><br>\r\nTime to pull the browser app. All system apps live in &apos;/system/b2g/webapps/[name].gaiamobile.org&apos; (you can |adb shell| into the phone if you like), and then are zipped up as &apos;application.zip&apos;. So to pull the browser, run:<br>\r\n<br>bash:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><pre>1\n2\n</pre></td><td class=\"phphighlightcode\"><div><pre>$ adb pull /system/b2g/webapps/browser.gaiamobile.org/application.zip browser-original.zip\r\n4998 KB/s (847237 bytes in 0.165s)</pre></div></td></tr></table><br>\r\n<br>\r\n<b>Updating the app</b><br>\r\nNow it&apos;s time to update the application. First unzip the file, and then open the folder in your favourite editor. <b>Don&apos;t delete the ZIP</b>. In the /js folder there is a bunch of JavaScript files, just as in a normal website.<br>\r\n<br>bash:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><pre>1\n2\n3\n4\n5\n6\n7\n8\n9\n10\n</pre></td><td class=\"phphighlightcode\"><div><pre>js\r\n|- authentication_dialog.js\r\n|- awesomescreen.js\r\n|- browser.js\r\n|- browser_db.js\r\n|- init.json\r\n|- modal_dialog.js\r\n|- settings.js\r\n|- toolbar.js\r\n|- utilities.js</pre></div></td></tr></table><br>\r\nThe code is not minified or zipped, so it&apos;s pretty easy to just start digging around (yeah, you can attach a debugger and inspect the code, but that&apos;s for another time). By looking in browser.js there are some scrolling thresholds defined on top of the file:<br>\r\n<br>JavaScript:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br>4<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_comment\">//&#xA0;...</span>\n<br>&#xA0;&#xA0;<span class=\"code_ident\">UPPER_SCROLL_THRESHOLD</span>:&#xA0;<span class=\"code_number\">50</span>,&#xA0;<span class=\"code_comment\">//&#xA0;hide&#xA0;address&#xA0;bar</span>\n<br>&#xA0;&#xA0;<span class=\"code_ident\">LOWER_SCROLL_THRESHOLD</span>:&#xA0;<span class=\"code_number\">5</span>,&#xA0;<span class=\"code_comment\">//&#xA0;show&#xA0;address&#xA0;bar</span>\n<br><span class=\"code_comment\">//&#xA0;...</span></code></div></td></tr></table><br>\r\nWell, that seems pretty much what I need. Time to kill the address bar toggling! Searching for the variable brings us to:<br>\r\n<br>JavaScript:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br></code></td><td class=\"phphighlightcode\"><div><code>&#xA0;&#xA0;<span class=\"code_ident\">handleScroll</span>:&#xA0;<span class=\"code_keyword\">function</span>&#xA0;<span class=\"code_method\">browser_handleScroll</span>(<span class=\"code_ident\">evt</span>)&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">this</span>.<span class=\"code_ident\">lastScrollOffset</span>&#xA0;=&#xA0;<span class=\"code_ident\">evt</span>.<span class=\"code_ident\">detail</span>.<span class=\"code_ident\">top</span>;\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">if</span>&#xA0;(<span class=\"code_ident\">evt</span>.<span class=\"code_ident\">detail</span>.<span class=\"code_ident\">top</span>&#xA0;&lt;&#xA0;<span class=\"code_keyword\">this</span>.<span class=\"code_ident\">LOWER_SCROLL_THRESHOLD</span>)&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">this</span>.<span class=\"code_method\">showAddressBar</span>();\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}&#xA0;<span class=\"code_keyword\">else</span>&#xA0;<span class=\"code_keyword\">if</span>&#xA0;(<span class=\"code_ident\">evt</span>.<span class=\"code_ident\">detail</span>.<span class=\"code_ident\">top</span>&#xA0;&gt;&#xA0;<span class=\"code_keyword\">this</span>.<span class=\"code_ident\">UPPER_SCROLL_THRESHOLD</span>)&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">this</span>.<span class=\"code_method\">hideAddressBar</span>();\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>&#xA0;&#xA0;},</code></div></td></tr></table><br>\r\nSo, let&apos;s just remove that code, and always show the address bar. Now the thing is that the code that gets executed on the device <b>is minified and combined</b>. And it lives in &apos;gaia_build_defer_index.js&apos; in the root of the app. So let&apos;s open that file, throw it through a JS beautifier, and find the same code. Now we can also fix this piece of code and remove the toggling.<br>\r\n<br>JavaScript:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br>4<br>5<br></code></td><td class=\"phphighlightcode\"><div><code>&#xA0;&#xA0;<span class=\"code_ident\">handleScroll</span>:&#xA0;<span class=\"code_keyword\">function</span>&#xA0;<span class=\"code_method\">browser_handleScroll</span>(<span class=\"code_ident\">evt</span>)&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">this</span>.<span class=\"code_ident\">lastScrollOffset</span>&#xA0;=&#xA0;<span class=\"code_ident\">evt</span>.<span class=\"code_ident\">detail</span>.<span class=\"code_ident\">top</span>;\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">this</span>.<span class=\"code_method\">showAddressBar</span>();\n<br>&#xA0;&#xA0;},</code></div></td></tr></table><br>\r\nYou can minify the file again, but who actually cares.<br>\r\n<br>\r\n<b>Time to push this back to the phone</b><br>\r\nSo, <b>make sure you have the original ZIP</b>, in case you made a fuck up. Now make a ZIP file from the app again (select all files -&gt; Compress X items in OSX). Make sure you ZIP the <b>content</b> of the browser folder, not the actual folder itself! And time to push it back to the phone.<br>\r\n<br>bash:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><pre>1\n2\n3\n4\n5\n6\n7\n</pre></td><td class=\"phphighlightcode\"><div><pre># First remount because we need root permissions for this\r\n$ adb remount\r\n# Push the new ZIP file\r\n$ adb push browser-new.zip /system/b2g/webapps/browser.gaiamobile.org/application.zip\r\n4986 KB/s (920309 bytes in 0.180s)\r\n# And restart the OS\r\n$ adb shell stop b2g &amp;&amp; adb shell start b2g</pre></div></td></tr></table><br>\r\nTah dah, no more annoying scroll behavior.<br>\r\n<br>\r\n<b>Don&apos;t want to hack your own phone?</b><br>\r\nIt will be fixed in Firefox OS 1.4. But then again, there is probably something else that might annoy you :-)",
    "nextLink": "http://glamour.tweakblogs.net/blog/9765/simple-eventemitter-in-one-line-in-javascript.html",
    "comments": [
        {
            "author": "Soggney",
            "date": "Tuesday 18 March 2014 11:54",
            "contentHtml": "Yes, this is what I want. No more black box apps. <br>\r\nIt&apos;s either Firefox OS or Ubuntu Touch for my next phone.",
            "ownReply": false
        },
        {
            "author": "hyptonize",
            "date": "Tuesday 18 March 2014 15:04",
            "contentHtml": "Gaaf! (English: Groovy!)<p class=\"edit\">[Comment edited on Tuesday 18 March 2014 15:04]</p>",
            "ownReply": false
        },
        {
            "author": "YellowOnline",
            "date": "Tuesday 18 March 2014 15:06",
            "contentHtml": "Great hack! (Y)",
            "ownReply": false
        },
        {
            "author": "BombaAriba",
            "date": "Wednesday 19 March 2014 10:14",
            "contentHtml": "Nice solution!",
            "ownReply": false
        },
        {
            "author": "SelectProduct",
            "date": "Monday 19 May 2014 10:58",
            "contentHtml": "Haha, still works with current android. Awesome!",
            "ownReply": false
        }
    ]
}