{
    "title": "Bouw eens een API met WCF, deel 1",
    "language": "nl",
    "link": "http://glamour.tweakblogs.net/blog/5983/bouw-eens-een-api-met-wcf-deel-1.html",
    "date": "2011-01-20T13:52:00.000Z",
    "category": "Backend",
    "views": 4736,
    "articleHtml": "Er komt een moment in de geschiedenis van elke contentleverancier dat er de vraag komt om je content anders te gaan presenteren. Van je &#x2018;main&#x2019; platform naar bijvoorbeeld mobiel.<br>\r\n<img src=\"http://www.100procentjan.nl/tweakers/api1.png\" title=\"http://www.100procentjan.nl/tweakers/api1.png\" alt=\"http://www.100procentjan.nl/tweakers/api1.png\"> <br>\r\nProbleem: bij een website heb je &#xE9;&#xE9;n centrale server waar je database op draait, en waar je met je favoriete toolkit tegenaan kan praten. Bij een mobiele applicatie is het iets lastiger om een database van 12 GB mee te leveren. Ergo: tijd om je content beschikbaar te maken voor externe leveranciers via een API.<br><a name=\"more\"></a><br>\r\n<b>Programma van eisen</b><br>\r\nToen ik gevraagd werd om de API van funda te gaan bouwen om zo onze content beschikbaar te kunnen maken voor o.a. Layar kwamen we met het volgende eisenlijstje:<ul><li>Autorisatie benodigd met een key, op IP kan niet; want er wordt vanaf talloze mobiele apparaten data opgevraagd.</li><li>Losse entiteiten zodat we bepaalde velden niet door hoeven te geven aan partners (bijvoorbeeld de periode dat een huis exact te koop staat).</li><li>Moet werken tegen onze bestaande codebase, zodat we profiteren van bestaande bugfixes.</li><li>Performance is kritiek, 100.000 hits per uur is de minimale capaciteit.</li><li>Beschikbaar als REST API via JSON en XML, en als SOAP.</li></ul><b>Platform</b><br>\r\nWe hebben ervoor gekozen om te gaan bouwen op de WCF stack, deze biedt standaard ondersteuning voor REST en SOAP, en we kunnen eenvoudig delen van onze codebase hergebruiken; alles is toch .NET.<br>\r\n<br>\r\n<b>Let&apos;s get it started</b><br>\r\nNa het aanmaken van een WCF service in Visual Studio wordt je geconfronteerd met:<ul><li>.svc; de implementatie van je service</li><li>een interface; het contract van je service</li><li>.config; configuratie van je service</li></ul><b>Voorbeeld van een interface / contract</b><br>\r\nEen voorbeeld interface is:<br>\r\n<br>C#:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br></code></td><td class=\"phphighlightcode\"><div><code>[<span class=\"code_ident\">OperationContract</span>]&#xA0;<span class=\"code_comment\">//&#xA0;het&#xA0;is&#xA0;een&#xA0;Operation;&#xA0;iets&#xA0;wat&#xA0;je&#xA0;kan&#xA0;doen</span>\n<br>[<span class=\"code_method\">WebGet</span>(<span class=\"code_ident\">UriTemplate</span>&#xA0;=&#xA0;<span class=\"code_string\">&quot;/geefhuis/{id}&quot;</span>,&#xA0;<span class=\"code_ident\">ResponseFormat</span>&#xA0;=&#xA0;<span class=\"code_ident\">WebMessageFormat</span>.<span class=\"code_ident\">Xml</span>)]&#xA0;<span class=\"code_comment\">//&#xA0;via&#xA0;GET&#xA0;te&#xA0;benaderen,&#xA0;en&#xA0;geeft&#xA0;XML&#xA0;terug</span>\n<br><span class=\"code_ident\">LocatieFeedObject</span>&#xA0;<span class=\"code_method\">ZoekAanbod</span>(<span class=\"code_keyword\">string</span>&#xA0;<span class=\"code_ident\">id</span>);</code></div></td></tr></table><br>\r\nwat globaal op het volgende neerkomt: we hebben een actie die via een GET actie benaderd kan worden en XML teruggeeft. De URL waarop deze service draait is dan:<br>\r\n<br>http:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><pre>1\n</pre></td><td class=\"phphighlightcode\"><div><pre>http://www.domein.nl/naamvanje.svc/geefhuis/1234/</pre></div></td></tr></table><br>\r\n<br>\r\nHet type wat we teruggeven is een &#x2018;LocatieFeedObject&#x2019;. Een contract hiervoor kan zijn:<br>\r\n<br>C#:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br></code></td><td class=\"phphighlightcode\"><div><code>[<span class=\"code_method\">DataContract</span>(<span class=\"code_ident\">Name</span>&#xA0;=&#xA0;<span class=\"code_string\">&quot;LocatieFeed&quot;</span>)]&#xA0;<span class=\"code_comment\">//&#xA0;het&#xA0;is&#xA0;Data;&#xA0;iets&#xA0;wat&#xA0;je&#xA0;kan&#xA0;lezen&#xA0;/&#xA0;schrijven</span>\n<br><span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_keyword\">class</span>&#xA0;<span class=\"code_ident\">LocatieFeedObject</span>\n<br>{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;[<span class=\"code_method\">DataMember</span>(<span class=\"code_ident\">Name</span>&#xA0;=&#xA0;<span class=\"code_string\">&quot;Objects&quot;</span>)]\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_ident\">List</span>&lt;<span class=\"code_ident\">LocatieObject</span>&gt;&#xA0;<span class=\"code_ident\">Objects</span>&#xA0;{&#xA0;<span class=\"code_ident\">get</span>;&#xA0;<span class=\"code_ident\">set</span>;&#xA0;}&#xA0;<span class=\"code_comment\">//&#xA0;we&#xA0;hebben&#xA0;meerdere&#xA0;objecten</span>\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;[<span class=\"code_ident\">DataMember</span>]\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_keyword\">int</span>&#xA0;<span class=\"code_ident\">TotaalAantalObjecten</span>&#xA0;{&#xA0;<span class=\"code_ident\">get</span>;&#xA0;<span class=\"code_ident\">set</span>;&#xA0;}&#xA0;<span class=\"code_comment\">//&#xA0;en&#xA0;een&#xA0;totaal&#xA0;aantal&#xA0;objecten</span>\n<br>}\n<br>\n<br>[<span class=\"code_method\">DataContract</span>(<span class=\"code_ident\">Name</span>&#xA0;=&#xA0;<span class=\"code_string\">&quot;Object&quot;</span>)]&#xA0;<span class=\"code_comment\">//&#xA0;weer&#xA0;een&#xA0;DataContract</span>\n<br><span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_keyword\">class</span>&#xA0;<span class=\"code_ident\">LocatieObject</span>\n<br>{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_method\">LocatieObject</span>()&#xA0;{&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;[<span class=\"code_method\">DataMember</span>(<span class=\"code_ident\">Name</span>&#xA0;=&#xA0;<span class=\"code_string\">&quot;Adres&quot;</span>)]\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_keyword\">string</span>&#xA0;<span class=\"code_ident\">Adres</span>&#xA0;{&#xA0;<span class=\"code_ident\">get</span>;&#xA0;<span class=\"code_ident\">set</span>;&#xA0;}&#xA0;<span class=\"code_comment\">//&#xA0;en&#xA0;1&#xA0;property&#xA0;(adres)</span>\n<br>}</code></div></td></tr></table><br>\r\nWat hier nog rest is de echte implementatie in code. Deze kan heel kort zijn, want het vertalen van HTTP naar Code naar XML wordt door WCF gedaan:<br>\r\n<br>C#:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br>4<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_ident\">LocatieFeedObject</span>&#xA0;<span class=\"code_method\">ZoekAanbod</span>(<span class=\"code_keyword\">string</span>&#xA0;<span class=\"code_ident\">id</span>)\n<br>{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_ident\">Dao</span>.<span class=\"code_method\">GeefObjecten</span>(<span class=\"code_ident\">id</span>);\n<br>}</code></div></td></tr></table><br>\r\n<br>\r\n<b>Et voila</b><br>\r\nDat is de basis van onze service. We hebben een basis-API neergezet die via REST kan praten met de rest van de wereld. Morgen ga ik in op autorisatie.",
    "nextLink": "http://glamour.tweakblogs.net/blog/5978/waarom-je-nooit-mag-toegeven-dat-je-ruby-on-rails-hebt-bestudeerd.html",
    "comments": [
        {
            "author": "chrashoverraid",
            "date": "donderdag 20 januari 2011 15:48",
            "contentHtml": "Interessante blog, vind die nederlandse namen wel tenenkrommend maar het gaat om het voorbeeld <img src=\"http://tweakimg.net/g/s/wink.gif\" width=\"15\" height=\"15\" alt=\";)\"><blockquote><div class=\"quote\">Morgen ga ik in op autorisatie.</div></blockquote>Dat lijkt me interessant, ga ik in de gaten houden.",
            "ownReply": false
        },
        {
            "author": "pasz",
            "date": "vrijdag 21 januari 2011 07:19",
            "contentHtml": "Leuke blog en lekker pragmatisch. Erg leuk om te lezen hoe andere bedrijven dit soort dingen oppakken.<br>\r\n<br>\r\nGaan jullie ook nog richting de cloud ?<br>\r\n<br>\r\nJSON zit er toch ook standaard in ( DataContractJsonSerializer ) ?",
            "ownReply": false
        },
        {
            "author": "creator1988",
            "date": "vrijdag 21 januari 2011 10:04",
            "contentHtml": "<blockquote><div class=\"quote\"><a href=\"http://glamour.tweakblogs.net/blog/5983/bouw-eens-een-api-met-wcf-deel-1.html#r_80379\">pasz schreef op vrijdag 21 januari 2011 @ 07:19:</a><br>\r\nLeuke blog en lekker pragmatisch. Erg leuk om te lezen hoe andere bedrijven dit soort dingen oppakken.<br>\r\n<br>\r\nGaan jullie ook nog richting de cloud ?<br>\r\n<br>\r\nJSON zit er toch ook standaard in ( DataContractJsonSerializer ) ?</div></blockquote>Je hoeft nog niet eens de DataContract serializer te pakken. Als je je ResponseType aanpast naar .Json spuugt hij zelf al JSON uit. Komt nog aan bod <img src=\"http://tweakimg.net/g/s/smile.gif\" width=\"15\" height=\"15\" alt=\":)\">",
            "ownReply": true
        },
        {
            "author": "akakiwi",
            "date": "vrijdag 21 januari 2011 10:08",
            "contentHtml": "Interessant om te lezen, maar, mag ik je er even op wijzen dat het geen best practise is om List&lt;T&gt; op je DataContract te zetten.<br>\r\nHet beste is om er een ReadOnlyCollection&lt;T&gt; of Collection&lt;T&gt; of te zetten.",
            "ownReply": false
        },
        {
            "author": "Deathraven",
            "date": "vrijdag 21 januari 2011 10:15",
            "contentHtml": "Er zijn relatief kort geleden updates uitgekomen voor WCF m.b.t het bouwen van een REST API.  Hebben jullie dit gebruikt? of is deze REST API gebouwd op de &quot;oude&quot; iteratie. <br>\r\n<br>\r\nIk vind zelf de oude manier echt klote, ergens een typo en je hele REST server start meteen niet meer op.<br>\r\nEn dan zal ik maar niet beginnen over het feit dat een parameter alleen maar naar een string type gemapped kan worden.<br>\r\n<br>\r\nWat het eigenlijk nodig heeft is de ObjectBinder uit asp.net MVC...",
            "ownReply": false
        },
        {
            "author": "Deathraven",
            "date": "vrijdag 21 januari 2011 10:19",
            "contentHtml": "<blockquote><div class=\"quote\"><a href=\"http://glamour.tweakblogs.net/blog/5983/bouw-eens-een-api-met-wcf-deel-1.html#r_80383\">akakiwi schreef op vrijdag 21 januari 2011 @ 10:08:</a><br>\r\nInteressant om te lezen, maar, mag ik je er even op wijzen dat het geen best practise is om List&lt;T&gt; op je DataContract te zetten.<br>\r\nHet beste is om er een ReadOnlyCollection&lt;T&gt; of Collection&lt;T&gt; of te zetten.</div></blockquote>Waar haal jij deze wijsheid vandaan?<br>\r\n<br>\r\nVoor de communicerende partij maakt het allemaal geen verschil, een lijst is een lijst, en als het door een mobile platform geconsumeerd wordt is de kans heel groot dat dit platform het als een array interpreteert. Dus het maakt niks uit of je er een ReadOnlyCollection, Collection of List van maakt .",
            "ownReply": false
        },
        {
            "author": "creator1988",
            "date": "vrijdag 21 januari 2011 10:32",
            "contentHtml": "<blockquote><div class=\"quote\"><a href=\"http://glamour.tweakblogs.net/blog/5983/bouw-eens-een-api-met-wcf-deel-1.html#r_80384\">Deathraven schreef op vrijdag 21 januari 2011 @ 10:15:</a><br>\r\nEr zijn relatief kort geleden updates uitgekomen voor WCF m.b.t het bouwen van een REST API.  Hebben jullie dit gebruikt? of is deze REST API gebouwd op de &quot;oude&quot; iteratie. <br>\r\n<br>\r\nIk vind zelf de oude manier echt klote, ergens een typo en je hele REST server start meteen niet meer op.<br>\r\nEn dan zal ik maar niet beginnen over het feit dat een parameter alleen maar naar een string type gemapped kan worden.<br>\r\n<br>\r\nWat het eigenlijk nodig heeft is de ObjectBinder uit asp.net MVC...</div></blockquote>Nee, dit is nog de eerste iteratie; ik post aan het einde van de serie een correct werkende solution om als basis te fungeren, want daar ergerde ik me ook helemaal aan. Foutmeldingen zijn dramatisch.<br>\r\n<br>\r\nOverigens heb ik juist om die reden de <a href=\"http://glamour.tweakblogs.net/blog/5813/video!-on-the-fly-zoeksuggesties-levenshtein-en-soundex-in-de-praktijk.html\" rel=\"external\">zoekbox</a>-service gewoon in MVC 2 geschreven (zonder views), met wat ObjectBinders om enums te kunnen mappen etc.<blockquote><div class=\"quote\"><a href=\"http://glamour.tweakblogs.net/blog/5983/bouw-eens-een-api-met-wcf-deel-1.html#r_80383\">akakiwi schreef op vrijdag 21 januari 2011 @ 10:08:</a><br>\r\nInteressant om te lezen, maar, mag ik je er even op wijzen dat het geen best practise is om List&lt;T&gt; op je DataContract te zetten.<br>\r\nHet beste is om er een ReadOnlyCollection&lt;T&gt; of Collection&lt;T&gt; of te zetten.</div></blockquote>Volgens mij wordt zowel met WSHTTP als met REST er gewoon een array van gemaakt op de client? Maar wellicht is mijn perceptie hierin niet goed?<p class=\"edit\">[Reactie gewijzigd op vrijdag 21 januari 2011 10:33]</p>",
            "ownReply": true
        },
        {
            "author": "akakiwi",
            "date": "dinsdag 25 januari 2011 14:24",
            "contentHtml": "<blockquote><div class=\"quote\"><a href=\"http://glamour.tweakblogs.net/blog/5983/bouw-eens-een-api-met-wcf-deel-1.html#r_80385\">Deathraven schreef op vrijdag 21 januari 2011 @ 10:19:</a><br>\r\n[...]<br>\r\n<br>\r\n<br>\r\nWaar haal jij deze wijsheid vandaan?<br>\r\n<br>\r\nVoor de communicerende partij maakt het allemaal geen verschil, een lijst is een lijst, en als het door een mobile platform geconsumeerd wordt is de kans heel groot dat dit platform het als een array interpreteert. Dus het maakt niks uit of je er een ReadOnlyCollection, Collection of List van maakt .</div></blockquote>Kijk, voor zover ik weet geeft een List&lt;T&gt; meer overhead bij het serialiseren omdat er allerlei extension methods op de list zitten die niet mee over de lijn hoeven/kunnen.<br>\r\nCheck ook de onderstaande link met iets meer informatie hierover.<br>\r\n<a href=\"http://msdn.microsoft.com/en-us/library/ms182142(v=vs.80).aspx\" rel=\"external\" title=\"http://msdn.microsoft.com/en-us/library/ms182142(v=vs.80).aspx\">http://msdn.microsoft.com...ry/ms182142(v=vs.80).aspx</a>",
            "ownReply": false
        },
        {
            "author": "woensdag 26 januari 2011 00:07",
            "date": "",
            "contentHtml": "Bedankt voor de extra msdn link.. zag er al surfend van reference naar reference toch weer wat nieuws tussen.<br>\r\n<br>\r\nZo te zien gaat het List&lt;T&gt; advies voornamelijk over APIS en niet zo zeer WCF. <br>\r\n<br>\r\nKijk maar naar  de WSDL die gegenereert wordt, Je zult geen verschil zijn tussen List of collection. Ze worden beide weer gegeven als array (wat goed is omdat dit beter interoperable is over platformen en talen.) <br>\r\n<br>\r\nSommige clientstub generatoren geven je overigens wel de optie om de implementatie te veranderen naar iets anders, bv vsnet -&gt; generic collecties..",
            "ownReply": false
        },
        {
            "author": "creator1988",
            "date": "woensdag 26 januari 2011 08:55",
            "contentHtml": "<blockquote><div class=\"quote\"><a href=\"http://glamour.tweakblogs.net/blog/5983/bouw-eens-een-api-met-wcf-deel-1.html#r_80706\">hjm schreef op woensdag 26 januari 2011 @ 00:07:</a><br>\r\nBedankt voor de extra msdn link.. zag er al surfend van reference naar reference toch weer wat nieuws tussen.<br>\r\n<br>\r\nZo te zien gaat het List&lt;T&gt; advies voornamelijk over APIS en niet zo zeer WCF. <br>\r\n<br>\r\nKijk maar naar  de WSDL die gegenereert wordt, Je zult geen verschil zijn tussen List of collection. Ze worden beide weer gegeven als array (wat goed is omdat dit beter interoperable is over platformen en talen.) <br>\r\n<br>\r\nSommige clientstub generatoren geven je overigens wel de optie om de implementatie te veranderen naar iets anders, bv vsnet -&gt; generic collecties..</div></blockquote>Ja,<blockquote><div class=\"quote\">A type contains an externally visible member that is a System.Collections.Generic.List(Of T) type, returns a System.Collections.Generic.List(Of T) type, or whose signature includes a System.Collections.Generic.List(Of T) parameter.</div></blockquote>Lijkt me hier dus prima. WCF kent dit principe blijkbaar ook. Wanneer je bijv. met WSHTTP je service ontsluit (en je andere software hierop aansluit dmv Service References) worden het ook gewoon arrays.",
            "ownReply": true
        }
    ]
}