{
    "title": "Javascript on-the-fly samenvoegen, minifyen en versionen",
    "language": "nl",
    "link": "http://glamour.tweakblogs.net/blog/6245/javascript-on-the-fly-samenvoegen-minifyen-en-versionen.html",
    "date": "2011-03-09T13:42:00.000Z",
    "category": "Frontend",
    "views": 3675,
    "articleHtml": "Het samenvoegen van meerdere javascript files, en het minifyen van dezelfde javascript is een optimalisatie die flink effect kan hebben op de performance van je website; en een standaardadvies van optimalisatietools. Vandaar hier de techniek die wij gebruiken voor onze nieuwe mobiele website om javascript samen te voegen, te minifyen met YUI compressor, en automatisch te versionen.<br>\r\n<br>\r\n<b>Welke javascript is nodig?</b><br>\r\nOm op een willekeurige pagina aan te geven welke javascript benodigd is, kunnen we inhaken op het &apos;Page_Init()&apos; event dat nog steeds bestaat in ASP.NET MVC. Dit draait voordat de view zal worden gerenderd. De syntax hiervoor is:<br>\r\n<br>C#:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_comment\">//&#xA0;onderaan&#xA0;je&#xA0;.aspx&#xA0;of&#xA0;.master:</span>\n<br>&lt;<span class=\"code_ident\">script</span>&#xA0;<span class=\"code_ident\">runat</span>=<span class=\"code_string\">&quot;server&quot;</span>&gt;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">protected</span>&#xA0;<span class=\"code_keyword\">void</span>&#xA0;<span class=\"code_method\">Page_Init</span>(<span class=\"code_keyword\">object</span>&#xA0;<span class=\"code_ident\">sender</span>,&#xA0;<span class=\"code_ident\">EventArgs</span>&#xA0;<span class=\"code_ident\">e</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">ScriptHelper</span>.<span class=\"code_method\">RegisterScript</span>(<span class=\"code_string\">&quot;/js/jquery.js&quot;</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">ScriptHelper</span>.<span class=\"code_method\">RegisterScript</span>(<span class=\"code_string\">&quot;/js/global.js&quot;</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>&lt;/<span class=\"code_ident\">script</span>&gt;</code></div></td></tr></table><br>\r\nWanneer je bovenstaande code in je masterpage zet, kan je tevens per view een zelfde blokje toevoegen. Deze scripts worden dan n&#xE1; de scripts in je masterpage toegevoegd (volgorde is nogal eens belangrijk bij javascript bestanden :-)).<br><a name=\"more\"></a><br>\r\n<b>Renderen</b><br>\r\nOp een willekeurig punt in je pagina (of masterpage) kan je kiezen om de scripts te renderen, dankzij een toevoeging aan de HtmlHelper.<br>\r\n<br>HTML:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_special\">&lt;!</span><span class=\"code_comment\">--&#xA0;voeg&#xA0;dit&#xA0;bijvoorbeeld&#xA0;onderaan&#xA0;je&#xA0;pagina&#xA0;toe&#xA0;--</span><span class=\"code_special\">&gt;</span>\n<br>&lt;%=Html.RenderScripts()&#xA0;%&gt;\n<br><span class=\"code_special\">&lt;!</span><span class=\"code_comment\">--&#xA0;hierna&#xA0;kan&#xA0;je&#xA0;nog&#xA0;losse&#xA0;stukken&#xA0;script&#xA0;doen&#xA0;doen&#xA0;--</span><span class=\"code_special\">&gt;</span></code></div></td></tr></table><br>\r\nDit print het volgende stuk code:<br>\r\n<br>HTML:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_ident\">&lt;script</span>&#xA0;<span class=\"code_method\">src</span>=<span class=\"code_string\">&quot;</span><span class=\"code_string\">/resources/javascript/?keys=/js/jquery.js|/js/global.js</span>&amp;<span class=\"code_string\">1234</span><span class=\"code_string\">&quot;</span><span class=\"code_ident\">&gt;</span><span class=\"code_inline_code\"></span><span class=\"code_ident\">&lt;/script</span><span class=\"code_ident\">&gt;</span></code></div></td></tr></table><br>\r\nDe code &apos;1234&apos; achteraan is de samengestelde hash van de losse bestanden samen. Als er dus een bestand wijzigt, zal ook de hash wijzigen en zal de browser de file opnieuw binnen halen.<br>\r\n<br>\r\n<b>ScriptHelper code</b><br>\r\nOm op te slaan welke files moeten worden gerendered in de &apos;keys&apos; parameter, kunnen we gebruik maken van de &apos;HttpContext.Current.Items&apos;, die gebonden is aan het huidige request. Hieromheen kunnen we de helper methodes schrijven die hierboven staan.<br>\r\n<br>C#:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br>29<br>30<br>31<br>32<br>33<br>34<br>35<br>36<br>37<br>38<br>39<br>40<br>41<br>42<br>43<br>44<br>45<br>46<br>47<br>48<br>49<br>50<br>51<br>52<br>53<br>54<br>55<br>56<br>57<br>58<br>59<br>60<br>61<br>62<br>63<br>64<br>65<br>66<br>67<br>68<br>69<br>70<br>71<br>72<br>73<br>74<br>75<br>76<br>77<br>78<br>79<br>80<br>81<br>82<br>83<br>84<br>85<br>86<br>87<br>88<br>89<br>90<br>91<br>92<br>93<br>94<br>95<br>96<br>97<br>98<br>99<br>100<br>101<br>102<br>103<br>104<br>105<br>106<br>107<br>108<br>109<br>110<br>111<br>112<br>113<br>114<br>115<br>116<br>117<br>118<br>119<br>120<br>121<br>122<br>123<br>124<br>125<br>126<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_keyword\">static</span>&#xA0;<span class=\"code_keyword\">class</span>&#xA0;<span class=\"code_ident\">ScriptHelper</span>\n<br>{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;hashing&#xA0;instance&#xA0;om&#xA0;snel&#xA0;de&#xA0;hash&#xA0;van&#xA0;een&#xA0;byte[]&#xA0;te&#xA0;berekenen</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">private</span>&#xA0;<span class=\"code_keyword\">static</span>&#xA0;<span class=\"code_keyword\">readonly</span>&#xA0;<span class=\"code_ident\">MurmurHash2UInt32Hack</span>&#xA0;<span class=\"code_ident\">HashingInstance</span>;\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">static</span>&#xA0;<span class=\"code_method\">ScriptHelper</span>()\n<br>&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">HashingInstance</span>&#xA0;=&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_method\">MurmurHash2UInt32Hack</span>();\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;lijst&#xA0;met&#xA0;scripts,&#xA0;gebonden&#xA0;aan&#xA0;huidige&#xA0;request</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">private</span>&#xA0;<span class=\"code_keyword\">static</span>&#xA0;<span class=\"code_ident\">List</span>&lt;<span class=\"code_keyword\">string</span>&gt;&#xA0;<span class=\"code_ident\">Scripts</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">get</span>&#xA0;{&#xA0;<span class=\"code_keyword\">return</span>&#xA0;(<span class=\"code_ident\">HttpContext</span>.<span class=\"code_ident\">Current</span>.<span class=\"code_ident\">Items</span>[<span class=\"code_string\">&quot;Scripts&quot;</span>]&#xA0;??&#xA0;(<span class=\"code_ident\">HttpContext</span>.<span class=\"code_ident\">Current</span>.<span class=\"code_ident\">Items</span>[<span class=\"code_string\">&quot;Scripts&quot;</span>]&#xA0;=&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_ident\">List</span>&lt;<span class=\"code_keyword\">string</span>&gt;()))&#xA0;<span class=\"code_keyword\">as</span>&#xA0;<span class=\"code_ident\">List</span>&lt;<span class=\"code_keyword\">string</span>&gt;;&#xA0;}\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">set</span>&#xA0;{&#xA0;<span class=\"code_ident\">HttpContext</span>.<span class=\"code_ident\">Current</span>.<span class=\"code_ident\">Items</span>[<span class=\"code_string\">&quot;Scripts&quot;</span>]&#xA0;=&#xA0;<span class=\"code_ident\">value</span>;&#xA0;}\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>&#xA0;&#xA0;&#xA0;&#xA0;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;voeg&#xA0;script&#xA0;toe;&#xA0;overal&#xA0;beschikbaar&#xA0;via&#xA0;ScriptHelper.RegisterScript()</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_keyword\">static</span>&#xA0;<span class=\"code_keyword\">void</span>&#xA0;<span class=\"code_method\">RegisterScript</span>(<span class=\"code_keyword\">string</span>&#xA0;<span class=\"code_ident\">jsFile</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">Scripts</span>.<span class=\"code_method\">Add</span>(<span class=\"code_ident\">jsFile</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_keyword\">static</span>&#xA0;<span class=\"code_keyword\">string</span>&#xA0;<span class=\"code_method\">RenderScripts</span>(<span class=\"code_keyword\">this</span>&#xA0;<span class=\"code_ident\">HtmlHelper</span>&#xA0;<span class=\"code_ident\">html</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;let&#xA0;op!&#xA0;zorg&#xA0;dat&#xA0;je&#xA0;het&#xA0;bepalen&#xA0;van&#xA0;de&#xA0;hash&#xA0;ergens&#xA0;cachet.&#xA0;Kost&#xA0;veel&#xA0;CPU&#xA0;anders.</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">var</span>&#xA0;<span class=\"code_ident\">scripts</span>&#xA0;=&#xA0;<span class=\"code_ident\">Scripts</span>.<span class=\"code_method\">ToList</span>();\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;dit&#xA0;is&#xA0;je&#xA0;cache&#xA0;key</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">var</span>&#xA0;<span class=\"code_ident\">key</span>&#xA0;=&#xA0;<span class=\"code_keyword\">string</span>.<span class=\"code_method\">Join</span>(<span class=\"code_string\">&quot;|&quot;</span>,&#xA0;<span class=\"code_ident\">scripts</span>.<span class=\"code_method\">OrderBy</span>(<span class=\"code_ident\">s</span>&#xA0;=&gt;&#xA0;<span class=\"code_ident\">s</span>).<span class=\"code_method\">ToArray</span>());\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">StringBuilder</span>&#xA0;<span class=\"code_ident\">script</span>&#xA0;=&#xA0;<span class=\"code_method\">GetFileContent</span>(<span class=\"code_ident\">scripts</span>,&#xA0;<span class=\"code_ident\">html</span>.<span class=\"code_ident\">ViewContext</span>.<span class=\"code_ident\">RequestContext</span>.<span class=\"code_ident\">HttpContext</span>);\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">var</span>&#xA0;<span class=\"code_ident\">outputFile</span>&#xA0;=&#xA0;<span class=\"code_ident\">Encoding</span>.<span class=\"code_ident\">UTF8</span>.<span class=\"code_method\">GetBytes</span>(<span class=\"code_ident\">script</span>.<span class=\"code_method\">ToString</span>());\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">var</span>&#xA0;<span class=\"code_ident\">hashcode</span>&#xA0;=&#xA0;<span class=\"code_ident\">HashingInstance</span>.<span class=\"code_method\">Hash</span>(<span class=\"code_ident\">outputFile</span>);\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;renderen</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_keyword\">string</span>.<span class=\"code_method\">Format</span>(<span class=\"code_string\">&quot;&lt;script&#xA0;src=\\&quot;/resources/javascript/?keys={0}&amp;{1}\\&quot;&gt;&lt;/script&gt;&quot;</span>,&#xA0;<span class=\"code_keyword\">string</span>.<span class=\"code_method\">Join</span>(<span class=\"code_string\">&quot;|&quot;</span>,&#xA0;<span class=\"code_ident\">scripts</span>.<span class=\"code_method\">ToArray</span>()),&#xA0;<span class=\"code_ident\">hashcode</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_keyword\">static</span>&#xA0;<span class=\"code_ident\">StringBuilder</span>&#xA0;<span class=\"code_method\">GetFileContent</span>&#xA0;(<span class=\"code_ident\">List</span>&lt;<span class=\"code_keyword\">string</span>&gt;&#xA0;<span class=\"code_ident\">items</span>,&#xA0;<span class=\"code_ident\">HttpContextBase</span>&#xA0;<span class=\"code_ident\">httpContext</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;hier&#xA0;nog&#xA0;wat&#xA0;beveiliging&#xA0;omheen&#xA0;zodat&#xA0;ze&#xA0;niet&#xA0;al&#xA0;je&#xA0;files&#xA0;kunnen&#xA0;opvragen&#xA0;:-)</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">StringBuilder</span>&#xA0;<span class=\"code_ident\">script</span>&#xA0;=&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_method\">StringBuilder</span>();\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">foreach</span>(<span class=\"code_ident\">var</span>&#xA0;<span class=\"code_ident\">s</span>&#xA0;<span class=\"code_keyword\">in</span>&#xA0;<span class=\"code_ident\">items</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">string</span>&#xA0;<span class=\"code_ident\">content</span>&#xA0;=&#xA0;<span class=\"code_ident\">File</span>.<span class=\"code_method\">ReadAllText</span>(<span class=\"code_ident\">httpContext</span>.<span class=\"code_ident\">Server</span>.<span class=\"code_method\">MapPath</span>(<span class=\"code_string\">&quot;~/&quot;</span>&#xA0;+&#xA0;<span class=\"code_ident\">s</span>.<span class=\"code_method\">TrimStart</span>(<span class=\"code_string\">&apos;/&apos;</span>)),&#xA0;<span class=\"code_ident\">Encoding</span>.<span class=\"code_ident\">UTF8</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">script</span>.<span class=\"code_method\">AppendLine</span>(<span class=\"code_ident\">content</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_ident\">script</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>}\n<br>\n<br><span class=\"code_comment\">///&#xA0;&lt;summary&gt;</span>\n<br><span class=\"code_comment\">///&#xA0;Fast&#xA0;hashing&#xA0;algorithm</span>\n<br><span class=\"code_comment\">///&#xA0;&lt;/summary&gt;</span>\n<br><span class=\"code_keyword\">internal</span>&#xA0;<span class=\"code_keyword\">class</span>&#xA0;<span class=\"code_ident\">MurmurHash2UInt32Hack</span>\n<br>{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_ident\">UInt32</span>&#xA0;<span class=\"code_method\">Hash</span>(<span class=\"code_ident\">Byte</span>[]&#xA0;<span class=\"code_ident\">data</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_method\">Hash</span>(<span class=\"code_ident\">data</span>,&#xA0;<span class=\"code_number\">0xc58f1a7b</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">const</span>&#xA0;<span class=\"code_ident\">UInt32</span>&#xA0;<span class=\"code_ident\">m</span>&#xA0;=&#xA0;<span class=\"code_number\">0x5bd1e995</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">const</span>&#xA0;<span class=\"code_ident\">Int32</span>&#xA0;<span class=\"code_ident\">r</span>&#xA0;=&#xA0;<span class=\"code_number\">24</span>;\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;[<span class=\"code_method\">StructLayout</span>(<span class=\"code_ident\">LayoutKind</span>.<span class=\"code_ident\">Explicit</span>)]\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">struct</span>&#xA0;<span class=\"code_ident\">BytetoUInt32Converter</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;[<span class=\"code_method\">FieldOffset</span>(<span class=\"code_number\">0</span>)]\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_ident\">Byte</span>[]&#xA0;<span class=\"code_ident\">Bytes</span>;\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;[<span class=\"code_method\">FieldOffset</span>(<span class=\"code_number\">0</span>)]\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_ident\">UInt32</span>[]&#xA0;<span class=\"code_ident\">UInts</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_ident\">UInt32</span>&#xA0;<span class=\"code_method\">Hash</span>(<span class=\"code_ident\">Byte</span>[]&#xA0;<span class=\"code_ident\">data</span>,&#xA0;<span class=\"code_ident\">UInt32</span>&#xA0;<span class=\"code_ident\">seed</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">Int32</span>&#xA0;<span class=\"code_ident\">length</span>&#xA0;=&#xA0;<span class=\"code_ident\">data</span>.<span class=\"code_ident\">Length</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">if</span>&#xA0;(<span class=\"code_ident\">length</span>&#xA0;==&#xA0;<span class=\"code_number\">0</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_number\">0</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">UInt32</span>&#xA0;<span class=\"code_ident\">h</span>&#xA0;=&#xA0;<span class=\"code_ident\">seed</span>&#xA0;^&#xA0;(<span class=\"code_ident\">UInt32</span>)<span class=\"code_ident\">length</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">Int32</span>&#xA0;<span class=\"code_ident\">currentIndex</span>&#xA0;=&#xA0;<span class=\"code_number\">0</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;array&#xA0;will&#xA0;be&#xA0;length&#xA0;of&#xA0;Bytes&#xA0;but&#xA0;contains&#xA0;Uints</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;therefore&#xA0;the&#xA0;currentIndex&#xA0;will&#xA0;jump&#xA0;with&#xA0;+1&#xA0;while&#xA0;length&#xA0;will&#xA0;jump&#xA0;with&#xA0;+4</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">UInt32</span>[]&#xA0;<span class=\"code_ident\">hackArray</span>&#xA0;=&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_ident\">BytetoUInt32Converter</span>&#xA0;{&#xA0;<span class=\"code_ident\">Bytes</span>&#xA0;=&#xA0;<span class=\"code_ident\">data</span>&#xA0;}.<span class=\"code_ident\">UInts</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">while</span>&#xA0;(<span class=\"code_ident\">length</span>&#xA0;&gt;=&#xA0;<span class=\"code_number\">4</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">UInt32</span>&#xA0;<span class=\"code_ident\">k</span>&#xA0;=&#xA0;<span class=\"code_ident\">hackArray</span>[<span class=\"code_ident\">currentIndex</span>++];\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">k</span>&#xA0;*=&#xA0;<span class=\"code_ident\">m</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">k</span>&#xA0;^=&#xA0;<span class=\"code_ident\">k</span>&#xA0;&gt;&gt;&#xA0;<span class=\"code_ident\">r</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">k</span>&#xA0;*=&#xA0;<span class=\"code_ident\">m</span>;\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">h</span>&#xA0;*=&#xA0;<span class=\"code_ident\">m</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">h</span>&#xA0;^=&#xA0;<span class=\"code_ident\">k</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">length</span>&#xA0;-=&#xA0;<span class=\"code_number\">4</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">currentIndex</span>&#xA0;*=&#xA0;<span class=\"code_number\">4</span>;&#xA0;<span class=\"code_comment\">//&#xA0;fix&#xA0;the&#xA0;length</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">switch</span>&#xA0;(<span class=\"code_ident\">length</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">case</span>&#xA0;<span class=\"code_number\">3</span>:\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">h</span>&#xA0;^=&#xA0;(<span class=\"code_ident\">UInt16</span>)(<span class=\"code_ident\">data</span>[<span class=\"code_ident\">currentIndex</span>++]&#xA0;|&#xA0;<span class=\"code_ident\">data</span>[<span class=\"code_ident\">currentIndex</span>++]&#xA0;&lt;&lt;&#xA0;<span class=\"code_number\">8</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">h</span>&#xA0;^=&#xA0;(<span class=\"code_ident\">UInt32</span>)<span class=\"code_ident\">data</span>[<span class=\"code_ident\">currentIndex</span>]&#xA0;&lt;&lt;&#xA0;<span class=\"code_number\">16</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">h</span>&#xA0;*=&#xA0;<span class=\"code_ident\">m</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">break</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">case</span>&#xA0;<span class=\"code_number\">2</span>:\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">h</span>&#xA0;^=&#xA0;(<span class=\"code_ident\">UInt16</span>)(<span class=\"code_ident\">data</span>[<span class=\"code_ident\">currentIndex</span>++]&#xA0;|&#xA0;<span class=\"code_ident\">data</span>[<span class=\"code_ident\">currentIndex</span>]&#xA0;&lt;&lt;&#xA0;<span class=\"code_number\">8</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">h</span>&#xA0;*=&#xA0;<span class=\"code_ident\">m</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">break</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">case</span>&#xA0;<span class=\"code_number\">1</span>:\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">h</span>&#xA0;^=&#xA0;<span class=\"code_ident\">data</span>[<span class=\"code_ident\">currentIndex</span>];\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">h</span>&#xA0;*=&#xA0;<span class=\"code_ident\">m</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">break</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">default</span>:\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">break</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;Do&#xA0;a&#xA0;few&#xA0;final&#xA0;mixes&#xA0;of&#xA0;the&#xA0;hash&#xA0;to&#xA0;ensure&#xA0;the&#xA0;last&#xA0;few</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;bytes&#xA0;are&#xA0;well-incorporated.</span>\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">h</span>&#xA0;^=&#xA0;<span class=\"code_ident\">h</span>&#xA0;&gt;&gt;&#xA0;<span class=\"code_number\">13</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">h</span>&#xA0;*=&#xA0;<span class=\"code_ident\">m</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">h</span>&#xA0;^=&#xA0;<span class=\"code_ident\">h</span>&#xA0;&gt;&gt;&#xA0;<span class=\"code_number\">15</span>;\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_ident\">h</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>}</code></div></td></tr></table><br>\r\n<br>\r\n<b>ResourcesController</b><br>\r\nIn je pagina wordt nu &#xE9;&#xE9;n request gedaan, maar je krijgt nog geen antwoord van de server. Voeg eerst de <a href=\"http://yuicompressor.codeplex.com/\" rel=\"external\">YUI compressor voor .NET</a> toe aan je project. En maak vervolgens de &apos;ResourcesController&apos; aan:<br>\r\n<br>C#:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_ident\">ActionResult</span>&#xA0;<span class=\"code_method\">Javascript</span>(<span class=\"code_keyword\">string</span>&#xA0;<span class=\"code_ident\">keys</span>)\n<br>{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;ook&#xA0;hier,&#xA0;zelf&#xA0;cachen&#xA0;gaarne</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">var</span>&#xA0;<span class=\"code_ident\">scriptFiles</span>&#xA0;=&#xA0;<span class=\"code_ident\">keys</span>.<span class=\"code_method\">Split</span>(<span class=\"code_string\">&apos;|&apos;</span>).<span class=\"code_method\">ToList</span>();\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">var</span>&#xA0;<span class=\"code_ident\">scripts</span>&#xA0;=&#xA0;<span class=\"code_ident\">ScriptHelper</span>.<span class=\"code_method\">GetFileContent</span>(<span class=\"code_ident\">scriptFiles</span>,&#xA0;<span class=\"code_ident\">HttpContext</span>).<span class=\"code_method\">ToString</span>();\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;minification,&#xA0;je&#xA0;kan&#xA0;in&#xA0;een&#xA0;setting&#xA0;zetten&#xA0;of&#xA0;je&#xA0;dit&#xA0;wel&#xA0;/&#xA0;niet&#xA0;wil&#xA0;doen;&#xA0;handig&#xA0;voor&#xA0;debuggen</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">scripts</span>&#xA0;=&#xA0;<span class=\"code_ident\">JavaScriptCompressor</span>.<span class=\"code_method\">Compress</span>(<span class=\"code_ident\">scripts</span>);\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;retouneer&#xA0;met&#xA0;het&#xA0;juiste&#xA0;content&#xA0;type</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_method\">ContentResult</span>()\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">Content</span>&#xA0;=&#xA0;<span class=\"code_ident\">scripts</span>,\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">ContentType</span>&#xA0;=&#xA0;<span class=\"code_string\">&quot;text/javascript&quot;</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;};\n<br>}</code></div></td></tr></table><br>\r\n<br>\r\n<b>Et voila</b><br>\r\nDe javascript wordt voortaan in 1 request opgehaald, en geminified naar de client gestuurd. Scheelt weer wat onnodig snelheidsverlies zonder verlies in functionaliteit.",
    "nextLink": "http://glamour.tweakblogs.net/blog/6240/meningen-gezocht-versioning-binnen-de-api.html",
    "comments": [
        {
            "author": "robskedebobske",
            "date": "woensdag 09 maart 2011 14:55",
            "contentHtml": "Dit lijkt heel erg handig en leuk. Het is eigenlijk een must om bandbreedte te sparen.<br>\r\n<br>\r\nEchter... Het nadeel van deze oplossing is dat je het voor elk request van de pagina doet. Je zou dit kunnen omzeilen door bijvoorbeeld een optimalisatie in je RenderScripts te doen en je data uit de cache te halen, welke je met een cache dependency invalideert zodra een van de files op disk wijzigt.<br>\r\n<br>\r\nJe kunt natuurlijk ook gewoon Combres gebruiken: <a href=\"http://combres.codeplex.com/\" rel=\"external\" title=\"http://combres.codeplex.com/\">http://combres.codeplex.com/</a><br>\r\n<br>\r\nWat echter vaak wordt vergeten is het optimaliseren van images. PNG en JPG is prima te doen. Hier doet Combres niets aan. Helaas heb ik geen webstekje waar ik een en ander kan neerplempen, maar ik zou je graag de on-the-fly-image-optimizer sturen die ik hier heb liggen op basis van &apos;jpegtran&apos; en &apos;pngcrush&apos;, welke tevens door Yahoo worden gebruikt in hun smush-it tool.<br>\r\nZo&apos;n beetje alle PNG en JPG bestanden worden kleiner en dat kan tot 80% schelen. Uiteraard wordt er aan de visuele aspecten van de plaatjes niets gewijzigd.<p class=\"edit\">[Reactie gewijzigd op woensdag 09 maart 2011 15:05]</p>",
            "ownReply": false
        },
        {
            "author": "creator1988",
            "date": "woensdag 09 maart 2011 15:07",
            "contentHtml": "<blockquote><div class=\"quote\"><a href=\"http://glamour.tweakblogs.net/blog/6245/javascript-on-the-fly-samenvoegen-minifyen-en-versionen.html#r_84008\">robskedebobske schreef op woensdag 09 maart 2011 @ 14:55:</a><br>\r\nEchter... Het nadeel van deze oplossing is dat je het voor elk request van de pagina doet. Je zou dit kunnen omzeilen door bijvoorbeeld een optimalisatie in je RenderScripts te doen en je data uit de cache te halen, welke je met een cache dependency invalideert zodra een van de files op disk wijzigt.</div></blockquote>Je zal zelf moeten cachen wat de hashes van je files zijn; na een uur ofzo doe je dit gewoon opnieuw. Dit kan je caching-framework doen en kost dus alleen 1 gebruiker per uur 100 ms. Zolang er niets is gewijzigd is de hashcode hetzelfde en cachet de browser het gewoon. Je hoeft geen cache dependencies te maken omdat bij een wijziging de hash (en dus de URL) verandert.<blockquote><div class=\"quote\">Je kunt natuurlijk ook gewoon Combres gebruiken: <a href=\"http://combres.codeplex.com/\" rel=\"external\" title=\"http://combres.codeplex.com/\">http://combres.codeplex.com/</a></div></blockquote>Nadeel van Combres vind ik zelf dat het zo ver afstaat van de normale gang van zaken. Als ik in een view een bepaalde js file wil gebruiken, dan wil ik dat daar aangeven en niet in een of andere config file.<blockquote><div class=\"quote\">Wat echter vaak wordt vergeten is het optimaliseren van images. PNG en JPG is prima te doen. Hier doet Combres niets aan. Helaas heb ik geen webstekje waar ik een en ander kan neerplempen, maar ik zou je graag de on-the-fly-image-optimizer sturen die ik hier heb liggen. Zo&apos;n beetje alle PNG en JPG bestanden worden kleiner en dat kan tot 80% schelen. Uiteraard wordt er aan de visuele aspecten van de plaatjes niets gewijzigd.</div></blockquote>Ik kan me niet voorstellen dat dit geen effect heeft op de kwaliteit van de afbeeldingen? Bovendien is het voor plaatjes veel te zwaar om die elke keer nog te optimizen. We hebben 4 webservers nodig om alleen al de thumbnails zo snel mogelijk naar de gebruiker te sturen, kan je nagaan als we dat ook nog moeten gaan optimizen on-the-fly.",
            "ownReply": true
        },
        {
            "author": "crisp",
            "date": "woensdag 09 maart 2011 15:12",
            "contentHtml": "Een nadeel van combineren van javascripts is dat je de clientside cacheing minder goed benut; als pagina 1 jquery.js + global.js bevat, en pagina 2 jquery.js + global.js + specific.js dan hengelt de client dus nog een keer jquery.js en global.js binnen, maar nu gecombineert met specific.js. Om die reden combineren wij bij Tnet eigenlijk geen javascripts.<br>\r\n<br>\r\nDaarnaast minifyen wij al tijdens deployment en niet on-the-fly (zie ook de valide opmerking van robskedebobske - gebruik minstens een cache-oplossing als je het al on-the-fly doet).<br>\r\n<br>\r\nEen issue waar wij ook nog naar moeten kijken is het feit dat sommige (veel?) proxies resources met GET-parameters niet cachen.",
            "ownReply": false
        },
        {
            "author": "creator1988",
            "date": "woensdag 09 maart 2011 15:16",
            "contentHtml": "<blockquote><div class=\"quote\"><a href=\"http://glamour.tweakblogs.net/blog/6245/javascript-on-the-fly-samenvoegen-minifyen-en-versionen.html#r_84010\">crisp schreef op woensdag 09 maart 2011 @ 15:12:</a><br>\r\nEen nadeel van combineren van javascripts is dat je de clientside cacheing minder goed benut; als pagina 1 jquery.js + global.js bevat, en pagina 2 jquery.js + global.js + specific.js dan hengelt de client dus nog een keer jquery.js en global.js binnen, maar nu gecombineert met specific.js. Om die reden combineren wij bij Tnet eigenlijk geen javascripts.</div></blockquote>Ja, wij hebben wel vaste sets op funda.nl zoals &apos;global&apos; (jquery en global), &apos;kaart&apos; (alle kaart-related js). Maar op onze mobiele site is je ping hoger dan de tijd die het kost om de extra data te laden. Je kan deze oplossing ook makkelijk aanpassen om bepaalde sets te maken.<blockquote><div class=\"quote\">Daarnaast minifyen wij al tijdens deployment en niet on-the-fly (zie ook de valide opmerking van robskedebobske - gebruik minstens een cache-oplossing als je het al on-the-fly doet).</div></blockquote>Staat niet voor niets op bepaalde plekken in mijn voorbeeldcode <img src=\"http://tweakimg.net/g/s/smile.gif\" width=\"15\" height=\"15\" alt=\":)\"><blockquote><div class=\"quote\">Een issue waar wij ook nog naar moeten kijken is het feit dat sommige (veel?) proxies resources met GET-parameters niet cachen.</div></blockquote>Hmm, goed punt, kende ik niet. Veel mobiele devices gaan nl. via proxies van de provider. Zal er eens naar kijken hoe dat speelt in NL.",
            "ownReply": true
        },
        {
            "author": "robskedebobske",
            "date": "woensdag 09 maart 2011 15:19",
            "contentHtml": "<blockquote><div class=\"quote\"><a href=\"http://glamour.tweakblogs.net/blog/6245/javascript-on-the-fly-samenvoegen-minifyen-en-versionen.html#r_84009\">creator1988 schreef op woensdag 09 maart 2011 @ 15:07:</a><br>\r\nJe zal zelf moeten cachen wat de hashes van je files zijn; na een uur ofzo doe je dit gewoon opnieuw. Dit kan je caching-framework doen en kost dus alleen 1 gebruiker per uur 100 ms. Zolang er niets is gewijzigd is de hashcode hetzelfde en cachet de browser het gewoon. Je hoeft geen cache dependencies te maken omdat bij een wijziging de hash (en dus de URL) verandert.</div></blockquote>Ik snap wat je bedoelt. <span style=\"text-decoration:line-through\">Dit stond niet zo in de code hierboven</span>. Daar heb ik overheen gelezen.<blockquote><div class=\"quote\">Nadeel van Combres vind ik zelf dat het zo ver afstaat van de normale gang van zaken. Als ik in een view een bepaalde js file wil gebruiken, dan wil ik dat daar aangeven en niet in een of andere config file.</div></blockquote>Kan ik me voorstellen, alleen vind je nu opnieuw het wiel uit, imho. Je zou voor je views eens kunnen kijken naar RequiresJS: <a href=\"http://requirejs.org/\" rel=\"external\" title=\"http://requirejs.org/\">http://requirejs.org/</a> Wellicht handig.<blockquote><div class=\"quote\">Ik kan me niet voorstellen dat dit geen effect heeft op de kwaliteit van de afbeeldingen? Bovendien is het voor plaatjes veel te zwaar om die elke keer nog te optimizen. We hebben 4 webservers nodig om alleen al de thumbnails zo snel mogelijk naar de gebruiker te sturen, kan je nagaan als we dat ook nog moeten gaan optimizen on-the-fly.</div></blockquote>Ehrm... die optimalisatie doe je natuurlijk maar 1 keer! Het plaatje is statisch en gaat daarna naar je CDN. Als je wil kan ik je de code sturen en dan kun je het zelf zien. Zien is geloven. De JPGs die door het .Net framework worden gemaakt (bijvoorbeeld in Paint.Net) zijn verre van geoptimaliseerd. De tooltjes scannen de images op deze zaken en halen ze er uit. En je mag van me aannemen dat er pixel voor pixel geen verschil in de input en output zit op het scherm. Lossy compressie kan uiteraard nog meer winst opleveren, maar dat was in mijn situatie (ook) niet gewenst.<br>\r\n<br>\r\nVoor ik het vergeet: ik zie dat funda gebruik maakt vaan IIS om statische content te serven. Wellicht is het een overweging om eens naar NGINX of G-WAN te kijken hiervoor. G-WAN op Linux is echt een performancebeest. Als je webservers nu op 100% CPU staan en de bandbreedte niet de issue is, dan verwacht ik dat je met 1 webserver uit de voeten kan in plaats van 4.<p class=\"edit\">[Reactie gewijzigd op woensdag 09 maart 2011 15:30]</p>",
            "ownReply": false
        },
        {
            "author": "YopY",
            "date": "woensdag 09 maart 2011 15:25",
            "contentHtml": "Leuke oplossing, ook iets netter dan degene die wij toepassen. Bij ons is het minifyen van de JS onderdeel van het buildproces, waarbij je dus in je page.jsp een &apos;harde&apos; verwijzing moet maken met het geminifyde JS bestand (dat ook een versienummer heeft, zodat je de content timeout en dat soort nozele serverinstellingen op standje &apos;Belachelijk Hoog&apos; kunt zetten zonder dat gebruikers verouderde JS binnenkrijgen).<br>\r\n<br>\r\nZomaar een vraag overigens, word je JS nu per request van een gebruiker die het JS bestand nog niet in zijn cache heeft elke keer opnieuw ingeladen en geminified, of zit er een cachinglaag in die je niet in je code mee hoeft te nemen?",
            "ownReply": false
        },
        {
            "author": "kipusoep",
            "date": "woensdag 09 maart 2011 15:43",
            "contentHtml": "<blockquote><div class=\"quote\"><a href=\"http://glamour.tweakblogs.net/blog/6245/javascript-on-the-fly-samenvoegen-minifyen-en-versionen.html#r_84008\">robskedebobske schreef op woensdag 09 maart 2011 @ 14:55:</a><br>\r\n[...]<br>\r\nWat echter vaak wordt vergeten is het optimaliseren van images. PNG en JPG is prima te doen. Hier doet Combres niets aan. Helaas heb ik geen webstekje waar ik een en ander kan neerplempen, maar ik zou je graag de on-the-fly-image-optimizer sturen die ik hier heb liggen op basis van &apos;jpegtran&apos; en &apos;pngcrush&apos;, welke tevens door Yahoo worden gebruikt in hun smush-it tool.<br>\r\nZo&apos;n beetje alle PNG en JPG bestanden worden kleiner en dat kan tot 80% schelen. Uiteraard wordt er aan de visuele aspecten van de plaatjes niets gewijzigd.</div></blockquote>Erg fijne Visual Studio extensie voor het optimaliseren van plaatjes: <a href=\"http://visualstudiogallery.msdn.microsoft.com/a56eddd3-d79b-48ac-8c8f-2db06ade77c3/\" rel=\"external\" title=\"http://visualstudiogallery.msdn.microsoft.com/a56eddd3-d79b-48ac-8c8f-2db06ade77c3/\">http://visualstudiogaller...b-48ac-8c8f-2db06ade77c3/</a><br>\r\n<br>\r\nEn heb zelf ook een stukje geschreven over <b>.Less</b> en <b>SmushIt</b>: <a href=\"http://tech.kipusoep.nl/2010/07/23/umbraco-45-visual-studio-2010-dotless-jquery-vsdoc-squishit-masterpages/\" rel=\"external\" title=\"http://tech.kipusoep.nl/2010/07/23/umbraco-45-visual-studio-2010-dotless-jquery-vsdoc-squishit-masterpages/\">http://tech.kipusoep.nl/2...doc-squishit-masterpages/</a><p class=\"edit\">[Reactie gewijzigd op woensdag 09 maart 2011 15:44]</p>",
            "ownReply": false
        },
        {
            "author": "robskedebobske",
            "date": "woensdag 09 maart 2011 15:48",
            "contentHtml": "<blockquote><div class=\"quote\">Erg fijne Visual Studio extensie voor het optimaliseren van plaatjes: <a href=\"http://visualstudiogallery.msdn.microsoft.com/a56eddd3-d79b-48ac-8c8f-2db06ade77c3/\" rel=\"external\" title=\"http://visualstudiogallery.msdn.microsoft.com/a56eddd3-d79b-48ac-8c8f-2db06ade77c3/\">http://visualstudiogaller...b-48ac-8c8f-2db06ade77c3/</a></div></blockquote>Aha! 100 punten. Daar ga ik vanavond ook eens mee stoeien. De tooltjes die ik gebruikte zijn gratis en vrij verkrijgbaar en maken geen gebruik van 3rd party (web)services. Ergo: geen restricties. Bovendien werk ik nog met VS2008...<p class=\"edit\">[Reactie gewijzigd op woensdag 09 maart 2011 15:51]</p>",
            "ownReply": false
        },
        {
            "author": "creator1988",
            "date": "woensdag 09 maart 2011 16:53",
            "contentHtml": "<blockquote><div class=\"quote\"><a href=\"http://glamour.tweakblogs.net/blog/6245/javascript-on-the-fly-samenvoegen-minifyen-en-versionen.html#r_84012\">robskedebobske schreef op woensdag 09 maart 2011 @ 15:19:</a><br>\r\nVoor ik het vergeet: ik zie dat funda gebruik maakt vaan IIS om statische content te serven. Wellicht is het een overweging om eens naar NGINX of G-WAN te kijken hiervoor. G-WAN op Linux is echt een performancebeest. Als je webservers nu op 100% CPU staan en de bandbreedte niet de issue is, dan verwacht ik dat je met 1 webserver uit de voeten kan in plaats van 4.</div></blockquote>Ik ken daar de situatie niet precies omheen, maar ik weet dat onze imageservers een zwaar gestripte versie van IIS 7 draaien. Ze zijn ter vervanging van onze oude EMC, en opgezet door Mirabeau Application Management; denk dat die er an sich wel verstand van hebben <img src=\"http://tweakimg.net/g/s/smile.gif\" width=\"15\" height=\"15\" alt=\":)\"> .<blockquote><div class=\"quote\">Ehrm... die optimalisatie doe je natuurlijk maar 1 keer! Het plaatje is statisch en gaat daarna naar je CDN. Als je wil kan ik je de code sturen en dan kun je het zelf zien. Zien is geloven. De JPGs die door het .Net framework worden gemaakt (bijvoorbeeld in Paint.Net) zijn verre van geoptimaliseerd. De tooltjes scannen de images op deze zaken en halen ze er uit. En je mag van me aannemen dat er pixel voor pixel geen verschil in de input en output zit op het scherm. Lossy compressie kan uiteraard nog meer winst opleveren, maar dat was in mijn situatie (ook) niet gewenst.</div></blockquote>Ah, op die fiets. Ik ben erg benieuwd naar die tool; als je hem mailt naar jan@funda dan wil ik hem best hosten.<blockquote><div class=\"quote\"><a href=\"http://glamour.tweakblogs.net/blog/6245/javascript-on-the-fly-samenvoegen-minifyen-en-versionen.html#r_84014\">YopY schreef op woensdag 09 maart 2011 @ 15:25:</a><br>\r\nZomaar een vraag overigens, word je JS nu per request van een gebruiker die het JS bestand nog niet in zijn cache heeft elke keer opnieuw ingeladen en geminified, of zit er een cachinglaag in die je niet in je code mee hoeft te nemen?</div></blockquote>In de voorbeeldjes hier niet gedaan; maar wij schoppen alles in cache, dus eens in de paar uur wordt dit opnieuw gedaan. Geen performance hits dus.",
            "ownReply": true
        },
        {
            "author": "ChessSpider",
            "date": "woensdag 09 maart 2011 21:56",
            "contentHtml": "@creator1988, het is een erg goede tip van robskedebobske. Ik raad je aan eerst zelf onderzoek te doen voordat je hem zomaar de deur wijst.",
            "ownReply": false
        },
        {
            "author": "FlowinG",
            "date": "woensdag 09 maart 2011 21:58",
            "contentHtml": "Ik ben hier ook mee bezig geweest maar dan alleen met javascripts. Een manier van ontwikkelen is alles op te delen in aparte JS bestanden. We hadden performance probleem met requests vanuit China, alles lijkt dan een vertraging te hebben van zeker 250ms. Op het moment dat het om meerdere JS en/of CSS gaat (20+) heb je meteen al een flinke vertraging te pakken, helemaal met IE. Ook bij gecachetje files werd er een request gedaan, ookal was deze niet veranderd. Met het samenvoegen heb je meteen een belangrijk deel van vertraging te pakken. De manier waarop ik het uiteindelijk ben gaan doen is een postbuild event in VS studio. Daardoor gaat er geen kostbaar geheugen en processorkracht runtime verloren. De bestanden kunnen daarna ook gewoon vanaf een statische server geladen worden.",
            "ownReply": false
        },
        {
            "author": "crisp",
            "date": "donderdag 10 maart 2011 07:59",
            "contentHtml": "<blockquote><div class=\"quote\"><a href=\"http://glamour.tweakblogs.net/blog/6245/javascript-on-the-fly-samenvoegen-minifyen-en-versionen.html#r_84031\">FlowinG schreef op woensdag 09 maart 2011 @ 21:58:</a><br>\r\n[...]<br>\r\nOok bij gecachetje files werd er een request gedaan, ookal was deze niet veranderd.</div></blockquote>Dat klinkt toch als verkeerde cache-directives (misschien alleen Etag en geen far-future Expires?)<blockquote><div class=\"quote\">alles lijkt dan een vertraging te hebben van zeker 250ms</div></blockquote>Als elke request (dus ook vervolgrequests op hetzelfde domein) die vertraging hebben dan stuur je waarschijnlijk ook geen keep-alive directive mee.",
            "ownReply": false
        },
        {
            "author": "robskedebobske",
            "date": "donderdag 10 maart 2011 11:06",
            "contentHtml": "<blockquote><div class=\"quote\">Ah, op die fiets. Ik ben erg benieuwd naar die tool; als je hem mailt naar jan@funda dan wil ik hem best hosten.</div></blockquote>Zojuist verstuurd. Ben benieuwd wat je er van vindt <img src=\"http://tweakimg.net/g/s/smile.gif\" width=\"15\" height=\"15\" alt=\":)\"><p class=\"edit\">[Reactie gewijzigd op donderdag 10 maart 2011 11:06]</p>",
            "ownReply": false
        },
        {
            "author": "creator1988",
            "date": "donderdag 10 maart 2011 14:53",
            "contentHtml": "<blockquote><div class=\"quote\"><a href=\"http://glamour.tweakblogs.net/blog/6245/javascript-on-the-fly-samenvoegen-minifyen-en-versionen.html#r_84030\">ChessSpider schreef op woensdag 09 maart 2011 @ 21:56:</a><br>\r\n@creator1988, het is een erg goede tip van robskedebobske. Ik raad je aan eerst zelf onderzoek te doen voordat je hem zomaar de deur wijst.</div></blockquote>Ja, het kan dat dit wel degelijk impact heeft; maar het beheer en de keuze van de statische servers gaat buiten mijn verantwoording om; en ik kan er dan ook weinig zinnigs over zeggen.<blockquote><div class=\"quote\"><a href=\"http://glamour.tweakblogs.net/blog/6245/javascript-on-the-fly-samenvoegen-minifyen-en-versionen.html#r_84036\">crisp schreef op donderdag 10 maart 2011 @ 07:59:</a><br>\r\nAls elke request (dus ook vervolgrequests op hetzelfde domein) die vertraging hebben dan stuur je waarschijnlijk ook geen keep-alive directive mee.</div></blockquote>Ping vanaf China? Kan best 250 ms. duren.<blockquote><div class=\"quote\"><a href=\"http://glamour.tweakblogs.net/blog/6245/javascript-on-the-fly-samenvoegen-minifyen-en-versionen.html#r_84051\">robskedebobske schreef op donderdag 10 maart 2011 @ 11:06:</a><br>\r\nZojuist verstuurd. Ben benieuwd wat je er van vindt <img src=\"http://tweakimg.net/g/s/smile.gif\" width=\"15\" height=\"15\" alt=\":)\"></div></blockquote>Ik zie helaas nog niets binnenkomen. Ook niet in spam folder?",
            "ownReply": true
        },
        {
            "author": "robskedebobske",
            "date": "donderdag 10 maart 2011 14:55",
            "contentHtml": "stuur me even een mailtje: <a href=\"mailto:rob@schoenaker.eu\" title=\"mailto:rob@schoenaker.eu\">mailto:rob@schoenaker.eu</a><p class=\"edit\">[Reactie gewijzigd op donderdag 10 maart 2011 14:55]</p>",
            "ownReply": false
        },
        {
            "author": "creator1988",
            "date": "donderdag 10 maart 2011 15:24",
            "contentHtml": "<blockquote><div class=\"quote\"><a href=\"http://glamour.tweakblogs.net/blog/6245/javascript-on-the-fly-samenvoegen-minifyen-en-versionen.html#r_84059\">robskedebobske schreef op donderdag 10 maart 2011 @ 14:55:</a><br>\r\nstuur me even een mailtje: <a href=\"mailto:rob@schoenaker.eu\" title=\"mailto:rob@schoenaker.eu\">mailto:rob@schoenaker.eu</a></div></blockquote>Done,.",
            "ownReply": true
        }
    ]
}