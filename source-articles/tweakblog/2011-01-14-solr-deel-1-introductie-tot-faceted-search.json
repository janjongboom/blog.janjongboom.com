{
    "title": "Solr, deel 1: Introductie tot faceted search",
    "language": "nl",
    "link": "http://glamour.tweakblogs.net/blog/5948/solr-deel-1-introductie-tot-faceted-search.html",
    "date": "2011-01-14T13:48:00.000Z",
    "category": "Backend",
    "views": 6740,
    "articleHtml": "Alle huizen op funda staan netjes opgeslagen in een SQL Server database. Normaal gesproken best praktisch, maar niet flexibel genoeg om <a href=\"http://glamour.tweakblogs.net/blog/5807/going-solr!.html\" rel=\"external\">al onze wensen</a> eenvoudig te vervullen. Vandaar de overstap naar een zoekplatform dat hier w&#xE9;l voor geoptimaliseerd is. Vandaag deel 1 in een technische serie over de overgang naar <a href=\"http://lucene.apache.org/solr/\" rel=\"external\">Solr</a>.<br>\r\n<br>\r\nBij onze zoektocht naar nieuwe software is het van belang dat deze snel is, want we serveren tijdens een beetje drukte makkelijk meer dan 300 pageviews per seconde. Daar ligt ook meteen het goede nieuws: Solr is blazingly fast! Op &#xE9;&#xE9;n instance haalden we al een performance van 1.000 req/s. En dat is niet alleen zoeken, maar inclusief het converteren van en naar .NET code. En het mooie is; het integreren binnen een bestaande .NET omgeving is helemaal niet zo lastig!<br><a name=\"more\"></a><br>\r\n<b>Faceted search</b><br>\r\nFaceted search is het clusteren van zoekresultaten in relevante categori&#xEB;n; om snel en intuitief door grote sets data heen te filteren:<br>\r\n<img src=\"http://weblogs.asp.net/blogs/drnetjes/CNET_faceted_search.jpg\" title=\"http://weblogs.asp.net/blogs/drnetjes/CNET_faceted_search.jpg\" alt=\"http://weblogs.asp.net/blogs/drnetjes/CNET_faceted_search.jpg\"><br>\r\nHet hele doel van dit implementatietraject is om dit eenvoudiger te laten verlopen, zoals in een <a href=\"http://glamour.tweakblogs.net/blog/5807/going-solr!.html\" rel=\"external\">eerder artikel</a> al eens uitgezet is.<br>\r\n<br>\r\n<b>Onze pre-Solr oplossing</b><br>\r\nVoordat we met Solr aan de slag gingen gebruikten we veel redundante kolommen op funda, waarbij we voor elk hiervan een COUNT(...) deden:<br>\r\n<img src=\"http://weblogs.asp.net/blogs/drnetjes/wide_table2.png\" title=\"http://weblogs.asp.net/blogs/drnetjes/wide_table2.png\" alt=\"http://weblogs.asp.net/blogs/drnetjes/wide_table2.png\"><br>\r\nWanneer een gebruiker dus zocht naar &apos;Amsterdam&apos;, dan zag een gemiddelde query er uit als:<br>\r\n<br>SQL:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_keyword\">SELECT</span>&#xA0;<span class=\"code_method\">COUNT</span>(<span class=\"code_ident\">hasGarden</span>),&#xA0;<span class=\"code_method\">COUNT</span>(<span class=\"code_ident\">yearBuilt1930_1940</span>),&#xA0;<span class=\"code_method\">COUNT</span>(<span class=\"code_ident\">yearBuilt1941_1950</span>),&#xA0;<span class=\"code_method\">COUNT</span>(<span class=\"code_ident\">etc</span>...)&#xA0;\n<br><span class=\"code_keyword\">FROM</span>&#xA0;<span class=\"code_ident\">KoopObjecten</span>\n<br><span class=\"code_keyword\">WHERE</span>&#xA0;<span class=\"code_ident\">city</span>&#xA0;=&#xA0;<span class=\"code_string\">&apos;Amsterdam&apos;</span></code></div></td></tr></table><br>\r\nNadelen van deze oplossing zijn:<ul><li>Toevoegen van nieuwe facetten is arbeidsintensief</li><li>Performance is niet acceptabel bij grote datasets</li></ul>En wanneer je dan <a href=\"http://www.funda.nl/koop/verkocht/zaandam/\" rel=\"external\">flink wat meer huizen</a> wil tonen op je site, gaan deze argumenten vrij zwaar wegen.<br>\r\n<br>\r\n<b>Welkom bij Solr</b><blockquote><div class=\"quote\"><a href=\"http://en.wikipedia.org/wiki/Solr\" rel=\"external\">Wikipedia:</a><br>\r\n&quot;Solr is an open source enterprise search server based on the Lucene Java search library, with XML/HTTP and JSON APIs, hit highlighting, faceted search, caching, replication, and a web administration interface.&quot;</div></blockquote>Je moet Solr dus ook niet als database zien, maar meer als een grote index. Wanneer je data upload naar de server wordt de data geanalyseerd, en wordt er een <a href=\"http://en.wikipedia.org/wiki/Inverted_index\" rel=\"external\">inverted index</a> van gebakken. Op deze manier kan er razendsnel worden gezocht. Voor meer info over de werking van de indexer kan je op de <a href=\"http://wiki.apache.org/solr/\" rel=\"external\">Solr wiki</a> terecht.<br>\r\n<br>\r\nNa installatie is het opvragen van zoekresultaten eenvoudig. Het is namelijk niets anders dan het opvragen van een URL in de browser:<br>\r\n<br>http:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><pre>1\n</pre></td><td class=\"phphighlightcode\"><div><pre>http://localhost:8983/solr/select?q=city:Amsterdam</pre></div></td></tr></table><br>\r\nEr wordt nu standaard XML teruggegeven:<br>\r\n<br>XML:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br></code></td><td class=\"phphighlightcode\"><div><code>&#xA0;&#xA0;&#xA0;&lt;<span class=\"code_ident\">response</span>&gt;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&lt;<span class=\"code_ident\">result</span>&#xA0;<span class=\"code_ident\">name</span>=<span class=\"code_string\">&quot;response&quot;</span>&#xA0;<span class=\"code_ident\">numFound</span>=<span class=\"code_string\">&quot;3&quot;</span>&#xA0;<span class=\"code_ident\">start</span>=<span class=\"code_string\">&quot;0&quot;</span>&gt;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&lt;<span class=\"code_ident\">doc</span>&gt;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&lt;<span class=\"code_ident\">long</span>&#xA0;<span class=\"code_ident\">name</span>=<span class=\"code_string\">&quot;id&quot;</span>&gt;3203&lt;/<span class=\"code_ident\">long</span>&gt;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&lt;<span class=\"code_ident\">str</span>&#xA0;<span class=\"code_ident\">name</span>=<span class=\"code_string\">&quot;city&quot;</span>&gt;Amsterdam&lt;/<span class=\"code_ident\">str</span>&gt;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&lt;<span class=\"code_ident\">str</span>&#xA0;<span class=\"code_ident\">name</span>=<span class=\"code_string\">&quot;steet&quot;</span>&gt;Keizersgracht&lt;/<span class=\"code_ident\">str</span>&gt;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&lt;<span class=\"code_ident\">bool</span>&#xA0;<span class=\"code_ident\">name</span>=<span class=\"code_string\">&quot;hasGarden&quot;</span>&gt;false&lt;/<span class=\"code_ident\">bool</span>&gt;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&lt;<span class=\"code_ident\">int</span>&#xA0;<span class=\"code_ident\">name</span>=<span class=\"code_string\">&quot;yearBuilt&quot;</span>&gt;1932&lt;/<span class=\"code_ident\">int</span>&gt;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&lt;/<span class=\"code_ident\">doc</span>&gt;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&lt;<span class=\"code_ident\">doc</span>&gt;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&lt;<span class=\"code_ident\">long</span>&#xA0;<span class=\"code_ident\">name</span>=<span class=\"code_string\">&quot;id&quot;</span>&gt;3205&lt;/<span class=\"code_ident\">long</span>&gt;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&lt;<span class=\"code_ident\">str</span>&#xA0;<span class=\"code_ident\">name</span>=<span class=\"code_string\">&quot;city&quot;</span>&gt;Amsterdam&lt;/<span class=\"code_ident\">str</span>&gt;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&lt;<span class=\"code_ident\">str</span>&#xA0;<span class=\"code_ident\">name</span>=<span class=\"code_string\">&quot;steet&quot;</span>&gt;Vondelstraat&lt;/<span class=\"code_ident\">str</span>&gt;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&lt;<span class=\"code_ident\">bool</span>&#xA0;<span class=\"code_ident\">name</span>=<span class=\"code_string\">&quot;hasGarden&quot;</span>&gt;true&lt;/<span class=\"code_ident\">bool</span>&gt;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&lt;<span class=\"code_ident\">int</span>&#xA0;<span class=\"code_ident\">name</span>=<span class=\"code_string\">&quot;yearBuilt&quot;</span>&gt;1938&lt;/<span class=\"code_ident\">int</span>&gt;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&lt;/<span class=\"code_ident\">doc</span>&gt;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&lt;<span class=\"code_ident\">doc</span>&gt;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&lt;<span class=\"code_ident\">long</span>&#xA0;<span class=\"code_ident\">name</span>=<span class=\"code_string\">&quot;id&quot;</span>&gt;4293&lt;/<span class=\"code_ident\">long</span>&gt;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&lt;<span class=\"code_ident\">str</span>&#xA0;<span class=\"code_ident\">name</span>=<span class=\"code_string\">&quot;city&quot;</span>&gt;Amsterdam&lt;/<span class=\"code_ident\">str</span>&gt;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&lt;<span class=\"code_ident\">str</span>&#xA0;<span class=\"code_ident\">name</span>=<span class=\"code_string\">&quot;steet&quot;</span>&gt;Trompstraat&lt;/<span class=\"code_ident\">str</span>&gt;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&lt;<span class=\"code_ident\">bool</span>&#xA0;<span class=\"code_ident\">name</span>=<span class=\"code_string\">&quot;hasGarden&quot;</span>&gt;true&lt;/<span class=\"code_ident\">bool</span>&gt;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&lt;<span class=\"code_ident\">int</span>&#xA0;<span class=\"code_ident\">name</span>=<span class=\"code_string\">&quot;yearBuilt&quot;</span>&gt;1949&lt;/<span class=\"code_ident\">int</span>&gt;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&lt;/<span class=\"code_ident\">doc</span>&gt;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&lt;/<span class=\"code_ident\">result</span>&gt;\n<br>&#xA0;&#xA0;&#xA0;&lt;/<span class=\"code_ident\">response</span>&gt;</code></div></td></tr></table><br>\r\nHet wordt echter pas interessant, als we aangeven dat we ook de faceted search willen hebben. Dit kan door extra parameters mee te geven:<br>\r\n<br>http:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><pre>1\n</pre></td><td class=\"phphighlightcode\"><div><pre>...&amp;facet.field=hasGarden&amp;facet.query=yearBuilt:[1930 TO 1940]&amp;facet.query=yearBuilt:[1941 TO 1950]</pre></div></td></tr></table><br>\r\nNaast de standaard resultaten voegt Solr nu een extra sectie toe aan het xml document, met daarin de facetten voor alle objecten binnen je zoekopdracht vallen (ook degene die je niet ziet door bijv. paging)!<br>\r\n<br>XML:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br></code></td><td class=\"phphighlightcode\"><div><code>&#xA0;&#xA0;&#xA0;&lt;<span class=\"code_ident\">response</span>&gt;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&lt;<span class=\"code_ident\">result</span>&#xA0;<span class=\"code_ident\">name</span>=<span class=\"code_string\">&quot;response&quot;</span>&#xA0;<span class=\"code_ident\">numFound</span>=<span class=\"code_string\">&quot;3&quot;</span>&#xA0;<span class=\"code_ident\">start</span>=<span class=\"code_string\">&quot;0&quot;</span>&gt;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;...\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&lt;/<span class=\"code_ident\">result</span>&gt;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&lt;<span class=\"code_ident\">lst</span>&#xA0;<span class=\"code_ident\">name</span>=<span class=\"code_string\">&quot;facet_counts&quot;</span>&gt;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&lt;<span class=\"code_ident\">lst</span>&#xA0;<span class=\"code_ident\">name</span>=<span class=\"code_string\">&quot;facet_queries&quot;</span>&gt;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&lt;<span class=\"code_ident\">int</span>&#xA0;<span class=\"code_ident\">name</span>=<span class=\"code_string\">&quot;yearBuilt:[1930&#xA0;TO&#xA0;1940]&quot;</span>&gt;2&lt;/<span class=\"code_ident\">int</span>&gt;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&lt;<span class=\"code_ident\">int</span>&#xA0;<span class=\"code_ident\">name</span>=<span class=\"code_string\">&quot;yearBuilt:[1941&#xA0;TO&#xA0;1950]&quot;</span>&gt;1&lt;/<span class=\"code_ident\">int</span>&gt;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&lt;/<span class=\"code_ident\">lst</span>&gt;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&lt;<span class=\"code_ident\">lst</span>&#xA0;<span class=\"code_ident\">name</span>=<span class=\"code_string\">&quot;facet_fields&quot;</span>&gt;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&lt;<span class=\"code_ident\">lst</span>&#xA0;<span class=\"code_ident\">name</span>=<span class=\"code_string\">&quot;hasGarden&quot;</span>&gt;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&lt;<span class=\"code_ident\">int</span>&#xA0;<span class=\"code_ident\">name</span>=<span class=\"code_string\">&quot;true&quot;</span>&gt;2&lt;/<span class=\"code_ident\">int</span>&gt;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&lt;<span class=\"code_ident\">int</span>&#xA0;<span class=\"code_ident\">name</span>=<span class=\"code_string\">&quot;false&quot;</span>&gt;1&lt;/<span class=\"code_ident\">int</span>&gt;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&lt;/<span class=\"code_ident\">lst</span>&gt;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&lt;/<span class=\"code_ident\">lst</span>&gt;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&lt;/<span class=\"code_ident\">lst</span>&gt;\n<br>&#xA0;&#xA0;&#xA0;&lt;/<span class=\"code_ident\">response</span>&gt;</code></div></td></tr></table><br>\r\n<br>\r\n<b>Zelf spelen?</b><br>\r\nNo problemo. Zorg dat Java is ge&#xEF;nstalleerd op je machine, en <a href=\"http://lucene.apache.org/solr/tutorial.html\" rel=\"external\">open deze tutorial</a>. Binnen een uur heb je Solr ge&#xEF;nstalleerd, geconfigureerd, data ge&#xFC;pload en je eerste queries gedaan. Solr werkt ook onder Windows zonder verdere problemen.<br>\r\n<br>\r\n<b>Tips en best practices voor Solr met .NET</b><ul><li>In tegenstelling tot wat in de tutorial staat, was het voor ons makkelijker zijn om Solr te hosten binnen Tomcat. Tomcat draait gewoon als Windows service; met alle voordelen van dien. Voor installatie: zie <a href=\"http://wiki.apache.org/solr/SolrTomcat\" rel=\"external\">SolrTomcat</a>.</li><li>Gebruik de 64-bits versie van Tomcat. Bij ons verdubbelde het aantal req/s.</li><li>Gebruik .NET&apos;s XmlReader om de XML van Solr te converteren naar .NET objecten. XPath is te traag.</li><li>Gebruik <a href=\"http://wiki.apache.org/solr/FilterQueryGuidance\" rel=\"external\">filter queries</a> (&quot;fq&quot; ipv &quot;q&quot;) als het mogelijk is. Deze worden namelijk gecached, en dat scheelt aanzienlijk in snelheid.</li></ul><b>Next up?</b><br>\r\nIn de nabije toekomst wordt deze serie vervolgd met een artikel over het synchroon houden van de data in SQL Server en in de Solr index!<br>\r\n<br>\r\nDit was een gastbijdrage van <a href=\"http://weblogs.asp.net/drnetjes/\" rel=\"external\">Dion Olsthoorn</a>, mede-developer bij funda.",
    "nextLink": "http://glamour.tweakblogs.net/blog/5932/javascript-state-van-snel-opvolgende-ajax-requests-bijhouden-%28%29.html",
    "comments": [
        {
            "author": "krvabo",
            "date": "vrijdag 14 januari 2011 15:01",
            "contentHtml": "Interessant wel om even te lezen, maar waarom hadden jullie eerst een count() ? Een dynamisch opgebouwde &apos;where&apos; lijkt me sneller?",
            "ownReply": false
        },
        {
            "author": "creator1988",
            "date": "vrijdag 14 januari 2011 15:03",
            "contentHtml": "<blockquote><div class=\"quote\"><a href=\"http://glamour.tweakblogs.net/blog/5948/solr-deel-1-introductie-tot-faceted-search.html#r_79724\">krvabo schreef op vrijdag 14 januari 2011 @ 15:01:</a><br>\r\nInteressant wel om even te lezen, maar waarom hadden jullie eerst een count() ? Een dynamisch opgebouwde &apos;where&apos; lijkt me sneller?</div></blockquote>Het is een combinatie. Stel dat we het facet &apos;oppervlakte&apos; willen tonen, voor de zoekopdracht &apos;Amsterdam, met tuin&apos;. Dan wordt de query:<br>\r\n<br>SQL:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_keyword\">SELECT</span>&#xA0;<span class=\"code_method\">COUNT</span>(<span class=\"code_ident\">opp_tot50</span>),&#xA0;<span class=\"code_method\">COUNT</span>(<span class=\"code_ident\">opp_50_100</span>),&#xA0;<span class=\"code_method\">COUNT</span>(<span class=\"code_ident\">opp_100_150</span>),&#xA0;<span class=\"code_ident\">etc</span>.\n<br><span class=\"code_keyword\">FROM</span>&#xA0;<span class=\"code_ident\">Koop</span>\n<br><span class=\"code_keyword\">WHERE</span>&#xA0;<span class=\"code_ident\">plaats</span>&#xA0;=&#xA0;<span class=\"code_string\">&apos;Amsterdam&apos;</span>&#xA0;<span class=\"code_keyword\">AND</span>&#xA0;<span class=\"code_ident\">indTuin</span>&#xA0;=&#xA0;<span class=\"code_number\">1</span></code></div></td></tr></table><br>\r\nDus die count is puur voor de facetten, anders moet je extreem veel queries doen.",
            "ownReply": true
        },
        {
            "author": "Xudonax",
            "date": "vrijdag 14 januari 2011 15:14",
            "contentHtml": "Solr is een erg mooi stukje software, gebruik het zelf icm Django (Python). Ik zit zelf ook erg te kijken naar de facetted search mogelijkheden en ga dit stukje dan ook zeker volgen. Het moeilijkste om op te zetten is in mijn ervaring Tomcat, en zelfs dat is bijzonder eenvoudig.<br>\r\n<br>\r\nEn ook eens tijd om te kijken of ik fq kan gaan gebruiken in plaats van q. Niet dat ik zoveel requests heb op mijn site, maar caching is altijd mooi <img src=\"http://tweakimg.net/g/s/smile.gif\" width=\"15\" height=\"15\" alt=\":)\">",
            "ownReply": false
        },
        {
            "author": "dionoid",
            "date": "vrijdag 14 januari 2011 16:10",
            "contentHtml": "Jan, dit ziet er strak uit. Dank voor je vertaling en opmaak van code &amp; sql !",
            "ownReply": false
        },
        {
            "author": "analog_",
            "date": "vrijdag 14 januari 2011 20:59",
            "contentHtml": "Ik heb dat probleem anders opgelost, elke &apos;facet&apos; een id, gekoppeld met een item (huis in jouw geval) met een value. Ik weet dat dit lichtjes goor is omdat het een database in een database begint te vormen maar t&apos;werkt bijzonder snel. De waardes worden op voorhand berekend tijdens het invoeren/updaten van de item.",
            "ownReply": false
        }
    ]
}