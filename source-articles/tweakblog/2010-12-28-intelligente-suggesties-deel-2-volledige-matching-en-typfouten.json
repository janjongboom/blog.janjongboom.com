{
    "title": "Intelligente suggesties, deel 2: Volledige matching en typfouten",
    "language": "nl",
    "link": "http://glamour.tweakblogs.net/blog/5842/intelligente-suggesties-deel-2-volledige-matching-en-typfouten.html",
    "date": "2010-12-28T13:23:00.000Z",
    "category": "Algoritmes",
    "views": 3569,
    "articleHtml": "Dit is deel 2 in een serie over de techniek uit een &apos;intelligente&apos; zoekbox.<ul><li><a href=\"http://glamour.tweakblogs.net/blog/5832/intelligente-suggesties-deel-1-introductie-en-startswith.html\" rel=\"external\">1. Introductie en &apos;StartsWith&apos;</a></li><li><b>2. Volledige matching en typfouten</b></li><li><a href=\"http://glamour.tweakblogs.net/blog/5849/intelligente-suggesties-deel-3-uitspraak-en-hierarchie.html\" rel=\"external\">3. Uitspraak en hierarchie</a></li><li><a href=\"http://glamour.tweakblogs.net/blog/5853/intelligente-suggesties-deel-4-aantallen-caching-en-protocol-buffers.html\" rel=\"external\">4. Aantallen, caching en Protocol Buffers</a></li></ul>Na gisteren in te zijn gegaan op de basis van de applicatie, vandaag gaan we dieper in op Burkhard-Keller trees voor effici&#xEB;nte volledige matching, en het ondervangen van typfouten.<br>\r\n<br>\r\n<b>Burkhard-Keller tree</b><br>\r\nEen BK-tree is een tree-based datastructuur om snel en effici&#xEB;nt woorden te vinden die op elkaar lijken. We moeten dus eerst een algoritme hebben dat woorden kan vergelijken, en een getal kan geven aan het verschil. Hiervoor heb ik eerder al de  <a href=\"http://glamour.tweakblogs.net/blog/5780/typfouten-levenshtein-en-burkhard-keller-trees.html\" rel=\"external\">Levenshtein-distance</a> voor gekozen, en als implementatie de &apos;YetiLevenshtein&apos; methode uit het <a href=\"http://corsis.svn.sourceforge.net/viewvc/corsis/trunk/Tenka.Text/Tenka.Text/TextMath.cs?revision=396&amp;view=markup#l_777\" rel=\"external\">Tenka.Text project</a>.<br>\r\n<br>\r\nDe 400.000 verschillende &apos;keys&apos; die we in deel 1 hebben bepaald gaan we nu rangschikken in deze boom. Als voorbeeld de volgende set:<br><a name=\"more\"></a><ul><li>Jan</li><li>Jas</li><li>Jaap</li><li>Jak</li><li>Aap</li></ul>Intern doet een BK-tree het volgende: begin bovenaan (bij &apos;Jan&apos; bv.), en kijk naar het verschil tussen het bovenste element en je volgende element (&apos;Jas&apos;). Het verschil is &apos;1&apos;; dus we tekenen van boven een tak naar beneden met waarde &apos;1&apos;.<br>\r\n<img src=\"http://www.100procentjan.nl/tweakers/bk.png\" title=\"http://www.100procentjan.nl/tweakers/bk.png\" alt=\"http://www.100procentjan.nl/tweakers/bk.png\"><br>\r\nWe doen nu hetzelfde voor het volgende element. Het verschil tussen &apos;Jan&apos; en &apos;Jaap&apos; is &apos;2&apos;.<br>\r\n<img src=\"http://www.100procentjan.nl/tweakers/bk(2).png\" title=\"http://www.100procentjan.nl/tweakers/bk(2).png\" alt=\"http://www.100procentjan.nl/tweakers/bk(2).png\"><br>\r\nBij &apos;Jak&apos; doen we dit weer. Het verschil tussen &apos;Jan&apos; en &apos;Jak&apos; is &apos;1&apos;. Er loopt al een tak met waarde &apos;1&apos; dus die lopen we af, en we vergelijken nu &apos;Jak&apos; met &apos;Jas&apos;. Verschil is &apos;1&apos;, dus we tekenen hier de nieuwe tak.<br>\r\n<img src=\"http://www.100procentjan.nl/tweakers/bk(3).png\" title=\"http://www.100procentjan.nl/tweakers/bk(3).png\" alt=\"http://www.100procentjan.nl/tweakers/bk(3).png\"><br>\r\nSame, same voor &apos;Aap&apos;. Verschil tussen &apos;Jan&apos; en &apos;Aap&apos; is &apos;2&apos;, verschil tussen &apos;Aap&apos; en &apos;Jaap&apos; is &apos;1&apos;.<br>\r\n<img src=\"http://www.100procentjan.nl/tweakers/bk(4).png\" title=\"http://www.100procentjan.nl/tweakers/bk(4).png\" alt=\"http://www.100procentjan.nl/tweakers/bk(4).png\"><br>\r\n<br>\r\nThe beauty of it is dat we met deze boom snel kunnen bepalen of een item in de boom voorkomt. Willen we weten of &apos;Jak&apos; in de boom staat, beginnen we bovenaan: verschil tussen &apos;Jan&apos; en &apos;Jak&apos; is 1, verschil tussen &apos;Jas&apos; en &apos;Jak&apos; is 1, verschil tussen &apos;Jak&apos; en &apos;Jak&apos; is 0: gevonden!<br>\r\n<img src=\"http://www.100procentjan.nl/tweakers/bk(5).png\" title=\"http://www.100procentjan.nl/tweakers/bk(5).png\" alt=\"http://www.100procentjan.nl/tweakers/bk(5).png\"><br>\r\nWe hebben nu dus maar 3 vergelijkingen hoeven doen, terwijl er 4 waardes zijn die dezelfde beginkarakters hebben. Dit loopt nog veel meer op wanneer je een gigantische set hebt, want je kunt met slechts 9 vergelijkingen alle 400.000 waardes afzoeken!<br>\r\n<br>\r\n<b>Fuzzy matching</b><br>\r\nEen BK-tree is ook goed in &apos;fuzzy&apos; matching, waarin er tussen de woorden een verschil mag zitten; ideaal om typfouten af te vangen. Bijvoorbeeld: we willen alle woorden in de boom vinden waarin het verschil met &apos;Aak&apos; maximaal 1 is. We beginnen bovenaan: verschil tussen &apos;Aak&apos; en &apos;Jan&apos; is 2, we gaan nu alle bomen af waarvoor geldt: waardeVanTak BETWEEN verschil - maximaalVerschil AND verschil + maximaalVerschil. In dit geval dus: 1, 2, 3.<br>\r\n<img src=\"http://www.100procentjan.nl/tweakers/bk(6).png\" title=\"http://www.100procentjan.nl/tweakers/bk(6).png\" alt=\"http://www.100procentjan.nl/tweakers/bk(6).png\"><br>\r\nWe doen nu weer hetzelfde: Verschil tussen &apos;Jas&apos; en &apos;Aak&apos; is 2, dus we gaan weer bomen 1, 2 en 3 af. Het verschil tussen &apos;Jak&apos; en &apos;Aak&apos; is 1, dit valt binnen de grens: &apos;Jak&apos; is dus een match. Er zijn geen takken hieronder; maar anders zouden we 0, 1 en 2 aflopen.<br>\r\nAan de andere kant is het verschil tussen &apos;Jaap&apos; en &apos;Aak&apos; ook 2, en tussen &apos;Aap&apos; en &apos;Aak&apos; 1. Ook hier geldt hetzelfde: &apos;Aap&apos; is een match.<br>\r\n<img src=\"http://www.100procentjan.nl/tweakers/bk(7).png\" title=\"http://www.100procentjan.nl/tweakers/bk(7).png\" alt=\"http://www.100procentjan.nl/tweakers/bk(7).png\"><br>\r\nZoals je ziet scheelt het in een kleine set niets, maar bij grote sets met veel verschil tussen de data heb je maar zo&apos;n 900 vergelijkingen nodig om alle 400.000 keys te evalueren! Typfouten worden hiermee makkelijk verholpen, aangezien &apos;Amstredam&apos; en &apos;Amsterda&apos; allebei &apos;Amsterdam&apos; als suggestie gaan vinden.<br>\r\n<br>\r\n<b>BK-tree in C#</b><br>\r\n<br>C#:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br>29<br>30<br>31<br>32<br>33<br>34<br>35<br>36<br>37<br>38<br>39<br>40<br>41<br>42<br>43<br>44<br>45<br>46<br>47<br>48<br>49<br>50<br>51<br>52<br>53<br>54<br>55<br>56<br>57<br>58<br>59<br>60<br>61<br>62<br>63<br>64<br>65<br>66<br>67<br>68<br>69<br>70<br>71<br>72<br>73<br>74<br>75<br></code></td><td class=\"phphighlightcode\"><div><code>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_keyword\">class</span>&#xA0;<span class=\"code_ident\">BkTreeNode</span>&lt;<span class=\"code_ident\">T</span>&gt;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">where</span>&#xA0;<span class=\"code_ident\">T</span>&#xA0;:&#xA0;<span class=\"code_keyword\">class</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_keyword\">string</span>&#xA0;<span class=\"code_ident\">Key</span>&#xA0;{&#xA0;<span class=\"code_ident\">get</span>;&#xA0;<span class=\"code_ident\">set</span>;&#xA0;}\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_ident\">Dictionary</span>&lt;<span class=\"code_keyword\">int</span>,&#xA0;<span class=\"code_ident\">BkTreeNode</span>&lt;<span class=\"code_ident\">T</span>&gt;&gt;&#xA0;<span class=\"code_ident\">Nodes</span>&#xA0;{&#xA0;<span class=\"code_ident\">get</span>;&#xA0;<span class=\"code_ident\">set</span>;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">private</span>&#xA0;<span class=\"code_ident\">List</span>&lt;<span class=\"code_ident\">T</span>&gt;&#xA0;<span class=\"code_ident\">Items</span>&#xA0;{&#xA0;<span class=\"code_ident\">get</span>;&#xA0;<span class=\"code_ident\">set</span>;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_method\">BkTreeNode</span>(<span class=\"code_keyword\">string</span>&#xA0;<span class=\"code_ident\">identifier</span>,&#xA0;<span class=\"code_ident\">T</span>&#xA0;<span class=\"code_ident\">item</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">Key</span>&#xA0;=&#xA0;<span class=\"code_ident\">identifier</span>;\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">Nodes</span>&#xA0;=&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_ident\">Dictionary</span>&lt;<span class=\"code_keyword\">int</span>,&#xA0;<span class=\"code_ident\">BkTreeNode</span>&lt;<span class=\"code_ident\">T</span>&gt;&gt;();\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">Items</span>&#xA0;=&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_ident\">List</span>&lt;<span class=\"code_ident\">T</span>&gt;();\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">if</span>(<span class=\"code_ident\">item</span>&#xA0;!=&#xA0;<span class=\"code_keyword\">null</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">Items</span>.<span class=\"code_method\">Add</span>(<span class=\"code_ident\">item</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_keyword\">void</span>&#xA0;<span class=\"code_method\">Add</span>(<span class=\"code_keyword\">string</span>&#xA0;<span class=\"code_ident\">identifier</span>,&#xA0;<span class=\"code_ident\">T</span>&#xA0;<span class=\"code_ident\">item</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;bereken&#xA0;de&#xA0;afstand</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">int</span>&#xA0;<span class=\"code_ident\">ix</span>&#xA0;=&#xA0;<span class=\"code_ident\">EditDistance</span>.<span class=\"code_method\">YetiLevenshtein</span>(<span class=\"code_ident\">identifier</span>,&#xA0;<span class=\"code_ident\">Key</span>);\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;als&#xA0;de&#xA0;afstand&#xA0;0&#xA0;is&#xA0;dan&#xA0;kennen&#xA0;we&#xA0;dit&#xA0;item&#xA0;al,&#xA0;we&#xA0;voegen&#xA0;het&#xA0;gebied&#xA0;toe&#xA0;aan&#xA0;de&#xA0;lijst</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">if</span>&#xA0;(<span class=\"code_ident\">ix</span>&#xA0;==&#xA0;<span class=\"code_number\">0</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">Items</span>.<span class=\"code_method\">Add</span>(<span class=\"code_ident\">item</span>);\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;als&#xA0;de&#xA0;afstand&#xA0;nog&#xA0;niet&#xA0;bestaat</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">if</span>&#xA0;(!<span class=\"code_ident\">Nodes</span>.<span class=\"code_method\">ContainsKey</span>(<span class=\"code_ident\">ix</span>))\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;voeg&#xA0;een&#xA0;nieuwe&#xA0;node&#xA0;toe</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">Nodes</span>.<span class=\"code_method\">Add</span>(<span class=\"code_ident\">ix</span>,&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_ident\">BkTreeNode</span>&lt;<span class=\"code_ident\">T</span>&gt;(<span class=\"code_ident\">identifier</span>,&#xA0;<span class=\"code_ident\">item</span>));\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">else</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;anders&#xA0;ga&#xA0;naar&#xA0;de&#xA0;node&#xA0;met&#xA0;dezelfde&#xA0;afstand</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">Nodes</span>[<span class=\"code_ident\">ix</span>].<span class=\"code_method\">Add</span>(<span class=\"code_ident\">identifier</span>,&#xA0;<span class=\"code_ident\">item</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_ident\">List</span>&lt;<span class=\"code_ident\">T</span>&gt;&#xA0;<span class=\"code_method\">Query</span>(<span class=\"code_keyword\">string</span>&#xA0;<span class=\"code_ident\">searchTerm</span>,&#xA0;<span class=\"code_keyword\">int</span>&#xA0;<span class=\"code_ident\">maxDistance</span>)\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">List</span>&lt;<span class=\"code_ident\">T</span>&gt;&#xA0;<span class=\"code_ident\">nodes</span>&#xA0;=&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_ident\">List</span>&lt;<span class=\"code_ident\">T</span>&gt;();\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;verschil&#xA0;tussen&#xA0;zoektermen</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">int</span>&#xA0;<span class=\"code_ident\">levenshteinDiff</span>&#xA0;=&#xA0;<span class=\"code_ident\">EditDistance</span>.<span class=\"code_method\">YetiLevenshtein</span>(<span class=\"code_ident\">searchTerm</span>,&#xA0;<span class=\"code_keyword\">this</span>.<span class=\"code_ident\">Key</span>);\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">if</span>&#xA0;(<span class=\"code_ident\">levenshteinDiff</span>&#xA0;&lt;=&#xA0;<span class=\"code_ident\">maxDistance</span>)&#xA0;<span class=\"code_ident\">nodes</span>.<span class=\"code_method\">AddRange</span>(<span class=\"code_keyword\">this</span>.<span class=\"code_ident\">Items</span>);\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;alle&#xA0;bomen&#xA0;die&#xA0;qua&#xA0;distance</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_comment\">//&#xA0;dist&#xA0;BETWEEN&#xA0;verschil&#xA0;-&#xA0;maxDistance&#xA0;AND&#xA0;verschil&#xA0;+&#xA0;maxDistance</span>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">foreach</span>&#xA0;(<span class=\"code_ident\">var</span>&#xA0;<span class=\"code_ident\">distance</span>&#xA0;<span class=\"code_keyword\">in</span>&#xA0;<span class=\"code_ident\">Enumerable</span>.<span class=\"code_method\">Range</span>(<span class=\"code_ident\">levenshteinDiff</span>&#xA0;-&#xA0;<span class=\"code_ident\">maxDistance</span>,&#xA0;(<span class=\"code_ident\">maxDistance</span>&#xA0;*&#xA0;<span class=\"code_number\">2</span>)&#xA0;+&#xA0;<span class=\"code_number\">1</span>))\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">if</span>&#xA0;(<span class=\"code_ident\">Nodes</span>.<span class=\"code_method\">ContainsKey</span>(<span class=\"code_ident\">distance</span>))\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">nodes</span>.<span class=\"code_method\">AddRange</span>(<span class=\"code_ident\">Nodes</span>[<span class=\"code_ident\">distance</span>].<span class=\"code_method\">Query</span>(<span class=\"code_ident\">searchTerm</span>,&#xA0;<span class=\"code_ident\">maxDistance</span>));\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_ident\">nodes</span>.<span class=\"code_method\">ToList</span>();\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">public</span>&#xA0;<span class=\"code_keyword\">override</span>&#xA0;<span class=\"code_keyword\">string</span>&#xA0;<span class=\"code_method\">ToString</span>()\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_ident\">Key</span>&#xA0;+&#xA0;<span class=\"code_string\">&quot;&#xA0;(&quot;</span>&#xA0;+&#xA0;<span class=\"code_ident\">Nodes</span>.<span class=\"code_ident\">Count</span>&#xA0;+&#xA0;<span class=\"code_string\">&quot;)&quot;</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}</code></div></td></tr></table><br>\r\n<br>\r\n<b>Gebruik</b><br>\r\n<br>C#:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_ident\">BkTreeNode</span>&lt;<span class=\"code_ident\">GeoGebied</span>&gt;&#xA0;<span class=\"code_ident\">root</span>&#xA0;=&#xA0;<span class=\"code_keyword\">new</span>&#xA0;<span class=\"code_ident\">BkTreeNode</span>&lt;<span class=\"code_ident\">GeoGebied</span>&gt;(<span class=\"code_string\">&quot;amsterdam&quot;</span>,&#xA0;<span class=\"code_keyword\">null</span>);&#xA0;<span class=\"code_comment\">//&#xA0;kies&#xA0;een&#xA0;triviale&#xA0;waarde</span>\n<br>\n<br><span class=\"code_comment\">//&#xA0;doe&#xA0;dit&#xA0;voor&#xA0;al&#xA0;je&#xA0;items&#xA0;in&#xA0;de&#xA0;lijst</span>\n<br><span class=\"code_ident\">root</span>.<span class=\"code_method\">Add</span>(<span class=\"code_string\">&quot;rotterdam&quot;</span>,&#xA0;<span class=\"code_ident\">geoGebiedRotterdam</span>);&#xA0;\n<br>\n<br><span class=\"code_ident\">List</span>&lt;<span class=\"code_ident\">GeoGebied</span>&gt;&#xA0;<span class=\"code_ident\">queryResult</span>&#xA0;=&#xA0;<span class=\"code_ident\">root</span>.<span class=\"code_method\">Query</span>(<span class=\"code_string\">&quot;amsteldam&quot;</span>,&#xA0;<span class=\"code_number\">1</span>);\n<br><span class=\"code_ident\">Assert</span>.<span class=\"code_method\">That</span>(<span class=\"code_ident\">queryResult</span>.<span class=\"code_method\">Count</span>(),&#xA0;<span class=\"code_ident\">Is</span>.<span class=\"code_method\">EqualTo</span>(<span class=\"code_number\">1</span>));&#xA0;<span class=\"code_comment\">//&#xA0;yay!</span></code></div></td></tr></table><br>\r\n<br>\r\n<b>Morgen...</b><br>\r\nGaan we in op hierarchie, en het gebruik van SoundEx om op basis van uitspraak alternatieven te vinden. Stay tuned!",
    "nextLink": "http://glamour.tweakblogs.net/blog/5832/intelligente-suggesties-deel-1-introductie-en-startswith.html",
    "comments": [
        {
            "author": "Sjakskus",
            "date": "woensdag 29 december 2010 00:20",
            "contentHtml": "Ik heb me 2 jaar bezig gehouden met datamatching (vooral adressen en namen)<br>\r\nWel grappig om iemand anders zijn aanpak te zien.<br>\r\n<br>\r\nheb je ook de longest common sequence methode al eens bekeken?<br>\r\n<br>\r\ndeze kan voor jouw doel ook nuttig zijn.<br>\r\n<br>\r\nSoundex was voor mijn doelen wat minder nuttig",
            "ownReply": false
        },
        {
            "author": "creator1988",
            "date": "woensdag 29 december 2010 10:52",
            "contentHtml": "<blockquote><div class=\"quote\"><a href=\"http://glamour.tweakblogs.net/blog/5842/intelligente-suggesties-deel-2-volledige-matching-en-typfouten.html#r_78309\">Sjakskus schreef op woensdag 29 december 2010 @ 00:20:</a><br>\r\nIk heb me 2 jaar bezig gehouden met datamatching (vooral adressen en namen)<br>\r\nWel grappig om iemand anders zijn aanpak te zien.<br>\r\n<br>\r\nheb je ook de longest common sequence methode al eens bekeken?</div></blockquote>Nee, kende deze niet. Maar an sich ziet de suffix tree er sowieso best handig uit; ook om het StartsWith probleem effici&#xEB;nter op te lossen. Zal er eens in detail naar gaan kijken. Danke!",
            "ownReply": true
        },
        {
            "author": "-RetroX-",
            "date": "donderdag 30 december 2010 11:18",
            "contentHtml": "Zeg ik het goed als elke term in je dictionary een bk-tree krijgt?<br>\r\n<br>\r\nHoeveel tijd kost dan het genereren van alle trees voor je volledige dictionary?",
            "ownReply": false
        },
        {
            "author": "creator1988",
            "date": "donderdag 30 december 2010 12:39",
            "contentHtml": "<blockquote><div class=\"quote\"><a href=\"http://glamour.tweakblogs.net/blog/5842/intelligente-suggesties-deel-2-volledige-matching-en-typfouten.html#r_78393\">-RetroX- schreef op donderdag 30 december 2010 @ 11:18:</a><br>\r\nZeg ik het goed als elke term in je dictionary een bk-tree krijgt?<br>\r\n<br>\r\nHoeveel tijd kost dan het genereren van alle trees voor je volledige dictionary?</div></blockquote>Ongeveer 15 secondes op 1 core van een consumenten E6600 (2.4 GHz). Dit is alleen het bouwen van de dictionary van woorddelen, geen soundex etc.",
            "ownReply": true
        },
        {
            "author": "-RetroX-",
            "date": "donderdag 30 december 2010 12:46",
            "contentHtml": "heb je een willekeurig woord genomen als root van je tree of heb je nog gelet op het bevatten van veel voorkomende (s,t,e,r,n,a,d) letters of juist medeklinkers of juist minder voorkomende tekens (x, c, q, y)?",
            "ownReply": false
        },
        {
            "author": "creator1988",
            "date": "donderdag 30 december 2010 13:52",
            "contentHtml": "<blockquote><div class=\"quote\"><a href=\"http://glamour.tweakblogs.net/blog/5842/intelligente-suggesties-deel-2-volledige-matching-en-typfouten.html#r_78396\">-RetroX- schreef op donderdag 30 december 2010 @ 12:46:</a><br>\r\nheb je een willekeurig woord genomen als root van je tree of heb je nog gelet op het bevatten van veel voorkomende (s,t,e,r,n,a,d) letters of juist medeklinkers of juist minder voorkomende tekens (x, c, q, y)?</div></blockquote>Amsterdam is mijn root (en daar komen geheel toevallig s, t, e, r, a en d in voor <img src=\"http://tweakimg.net/g/s/smile.gif\" width=\"15\" height=\"15\" alt=\":)\"> )",
            "ownReply": true
        },
        {
            "author": "dragontje124",
            "date": "dinsdag 04 januari 2011 22:39",
            "contentHtml": "ik heb geprobeerd een eigen implementatie te schrijven in php+mysql<br>\r\nik heb daarvoor 2 tabellen in mysql aangemaakt:<br>\r\n(met in de woorden tabel een hoop gemeentes)<br>\r\nwoorden:<br>\r\n-id<br>\r\n-woord<br>\r\n<br>\r\nbktree:<br>\r\n-id<br>\r\n-parentid<br>\r\n-nodeid<br>\r\n-distance<br>\r\n<br>\r\nhet volgende stukje code is mijn php implementatie<br>\r\n<br>PHP:<br><table class=\"phphighlight\"><tr><td class=\"phphighlightline\"><code>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>10<br>11<br>12<br>13<br>14<br>15<br>16<br>17<br>18<br>19<br>20<br>21<br>22<br>23<br>24<br>25<br>26<br>27<br>28<br>29<br>30<br></code></td><td class=\"phphighlightcode\"><div><code><span class=\"code_preproc\">&lt;?php</span>\n<br><span class=\"code_method\">mysql_connect</span>(<span class=\"code_string\">&apos;127.0.0.1&apos;</span>,<span class=\"code_string\">&apos;root&apos;</span>,<span class=\"code_string\">&apos;&apos;</span>);\n<br><span class=\"code_method\">mysql_select_db</span>(<span class=\"code_string\">&apos;fuzzy&apos;</span>);\n<br><span class=\"code_ident\">$lijst</span>&#xA0;=&#xA0;<span class=\"code_keyword\">array</span>();\n<br><span class=\"code_ident\">$zoeken</span>&#xA0;=&#xA0;<span class=\"code_string\">&quot;Amsteldam&quot;</span>;\n<br><span class=\"code_ident\">$maxverschil</span>&#xA0;=&#xA0;<span class=\"code_number\">3</span>;\n<br><span class=\"code_keyword\">function</span>&#xA0;<span class=\"code_method\">findNodes</span>(<span class=\"code_ident\">$nodeId</span>,<span class=\"code_ident\">$searchTerm</span>,<span class=\"code_ident\">$maxdifference</span>)&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">global</span>&#xA0;<span class=\"code_ident\">$lijst</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">$select</span>&#xA0;=&#xA0;<span class=\"code_method\">mysql_query</span>(<span class=\"code_string\">&quot;SELECT&#xA0;woord&#xA0;FROM&#xA0;woorden&#xA0;WHERE&#xA0;id&#xA0;=&#xA0;&quot;</span>.<span class=\"code_ident\">$nodeId</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">$word</span>&#xA0;=&#xA0;<span class=\"code_method\">mysql_fetch_array</span>(<span class=\"code_ident\">$select</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">$distance</span>&#xA0;=&#xA0;<span class=\"code_method\">levenshtein</span>(<span class=\"code_ident\">$word</span>[<span class=\"code_string\">&apos;woord&apos;</span>],<span class=\"code_ident\">$searchTerm</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">$min</span>&#xA0;=&#xA0;<span class=\"code_ident\">$distance</span>-<span class=\"code_ident\">$maxdifference</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">$max</span>&#xA0;=&#xA0;<span class=\"code_ident\">$distance</span>+<span class=\"code_ident\">$maxdifference</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">if</span>(<span class=\"code_ident\">$min</span>&#xA0;&lt;<span class=\"code_number\">0</span>&#xA0;)&#xA0;<span class=\"code_ident\">$min</span>&#xA0;=&#xA0;<span class=\"code_number\">0</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">$select_nodes</span>&#xA0;=&#xA0;<span class=\"code_method\">mysql_query</span>(<span class=\"code_string\">&quot;SELECT&#xA0;nodeid&#xA0;FROM&#xA0;bktree&#xA0;WHERE&#xA0;parentid&#xA0;=&#xA0;&quot;</span>.<span class=\"code_ident\">$nodeId</span>.<span class=\"code_string\">&quot;&#xA0;AND&#xA0;distance&#xA0;BETWEEN&#xA0;&quot;</span>.<span class=\"code_ident\">$min</span>.<span class=\"code_string\">&quot;&#xA0;AND&#xA0;&quot;</span>.<span class=\"code_ident\">$max</span>)&#xA0;<span class=\"code_keyword\">OR</span>&#xA0;<span class=\"code_keyword\">die</span>(<span class=\"code_method\">mysql_error</span>());\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">$count</span>&#xA0;=&#xA0;<span class=\"code_method\">mysql_num_rows</span>(<span class=\"code_ident\">$select_nodes</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">if</span>(<span class=\"code_ident\">$distance</span>&#xA0;&lt;=<span class=\"code_ident\">$maxdistance</span>)&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_ident\">$lijst</span>[]&#xA0;=&#xA0;<span class=\"code_ident\">$word</span>[<span class=\"code_string\">&apos;woord&apos;</span>];\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">while</span>(<span class=\"code_ident\">$node</span>&#xA0;=&#xA0;<span class=\"code_method\">mysql_fetch_array</span>(<span class=\"code_ident\">$select_nodes</span>))&#xA0;&#xA0;&#xA0;&#xA0;{\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_method\">findNodes</span>(<span class=\"code_ident\">$node</span>[<span class=\"code_string\">&apos;nodeid&apos;</span>],<span class=\"code_ident\">$searchTerm</span>,<span class=\"code_ident\">$maxdistance</span>);\n<br>&#xA0;&#xA0;&#xA0;&#xA0;}\n<br>&#xA0;&#xA0;&#xA0;&#xA0;<span class=\"code_keyword\">return</span>&#xA0;<span class=\"code_keyword\">true</span>;\n<br>&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;&#xA0;\n<br>}\n<br><span class=\"code_ident\">$select</span>&#xA0;=&#xA0;<span class=\"code_method\">mysql_query</span>(<span class=\"code_string\">&quot;SELECT&#xA0;parentid&#xA0;FROM&#xA0;bktree&#xA0;WHERE&#xA0;id=1&quot;</span>);\n<br><span class=\"code_ident\">$root</span>&#xA0;=&#xA0;<span class=\"code_method\">mysql_fetch_assoc</span>(<span class=\"code_ident\">$select</span>);\n<br><span class=\"code_method\">findNodes</span>(<span class=\"code_ident\">$root</span>[<span class=\"code_string\">&apos;parentid&apos;</span>],<span class=\"code_ident\">$zoeken</span>,<span class=\"code_ident\">$maxverschil</span>);\n<br><span class=\"code_method\">print_r</span>(<span class=\"code_ident\">$lijst</span>);\n<br><span class=\"code_preproc\">?&gt;</span></code></div></td></tr></table><br>\r\nwerkt nog prima met 1400 gemeentes<p class=\"edit\">[Reactie gewijzigd op dinsdag 04 januari 2011 23:06]</p>",
            "ownReply": false
        }
    ]
}